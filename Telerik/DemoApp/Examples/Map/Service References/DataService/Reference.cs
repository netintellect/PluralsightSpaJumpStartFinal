//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50303.0
// 
namespace Telerik.Windows.Examples.Map.DataService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RadMapDataService.StoreType", Namespace="http://schemas.datacontract.org/2004/07/Examples.Web")]
    public enum RadMapDataServiceStoreType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Area = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Market = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Store = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RadMapDataService.StoreLocation", Namespace="http://schemas.datacontract.org/2004/07/Examples.Web")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Telerik.Windows.Examples.Map.DataService.RadMapDataServiceSalesArea))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreData))]
    public partial class RadMapDataServiceStoreLocation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private string StoreNameField;
        
        private Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreType StoreTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StoreName {
            get {
                return this.StoreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StoreNameField, value) != true)) {
                    this.StoreNameField = value;
                    this.RaisePropertyChanged("StoreName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreType StoreType {
            get {
                return this.StoreTypeField;
            }
            set {
                if ((this.StoreTypeField.Equals(value) != true)) {
                    this.StoreTypeField = value;
                    this.RaisePropertyChanged("StoreType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RadMapDataService.SalesArea", Namespace="http://schemas.datacontract.org/2004/07/Examples.Web")]
    public partial class RadMapDataServiceSalesArea : Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreLocation {
        
        private Telerik.Windows.Examples.Map.DataService.RadMapDataServiceLocation[] AreaField;
        
        private string FillField;
        
        private Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreData[] StoresField;
        
        private string StrokeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Telerik.Windows.Examples.Map.DataService.RadMapDataServiceLocation[] Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fill {
            get {
                return this.FillField;
            }
            set {
                if ((object.ReferenceEquals(this.FillField, value) != true)) {
                    this.FillField = value;
                    this.RaisePropertyChanged("Fill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreData[] Stores {
            get {
                return this.StoresField;
            }
            set {
                if ((object.ReferenceEquals(this.StoresField, value) != true)) {
                    this.StoresField = value;
                    this.RaisePropertyChanged("Stores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stroke {
            get {
                return this.StrokeField;
            }
            set {
                if ((object.ReferenceEquals(this.StrokeField, value) != true)) {
                    this.StrokeField = value;
                    this.RaisePropertyChanged("Stroke");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RadMapDataService.StoreData", Namespace="http://schemas.datacontract.org/2004/07/Examples.Web")]
    public partial class RadMapDataServiceStoreData : Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreLocation {
        
        private int ManagersField;

        private decimal SalesTotalField;

        private decimal SalesTargetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Managers {
            get {
                return this.ManagersField;
            }
            set {
                if ((this.ManagersField.Equals(value) != true)) {
                    this.ManagersField = value;
                    this.RaisePropertyChanged("Managers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SalesTotal {
            get {
                return this.SalesTotalField;
            }
            set {
                if ((this.SalesTotalField.Equals(value) != true)) {
                    this.SalesTotalField = value;
                    this.RaisePropertyChanged("SalesTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SalesTarget {
            get {
                return this.SalesTargetField;
            }
            set {
                if ((this.SalesTargetField.Equals(value) != true))
                {
                    this.SalesTargetField = value;
                    this.RaisePropertyChanged("SalesTarget");
                }
            }
        } 
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RadMapDataService.Location", Namespace="http://schemas.datacontract.org/2004/07/Examples.Web")]
    public partial class RadMapDataServiceLocation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="DataService.RadMapDataService")]
    public interface RadMapDataService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:RadMapDataService/GetStores", ReplyAction="urn:RadMapDataService/GetStoresResponse")]
        System.IAsyncResult BeginGetStores(double upperLeftLat, double upperLeftLong, double lowerRightLat, double lowerRightLong, Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreType storeType, System.AsyncCallback callback, object asyncState);
        
        Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreLocation[] EndGetStores(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:RadMapDataService/GetSalesAreas", ReplyAction="urn:RadMapDataService/GetSalesAreasResponse")]
        System.IAsyncResult BeginGetSalesAreas(System.AsyncCallback callback, object asyncState);
        
        Telerik.Windows.Examples.Map.DataService.RadMapDataServiceSalesArea[] EndGetSalesAreas(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RadMapDataServiceChannel : Telerik.Windows.Examples.Map.DataService.RadMapDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreLocation[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreLocation[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSalesAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSalesAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Telerik.Windows.Examples.Map.DataService.RadMapDataServiceSalesArea[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Telerik.Windows.Examples.Map.DataService.RadMapDataServiceSalesArea[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RadMapDataServiceClient : System.ServiceModel.ClientBase<Telerik.Windows.Examples.Map.DataService.RadMapDataService>, Telerik.Windows.Examples.Map.DataService.RadMapDataService {
        
        private BeginOperationDelegate onBeginGetStoresDelegate;
        
        private EndOperationDelegate onEndGetStoresDelegate;
        
        private System.Threading.SendOrPostCallback onGetStoresCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSalesAreasDelegate;
        
        private EndOperationDelegate onEndGetSalesAreasDelegate;
        
        private System.Threading.SendOrPostCallback onGetSalesAreasCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RadMapDataServiceClient() {
        }
        
        public RadMapDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RadMapDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RadMapDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RadMapDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetStoresCompletedEventArgs> GetStoresCompleted;
        
        public event System.EventHandler<GetSalesAreasCompletedEventArgs> GetSalesAreasCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Telerik.Windows.Examples.Map.DataService.RadMapDataService.BeginGetStores(double upperLeftLat, double upperLeftLong, double lowerRightLat, double lowerRightLong, Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreType storeType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStores(upperLeftLat, upperLeftLong, lowerRightLat, lowerRightLong, storeType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreLocation[] Telerik.Windows.Examples.Map.DataService.RadMapDataService.EndGetStores(System.IAsyncResult result) {
            return base.Channel.EndGetStores(result);
        }
        
        private System.IAsyncResult OnBeginGetStores(object[] inValues, System.AsyncCallback callback, object asyncState) {
            double upperLeftLat = ((double)(inValues[0]));
            double upperLeftLong = ((double)(inValues[1]));
            double lowerRightLat = ((double)(inValues[2]));
            double lowerRightLong = ((double)(inValues[3]));
            Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreType storeType = ((Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreType)(inValues[4]));
            return ((Telerik.Windows.Examples.Map.DataService.RadMapDataService)(this)).BeginGetStores(upperLeftLat, upperLeftLong, lowerRightLat, lowerRightLong, storeType, callback, asyncState);
        }
        
        private object[] OnEndGetStores(System.IAsyncResult result) {
            Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreLocation[] retVal = ((Telerik.Windows.Examples.Map.DataService.RadMapDataService)(this)).EndGetStores(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStoresCompleted(object state) {
            if ((this.GetStoresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStoresCompleted(this, new GetStoresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStoresAsync(double upperLeftLat, double upperLeftLong, double lowerRightLat, double lowerRightLong, Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreType storeType) {
            this.GetStoresAsync(upperLeftLat, upperLeftLong, lowerRightLat, lowerRightLong, storeType, null);
        }
        
        public void GetStoresAsync(double upperLeftLat, double upperLeftLong, double lowerRightLat, double lowerRightLong, Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreType storeType, object userState) {
            if ((this.onBeginGetStoresDelegate == null)) {
                this.onBeginGetStoresDelegate = new BeginOperationDelegate(this.OnBeginGetStores);
            }
            if ((this.onEndGetStoresDelegate == null)) {
                this.onEndGetStoresDelegate = new EndOperationDelegate(this.OnEndGetStores);
            }
            if ((this.onGetStoresCompletedDelegate == null)) {
                this.onGetStoresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStoresCompleted);
            }
            base.InvokeAsync(this.onBeginGetStoresDelegate, new object[] {
                        upperLeftLat,
                        upperLeftLong,
                        lowerRightLat,
                        lowerRightLong,
                        storeType}, this.onEndGetStoresDelegate, this.onGetStoresCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Telerik.Windows.Examples.Map.DataService.RadMapDataService.BeginGetSalesAreas(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSalesAreas(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Telerik.Windows.Examples.Map.DataService.RadMapDataServiceSalesArea[] Telerik.Windows.Examples.Map.DataService.RadMapDataService.EndGetSalesAreas(System.IAsyncResult result) {
            return base.Channel.EndGetSalesAreas(result);
        }
        
        private System.IAsyncResult OnBeginGetSalesAreas(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Telerik.Windows.Examples.Map.DataService.RadMapDataService)(this)).BeginGetSalesAreas(callback, asyncState);
        }
        
        private object[] OnEndGetSalesAreas(System.IAsyncResult result) {
            Telerik.Windows.Examples.Map.DataService.RadMapDataServiceSalesArea[] retVal = ((Telerik.Windows.Examples.Map.DataService.RadMapDataService)(this)).EndGetSalesAreas(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSalesAreasCompleted(object state) {
            if ((this.GetSalesAreasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSalesAreasCompleted(this, new GetSalesAreasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSalesAreasAsync() {
            this.GetSalesAreasAsync(null);
        }
        
        public void GetSalesAreasAsync(object userState) {
            if ((this.onBeginGetSalesAreasDelegate == null)) {
                this.onBeginGetSalesAreasDelegate = new BeginOperationDelegate(this.OnBeginGetSalesAreas);
            }
            if ((this.onEndGetSalesAreasDelegate == null)) {
                this.onEndGetSalesAreasDelegate = new EndOperationDelegate(this.OnEndGetSalesAreas);
            }
            if ((this.onGetSalesAreasCompletedDelegate == null)) {
                this.onGetSalesAreasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSalesAreasCompleted);
            }
            base.InvokeAsync(this.onBeginGetSalesAreasDelegate, null, this.onEndGetSalesAreasDelegate, this.onGetSalesAreasCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Telerik.Windows.Examples.Map.DataService.RadMapDataService CreateChannel() {
            return new RadMapDataServiceClientChannel(this);
        }
        
        private class RadMapDataServiceClientChannel : ChannelBase<Telerik.Windows.Examples.Map.DataService.RadMapDataService>, Telerik.Windows.Examples.Map.DataService.RadMapDataService {
            
            public RadMapDataServiceClientChannel(System.ServiceModel.ClientBase<Telerik.Windows.Examples.Map.DataService.RadMapDataService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetStores(double upperLeftLat, double upperLeftLong, double lowerRightLat, double lowerRightLong, Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreType storeType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = upperLeftLat;
                _args[1] = upperLeftLong;
                _args[2] = lowerRightLat;
                _args[3] = lowerRightLong;
                _args[4] = storeType;
                System.IAsyncResult _result = base.BeginInvoke("GetStores", _args, callback, asyncState);
                return _result;
            }
            
            public Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreLocation[] EndGetStores(System.IAsyncResult result) {
                object[] _args = new object[0];
                Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreLocation[] _result = ((Telerik.Windows.Examples.Map.DataService.RadMapDataServiceStoreLocation[])(base.EndInvoke("GetStores", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSalesAreas(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSalesAreas", _args, callback, asyncState);
                return _result;
            }
            
            public Telerik.Windows.Examples.Map.DataService.RadMapDataServiceSalesArea[] EndGetSalesAreas(System.IAsyncResult result) {
                object[] _args = new object[0];
                Telerik.Windows.Examples.Map.DataService.RadMapDataServiceSalesArea[] _result = ((Telerik.Windows.Examples.Map.DataService.RadMapDataServiceSalesArea[])(base.EndInvoke("GetSalesAreas", _args, result)));
                return _result;
            }
        }
    }
}
