<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:schedule="clr-namespace:Telerik.Windows.Controls.ScheduleView;assembly=Telerik.Windows.Controls.ScheduleView"
		xmlns:scheduleView="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.ScheduleView"
		xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
		xmlns:dragDrop="clr-namespace:Telerik.Windows.DragDrop;assembly=Telerik.Windows.Controls">

    <telerik:Windows8Colors x:Key="Windows8Colors" />
    <SolidColorBrush x:Key="MarkerBrush" Color="{Binding Source={StaticResource Windows8Colors}, Path=Palette.MarkerColor}" />
    <SolidColorBrush x:Key="StrongBrush" Color="{Binding Source={StaticResource Windows8Colors}, Path=Palette.StrongColor}" />
    <SolidColorBrush x:Key="MainBrush" Color="{Binding Source={StaticResource Windows8Colors}, Path=Palette.MainColor}" />
    <SolidColorBrush x:Key="ValidationBrush" Color="{Binding Source={StaticResource Windows8Colors}, Path=Palette.ValidationColor}" />

    <telerik:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
	<telerik:RecurrenceStateIsExeptionToVisibilityConverter x:Key="RecurrenceStateIsExeptionToVisibilityConverter" />
	<telerik:RecurrenceStateIsOccurenceToVisibilityConverter x:Key="RecurrenceStateIsOccurenceToVisibilityConverter" />
	<telerik:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" />
	<telerik:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
	<telerik:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    
    <ImageSource x:Key="AppointmentItem_Recurrence">/Telerik.Windows.Controls.ScheduleView;component/Themes/Images/AppointmentException_Metro.png</ImageSource>
	<ImageSource x:Key="AppointmentItem_Exception">/Telerik.Windows.Controls.ScheduleView;component/Themes/Images/AppointmentRecurrence_Metro.png</ImageSource>

	<ControlTemplate x:Key="LowImportanceMarkTemplate">
		<Grid>
			<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" CornerRadius="5"
					Background="{StaticResource MainBrush}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
				<Grid>
					<Path
							Data="F1M329.667,242.3496L324.512,236.8906L324.512,241.3296L331.411,248.6386L338.28,241.3636L338.28,236.9226L333.152,242.3496L333.152,230.0356L329.667,230.0356z"
							Fill="{StaticResource MarkerBrush}" Stretch="Fill" Margin="2,1" />
				</Grid>
			</Border>
		</Grid>
	</ControlTemplate>

	<ControlTemplate x:Key="HighImportanceMarkTemplate">
		<Grid>
			<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" CornerRadius="5"
					Background="{StaticResource ValidationBrush}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
				<Grid>
					<Rectangle Fill="{StaticResource MainBrush}" Height="2" Margin="4,0,4,1" VerticalAlignment="Bottom" />
					<Rectangle Fill="{StaticResource MainBrush}" Margin="4,1,4,4" />
				</Grid>
			</Border>
		</Grid>
	</ControlTemplate>

	<Style x:Key="ImportanceMarkContentControlStyle" TargetType="ContentControl">
		<Setter Property="Width" Value="10" />
		<Setter Property="Height" Value="10" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
	</Style>

	<Style x:Key="DeleteButtonStyle" TargetType="telerik:RadButton">
		<Setter Property="Width" Value="10" />
		<Setter Property="Height" Value="10" />
		<Setter Property="Margin" Value="1 4 2 0" />
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation BeginTime="0:0:0.0" Duration="0:0:0" To="1"
												Storyboard.TargetName="Icon" Storyboard.TargetProperty="Opacity" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation BeginTime="0:0:0.0" Duration="0:0:0" To="1"
												Storyboard.TargetName="Icon" Storyboard.TargetProperty="Opacity" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle Fill="Transparent" />
						<Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
								Fill="{StaticResource StrongBrush}" VerticalAlignment="Center"
								HorizontalAlignment="Center" />
						<Path x:Name="Icon" Stroke="{StaticResource MainBrush}" StrokeThickness="1.5"
								Data="M0,0 L6,6 M6,0 L0,6" Width="6" Height="6" Stretch="None"
								HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.7" />
					</Grid>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="AppointmentItemVerticalStyleBase" TargetType="scheduleView:AppointmentItem" BasedOn="{StaticResource AppointmentItemBaseStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="scheduleView:AppointmentItem">
					<Grid x:Name="Root">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled" />
								<VisualState x:Name="Normal">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0:0:0.200"
												Storyboard.TargetName="MouseOverGrid"
												Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0.200">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation BeginTime="0:0:0.0" Duration="0:0:0.200" To="0"
												Storyboard.TargetName="MouseOverGrid"
												Storyboard.TargetProperty="Opacity" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0:0:0.400"
												Storyboard.TargetName="MouseOverGrid"
												Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0.0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation BeginTime="0:0:0.200" Duration="0:0:0.200" To="1"
												Storyboard.TargetName="MouseOverGrid"
												Storyboard.TargetProperty="Opacity" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ReadOnly">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0:0:0.0"
												Storyboard.TargetName="ReadOnlyVisual"
												Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0.0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InlineEditing" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0:0:0"
												Storyboard.TargetName="SelectionVisual"
												Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<!--Small appointment rendering visual-->
						<Grid>
							<Border x:Name="LineVisual" Width="3" Margin="{TemplateBinding DurationMarkerMargin}"
									Background="{StaticResource StrongBrush}" BorderBrush="Transparent"
									BorderThickness="0 1" />
							<Border x:Name="PART_TimeMarker" Width="3" Margin="{TemplateBinding DurationMarkerMargin}"
									Background="{Binding Path=TimeMarker.TimeMarkerBrush}" BorderBrush="Transparent"
									BorderThickness="0 1"
									Visibility="{Binding Path=TimeMarker, Converter={StaticResource NullToVisibilityConverter}}" />
						</Grid>

						<Grid Grid.Column="1">
							<Grid.InputBindings>
								<MouseBinding MouseAction="LeftDoubleClick"
										Command="telerik:RadScheduleViewCommands.EditAppointment" />
							</Grid.InputBindings>
							
							<Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}" />
							<Border x:Name="SelectionVisual" Visibility="Collapsed"
									Background="{StaticResource StrongBrush}" Opacity="0.3" />
							<Border x:Name="PART_Category" Background="{Binding Path=Category.CategoryBrush}" />
							<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
							<Rectangle x:Name="ReadOnlyVisual" Visibility="Collapsed"
									Fill="{StaticResource MarkerBrush}" Opacity="0.3" />
							<Grid Margin="-1 1 0 1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<Path Grid.ColumnSpan="2" Grid.Row="0" Data="M3.5,0 L7,4 L0,4 z"
										Fill="{StaticResource MainBrush}" Margin="2 4 2 2" Opacity="0.7" Height="4"
										Width="7" VerticalAlignment="Top" Stretch="Fill" HorizontalAlignment="Center"
										Visibility="{TemplateBinding StartIndicatorVisibility}" />

								<StackPanel Grid.Column="0" Grid.Row="1" VerticalAlignment="Top" Margin="2 2 0 0"
										Orientation="Horizontal">
									<Image x:Name="RecurrenceMark" Margin="2 2 1 1" Width="10" Height="10"
											Visibility="{Binding Path=RecurrenceState, Converter={StaticResource RecurrenceStateIsExeptionToVisibilityConverter}}"
											HorizontalAlignment="Left"
											Source="{StaticResource AppointmentItem_Recurrence}" />
									<Image x:Name="ExceptionMark" Margin="2 2 1 1" Width="10" Height="10"
											Visibility="{Binding Path=RecurrenceState, Converter={StaticResource RecurrenceStateIsOccurenceToVisibilityConverter}}"
											HorizontalAlignment="Left"
											Source="{StaticResource AppointmentItem_Exception}" />
									<ContentControl x:Name="HighImportanceMark"
											Template="{StaticResource HighImportanceMarkTemplate}" Margin="2 1 1 0"
											Style="{StaticResource ImportanceMarkContentControlStyle}"
											Visibility="{Binding Importance, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=High}" />
									<ContentControl x:Name="LowImportanceMark"
											Template="{StaticResource LowImportanceMarkTemplate}" Margin="2 1 1 0"
											Style="{StaticResource ImportanceMarkContentControlStyle}"
											Visibility="{Binding Importance, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Low}" />
								</StackPanel>

								<ContentPresenter Grid.Column="1" Grid.Row="1" Margin="{TemplateBinding Padding}"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

								<Path Grid.ColumnSpan="2" Grid.Row="2" Data="M7,0 L3.5,4 L0,0 z" Height="4" Width="7"
										Stretch="Fill" Fill="{StaticResource MainBrush}" Margin="2 2 2 4" Opacity="0.7"
										VerticalAlignment="Bottom" HorizontalAlignment="Center"
										Visibility="{TemplateBinding EndIndicatorVisibility}" />
							</Grid>
							<Grid x:Name="MouseOverGrid" Visibility="Collapsed" Opacity="0">
								<Border x:Name="MouseOverVisual" Background="{StaticResource StrongBrush}" Opacity="0.1" />
								<Border x:Name="PART_StartResizeGrip" Background="Transparent"
										HorizontalAlignment="Stretch" VerticalAlignment="Top" Cursor="SizeNS"
										dragDrop:DragDropManager.AllowDrag="True" Height="6"
										Visibility="{Binding IsAllDay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />

								<Border x:Name="PART_EndResizeGrip" Background="Transparent"
										HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Cursor="SizeNS"
										dragDrop:DragDropManager.AllowDrag="True" Height="6"
										Visibility="{Binding IsAllDay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />

								<telerik:RadButton x:Name="DeleteButton" Style="{StaticResource DeleteButtonStyle}"
										Command="telerik:RadScheduleViewCommands.DeleteAppointment" ClickMode="Press"
										CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
										Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
										IsTabStop="False">
								</telerik:RadButton>
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
