<local:ViewBase x:Class="Telerik.Windows.QuickStart.SingleExample"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mscorlib="clr-namespace:System;assembly=mscorlib"
		xmlns:localPrism="clr-namespace:Telerik.Windows.QuickStart;assembly=QuickStart.Common"
		xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"        
		xmlns:telerikCodeViewer="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.CodeEditor"
		xmlns:telerikQuickStart="clr-namespace:Telerik.Windows.Controls.QuickStart;assembly=QuickStart.Common"
		xmlns:telerikDocumentsHTML="clr-namespace:Telerik.Windows.Documents.FormatProviders.Html;assembly=Telerik.Windows.Documents.FormatProviders.Html"
		xmlns:transitionControl="clr-namespace:Telerik.Windows.Controls.TransitionControl;assembly=Telerik.Windows.Controls"
		xmlns:local="clr-namespace:Telerik.Windows.QuickStart"
		xmlns:touch="clr-namespace:Telerik.Windows.Input.Touch;assembly=Telerik.Windows.Controls"
		x:Name="rootSingleExample" Style="{StaticResource ViewBaseRegularStyle}"
		mc:Ignorable="d" 
		d:DesignHeight="600" d:DesignWidth="1024">

    <UserControl.Resources>
        <LinearGradientBrush x:Key="Icon.Fill" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FFAD499C" Offset="1"/>
            <GradientStop Color="#FF79256B"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Icon.BackFlip" Color="#FF550D49" />
        <SolidColorBrush x:Key="Icon.LowImportance" Color="#FFD9DEE0" />

        <SolidColorBrush x:Key="Control.Border" Color="#FF79256B" />

        <local:FriendlyExampleNameConverter x:Key="FriendlyExampleNameConverter" />
        <local:HtmlFontConverter x:Key="HtmlFontConverter" />

        <DataTemplate x:Key="DescriptionHeaderIconTemplate">
            <Border BorderBrush="#66728A97" BorderThickness="0 1 0 0" Height="24" VerticalAlignment="Top">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Path HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10 4 16 0" Fill="{StaticResource Icon.LowImportance}" SnapsToDevicePixels="True" Stretch="None" Width="8" Height="14" Data="M0,5 L6,5 L6,12 L8,12 L8,14 L0,14 L0,12 L2,12 L2,7 L0,7 z M4,0 C5,0 6,1 6,2 C6,3 5,4 4,4 C3,4 2,3 2,2 C2,1 3,0 4,0 z" />
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="ConfiguratorHeaderIconTemplate">
            <Border BorderBrush="#66728A97" BorderThickness="0 1 0 0" Height="24" VerticalAlignment="Top">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>

                <Path Margin="6 4 12 0" Width="16" Height="16" HorizontalAlignment="Right" VerticalAlignment="Top" Fill="{StaticResource Icon.LowImportance}" Stretch="None" Data="M1.4,12.9 C1.1,12.9 0.9,13.1 0.7,13.2 C0.5,13.4 0.4,13.7 0.4,13.9 C0.4,14.5 0.8,14.9 1.4,14.9 C2.0,14.9 2.4,14.5 2.4,13.9 C2.4,13.4 2.0,12.9 1.4,12.9 z M10.4,0 C10.8,1.1E-07 11.3,0.0 11.6,0.1 L11.7,0.1 L9.5,2.3 L9.6,5.7 L13.1,5.8 L15.2,3.7 L15.2,3.7 C15.3,4.1 15.4,4.5 15.4,5 C15.4,7.7 13.2,10 10.4,10 C9.6,10 8.8,9.8 8.1,9.4 L8.1,9.4 L2.4,14.9 C1.6,15.7 0.8,15.7 0.2,15.1 C-0.3,14.5 -0.3,13.7 0.3,12.9 L6.0,7.3 L5.9,7.2 C5.6,6.5 5.4,5.8 5.4,5 C5.4,2.2 7.6,1.1E-07 10.4,0 z" />
            </Border>
        </DataTemplate>

        <Style x:Key="NavigationButtonBaseStyle" TargetType="Button">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="3 -2" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent" Padding="4 2">
                            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Text.MouseOver}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HomeButtonStyle" TargetType="Button" BasedOn="{StaticResource NavigationButtonBaseStyle}">
            <Setter Property="Margin" Value="10 0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Padding="10 0" Background="Transparent">
                            <Grid Height="17" Width="17">
                                <Path Stroke="{StaticResource Icon.Fill}" StrokeThickness="2" Stretch="None" Data="M0.8,9.7 L8.5,2 16.2,9.7" />
                                <Path Fill="{StaticResource Icon.Fill}" Stretch="None" Data="M3,16 L3,10 8.5,4.5 14,10 14,16 10,16 10,10 7,10 7,16Z" />
                                <ContentPresenter RecognizesAccessKey="True" Width="0" Height="0" Opacity="0" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AllControlsButtonStyle" TargetType="Button" BasedOn="{StaticResource NavigationButtonBaseStyle}">
            <Setter Property="Margin" Value="10 0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent" Padding="10 0">
                            <StackPanel Orientation="Horizontal">
                                <Grid Width="16" Height="12" VerticalAlignment="Center">
                                    <Rectangle Width="4" Height="5" Margin="0 0 12 7" RadiusX="1" RadiusY="1" Fill="{StaticResource Icon.Fill}" />
                                    <Rectangle Width="4" Height="5" Margin="0 7 12 0" RadiusX="1" RadiusY="1" Fill="{StaticResource Icon.Fill}" />
                                    <Rectangle Width="4" Height="5" Margin="6 0 6 7" RadiusX="1" RadiusY="1" Fill="{StaticResource Icon.Fill}" />
                                    <Rectangle Width="4" Height="5" Margin="6 7 6 0" RadiusX="1" RadiusY="1" Fill="{StaticResource Icon.Fill}" />
                                    <Rectangle Width="4" Height="5" Margin="12 0 0 7" RadiusX="1" RadiusY="1" Fill="{StaticResource Icon.Fill}" />
                                    <Rectangle Width="4" Height="5" Margin="12 7 0 0" RadiusX="1" RadiusY="1" Fill="{StaticResource Icon.Fill}" />
                                </Grid>
                                <ContentPresenter RecognizesAccessKey="True" Margin="3 0 0 0" VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PreviousExampleButtonStyle" TargetType="Button" BasedOn="{StaticResource NavigationButtonBaseStyle}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Padding="5 0" Background="Transparent">
                            <Grid>
                                <Path x:Name="ArrowIcon" Storyboard.TargetName="ArrowIcon" Height="16" Width="11" Stretch="None" Stroke="{StaticResource Icon.Fill}" Data="M9,2 L3,8 L9,14" StrokeThickness="4" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" RenderTransformOrigin="0.5 0.5">
                                    <Path.RenderTransform>
                                        <ScaleTransform />
                                    </Path.RenderTransform>
                                </Path>
                                <ContentPresenter RecognizesAccessKey="True" Width="0" Height="0" Opacity="0" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="1.2" DecelerationRatio="1" Storyboard.TargetName="ArrowIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.15" />
                                            <DoubleAnimation To="1.2" DecelerationRatio="1" Storyboard.TargetName="ArrowIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.15" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="1" DecelerationRatio="1" Storyboard.TargetName="ArrowIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.15" />
                                            <DoubleAnimation To="1" DecelerationRatio="1" Storyboard.TargetName="ArrowIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.15" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NextExampleButtonStyle" TargetType="Button" BasedOn="{StaticResource NavigationButtonBaseStyle}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Padding="5 0" Background="Transparent">
                            <Grid>
                                <TextBlock x:Name="NextExampleCaption" Margin="36 0 10 0" Text="NEXT EXAMPLE" VerticalAlignment="Center" FontSize="11">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <TextBlock x:Name="NextExampleName" Margin="36 0 10 0" Text="{Binding Text}" VerticalAlignment="Center" Opacity="0">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="-20" Y="-1" />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <Grid HorizontalAlignment="Left">
                                    <Path Width="6" Height="5" Data="M0,0 L6,5 0,5Z" Fill="{StaticResource Icon.BackFlip}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 -5 -5.9 0" />
                                    <Path Width="6" Height="5" Data="M0,0 L6,0 0,5Z" Fill="{StaticResource Icon.BackFlip}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0 0 -5.9 -8.9" />
                                    <Rectangle Height="42" Width="26" Margin="0 -5 0 -9">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFAD499C" Offset="0.996"/>
                                                <GradientStop Color="#FF79256B"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Path x:Name="ArrowIcon" Height="18" Width="13" Stretch="None" Stroke="White" Data="M4,3 L10,9 L4,15" StrokeThickness="4" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <ScaleTransform />
                                        </Path.RenderTransform>
                                    </Path>
                                    <ContentPresenter RecognizesAccessKey="True" Width="0" Height="0" Opacity="0" VerticalAlignment="Center" />
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="1.2" DecelerationRatio="1" Storyboard.TargetName="ArrowIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.15" />
                                            <DoubleAnimation To="1.2" DecelerationRatio="1" Storyboard.TargetName="ArrowIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.15" />
                                            <DoubleAnimation To="-20" DecelerationRatio="1" Storyboard.TargetName="NextExampleCaption" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.25" />
                                            <DoubleAnimation To="0" DecelerationRatio="1" Storyboard.TargetName="NextExampleCaption" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.25" />
                                            <DoubleAnimation To="0" DecelerationRatio="1" Storyboard.TargetName="NextExampleName" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.25" />
                                            <DoubleAnimation To="1" DecelerationRatio="1" Storyboard.TargetName="NextExampleName" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.25" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="1" DecelerationRatio="1" Storyboard.TargetName="ArrowIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.15" />
                                            <DoubleAnimation To="1" DecelerationRatio="1" Storyboard.TargetName="ArrowIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.15" />
                                            <DoubleAnimation To="0" DecelerationRatio="1" Storyboard.TargetName="NextExampleCaption" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.25" />
                                            <DoubleAnimation To="1" DecelerationRatio="1" Storyboard.TargetName="NextExampleCaption" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.25" />
                                            <DoubleAnimation To="-20" DecelerationRatio="1" Storyboard.TargetName="NextExampleName" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="0:0:0.25" />
                                            <DoubleAnimation To="0" DecelerationRatio="1" Storyboard.TargetName="NextExampleName" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.25" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LeftNavigationSeparatorStyle" TargetType="ContentPresenter">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Rectangle Height="24" Width="20">
                            <Rectangle.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0.2"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                    <GradientStop Color="#99545454" Offset="0.638"/>
                                </LinearGradientBrush>
                            </Rectangle.OpacityMask>
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="1.071,0.346" StartPoint="0.285,0.742">
                                    <GradientStop Color="#FFC6C6C6" Offset="0.241"/>
                                    <GradientStop Color="#4CFFFFFF" Offset="0.86"/>
                                    <GradientStop Color="Transparent" Offset="0.233"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RightNavigationSeparatorStyle" TargetType="ContentPresenter">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Rectangle Height="24" Width="20">
                            <Rectangle.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0.2"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                    <GradientStop Color="#99545454" Offset="0.638"/>
                                </LinearGradientBrush>
                            </Rectangle.OpacityMask>
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.871,0.603" StartPoint="0.127,0.208">
                                    <GradientStop Color="#FFC6C6C6" Offset="0.664"/>
                                    <GradientStop Color="#4CFFFFFF"/>
                                    <GradientStop Color="Transparent" Offset="0.668"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DescriptionExpanderButtonStyle" TargetType="ToggleButton">
            <Setter Property="Content" Value="SHOW DESCR_IPTION" />
            <Setter Property="Foreground" Value="#FFC0C1C5" />
            <Setter Property="FontSize" Value="9.333" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Padding="0 5" Background="Transparent">
                            <Grid>
                                <Path x:Name="ExpandIcon" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10 2" Stroke="{StaticResource Icon.Fill}" Data="M1,1 L4,4 7,1" Width="8" Height="5" StrokeThickness="1.8" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
                                <ContentPresenter RecognizesAccessKey="True" Margin="24 0 0 0" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource Text.MouseOver}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandIcon" Property="Data" Value="M1,4 L4,1 7,4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="HIDE DESCR_IPTION" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Text.MouseOver}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DescriptionExpanderStyle" TargetType="Expander">
            <Setter Property="IsExpanded" Value="True" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ContentPresenter Grid.RowSpan="2" ContentTemplate="{StaticResource DescriptionHeaderIconTemplate}" />
                                <local:LayoutClipBox x:Name="ContentHost" LayoutAnimationDuration="0">
                                    <ContentPresenter Grid.Row="0" />
                                </local:LayoutClipBox>
                                <ToggleButton x:Name="ExpandButton" Grid.Row="1" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" Style="{StaticResource DescriptionExpanderButtonStyle}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="1" DecelerationRatio="1" Duration="0:0:0.33" Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="(local:LayoutClipBox.LayoutScaleY)" />
                                            <ObjectAnimationUsingKeyFrames Duration="0:0:0.0" Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0" DecelerationRatio="1" Duration="0:0:0.33" Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="(local:LayoutClipBox.LayoutScaleY)" />
                                            <ObjectAnimationUsingKeyFrames Duration="0:0:0.33" Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.33">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ControlExamplesButtonStyle" TargetType="Button">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="#01010101">
                            <Grid Margin="4 0">
                                <Path HorizontalAlignment="Right" Stroke="{StaticResource Icon.Fill}" Data="M1,1 L4,4 7,1" Width="8" Height="5" StrokeThickness="1.8" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
                                <ContentPresenter Margin="0 0 12 0" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Text.MouseOver}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ControlExamplesDropDownStyle" TargetType="{x:Type local:DropDownButton}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Margin="0 0 4 0" Source="{Binding Converter={StaticResource ControlToIconConverter}, ConverterParameter='16x16'}" Width="16" Height="16" VerticalAlignment="Center" />
                            <TextBlock Text="More " VerticalAlignment="Center" />
                            <TextBlock Text="{Binding Text}" VerticalAlignment="Center" />
                            <ContentPresenter Content=" _Examples" RecognizesAccessKey="True" VerticalAlignment="Center" />
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="DropDownContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ItemsControl Margin="10 0 10 10" MinWidth="200" MinHeight="100" ItemsSource="{Binding ExampleGroups}" IsTabStop="False">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="0 0 20 0">
                                        <TextBlock Text="{Binding Name}" Style="{StaticResource SubtitleTextStyle}" Margin="0 15 0 0" FontSize="14" />
                                        <ItemsControl ItemsSource="{Binding NonTouchExamples}" IsTabStop="False">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Button Content="{Binding}" ContentTemplateSelector="{StaticResource TextAndIcon7x7TemplateSelector}" Style="{StaticResource NavigationButtonBaseStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="{Binding}" />
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Vertical" MaxHeight="500" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:DropDownButton}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Button x:Name="PART_OpenButton" Height="28" HorizontalAlignment="Left" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Style="{StaticResource ControlExamplesButtonStyle}" />

                                <Grid x:Name="PART_Popup" Visibility="{TemplateBinding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalAlignment="Top" Margin="0,0,-5000,-5000"  HorizontalAlignment="Left">
                                    <Grid x:Name="AllControlsPopupRoot" Margin="10 26 10 10">
                                        <Grid x:Name="ShadowBackground">
                                            <Grid.Effect>
                                                <DropShadowEffect BlurRadius="7" ShadowDepth="1" Opacity="0.5" />
                                            </Grid.Effect>
                                            <Path Margin="50 0 0 0" Width="20" Height="10" HorizontalAlignment="Left" VerticalAlignment="Top" Data="M0,10 L10,0 20,10Z" Stroke="{StaticResource ContentControl.Border}" Fill="{StaticResource ContentControl.Background}" Stretch="None" />
                                            <Border BorderThickness="1 0 1 1" CornerRadius="3" Margin="10 9 10 10" BorderBrush="{StaticResource ContentControl.Border}" Background="{StaticResource ContentControl.Background}" />
                                            <Border BorderThickness="0 1 0 0" CornerRadius="3 0 0 0" Margin="10 9 0 0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="41" Height="10" BorderBrush="{StaticResource ContentControl.Border}" />
                                            <Border BorderThickness="0 1 0 0" CornerRadius="0 3 0 0" Margin="69 9 10 0" VerticalAlignment="Top" Height="10" BorderBrush="{StaticResource ContentControl.Border}" />
                                        </Grid>

                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                    </Grid>
                                    <Border x:Name="border">
                                        <Border.OpacityMask>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" >
                                                <GradientStopCollection>
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFFFFFFF" Offset="1" />
                                                    <GradientStop Color="#00000000" Offset="1" />
                                                    <GradientStop Color="#00000000" Offset="1" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush>
                                        </Border.OpacityMask>

                                        <ContentPresenter x:Name="contentPresenter" ContentSource="DropDownContent" Margin="20 36 20 20" />
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsOpen" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>


                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.33" Storyboard.TargetName="AllControlsPopupRoot" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.33" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.33" DecelerationRatio="1" Storyboard.TargetName="AllControlsPopupRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" />

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.33" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.33" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>

                                            <DoubleAnimation From="1" To="0" Duration="0:0:0.25" Storyboard.TargetName="AllControlsPopupRoot" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                            <DoubleAnimation From="1" To="0" Duration="0:0:0.20" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                            <DoubleAnimation From="1" To="0" Duration="0:0:0.33" DecelerationRatio="1" Storyboard.TargetName="AllControlsPopupRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" />

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.33" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.33" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CurrentExampleHeaderStyle" TargetType="{x:Type ContentPresenter}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Rectangle>
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFAD499C" Offset="1"/>
                                        <GradientStop Color="#FF79256B" Offset="0.8"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Path Data="M0.5,12.123379 L222.42691,12.123379 L222.50447,37.605885 C176.70126,29.843027 107.90886,19.052942 0.5,19.052942 z" Height="28.501" Stretch="Fill" VerticalAlignment="Center">
                                <Path.Fill>
                                    <LinearGradientBrush EndPoint="0.501,0.859" StartPoint="0.5,-0.011">
                                        <GradientStop Color="#FF8E347D" Offset="1"/>
                                        <GradientStop Color="#0079256B" Offset="0.12"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Rectangle HorizontalAlignment="Right" Width="9">
                                <Rectangle.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Offset="0.011"/>
                                        <GradientStop Color="White" Offset="0.121"/>
                                    </LinearGradientBrush>
                                </Rectangle.OpacityMask>
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.081,0.314" StartPoint="1.063,0.296">
                                        <GradientStop Color="#FF600751" Offset="0.185"/>
                                        <GradientStop Color="#0070125E" Offset="0.598"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <StackPanel VerticalAlignment="Center" Margin="0 6">
                                <TextBlock Margin="15 0 0 0" Text="{Binding ExampleGroup.Control.Text}" Foreground="#FFD0B3CB" FontSize="20" FontFamily="Myriad Pro Light" TextWrapping="Wrap"/>
                                <TextBlock Margin="15 0 0 0" Text="{Binding Text}" Foreground="White" FontSize="14.667" FontFamily="Myriad Pro Light" TextWrapping="Wrap"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ViewModeCheckBoxButtonStyle" TargetType="CheckBox">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Background="Transparent">
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsChecked" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="{StaticResource Text.MouseOver}" />
                </MultiTrigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Text.MouseOver}" />
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TabControlContentOnlyStyle" TargetType="TabControl">
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0,-2,0,0"/>
            <Setter Property="touch:TouchManager.IsTouchHitTestVisible" Value="True" />
        </Style>

        <DataTemplate x:Key="ExampleTemplate">
            <Border>
                <Grid Margin="10" HorizontalAlignment="{Binding Path=Content.HorizontalAlignment, ElementName=Content}" VerticalAlignment="{Binding Path=Content.VerticalAlignment, ElementName=Content}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Border Grid.RowSpan="2" CornerRadius="5" BorderBrush="#FFAAB9C0" BorderThickness="1" Background="White">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="7" ShadowDepth="2" Opacity="0.5" />
                        </Border.Effect>
                    </Border>
                    <Border x:Name="Header" CornerRadius="5 5 0 0" Background="#FF79256B" BorderThickness="0 0 0 1" BorderBrush="#FFAAB9C0">
                        <Grid>
                            <Path Width="223" Height="29" HorizontalAlignment="Right" VerticalAlignment="Top" Data="M0.5,12.1 L222.4,12.1 L222.5,37.6 C176.7,29.8 107.9,19.0 0.5,19.0 z" Stretch="Fill" StrokeThickness="0" >
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0.0" EndPoint="0.5,0.8">
                                        <GradientStop Offset="1" Color="#FF8E347D"/>
                                        <GradientStop Offset="0.1" Color="#0079256B"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <ContentPresenter Content="{Binding ElementName=Content, Path=(ContentPresenter.Content).(telerikQuickStart:QuickStart.ExampleHeader)}" TextBlock.Foreground="White" TextBlock.FontSize="24" TextBlock.FontFamily="Myriad Pro Light" />
                        </Grid>
                    </Border>
                    <AdornerDecorator Margin="5" Grid.Row="1">
                        <ContentPresenter x:Name="Content" Content="{Binding}" />
                    </AdornerDecorator>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding ElementName=Content, Path=(ContentPresenter.Content).(telerikQuickStart:QuickStart.ExampleHeader)}" Value="{x:Null}">
                    <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <Style x:Key="ListBoxThemingStyle" TargetType="ListBox" BasedOn="{StaticResource QSFListBoxStyle}">
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource QSFListBoxItemStyle}">
                        <Setter Property="Margin" Value="3" />
                        <Setter Property="Padding" Value="3 0 0 0" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <RadioButton IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource QSFRadioButtonStyle}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" >
                                        <RadioButton.ContentTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding}"/>
                                            </DataTemplate>
                                        </RadioButton.ContentTemplate>
                                    </RadioButton>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TabItem Template-->
        <ControlTemplate x:Key="QSFTabItemTemplate" TargetType="telerik:RadTabItem">
            <Grid x:Name="wrapper" >
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStateGroup">
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverVisual"
									Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Selected">
                            <Storyboard>
                                <DoubleAnimation Duration="0" Storyboard.TargetName="SelectionVisual"
									Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderElement"
									Storyboard.TargetProperty="Foreground" Duration="0">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <SolidColorBrush Color="Black" />
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="SelectedMouseOver">
                            <Storyboard>
                                <DoubleAnimation Duration="0" Storyboard.TargetName="SelectionVisual"
									Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderElement"
									Storyboard.TargetProperty="Foreground" Duration="0">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <SolidColorBrush Color="Black" />
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
									Storyboard.TargetName="HeaderElement" To="0.5"
									Duration="0:0:0.1" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="PlacementStates">
                        <VisualState x:Name="HorizontalTop" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Unfocused" />
                        <VisualState x:Name="Focused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <!-- normal -->
                <Border x:Name="NormalVisual" Margin="2 1 2 0"
					BorderBrush="{TemplateBinding BorderBrush}"
					Background="{TemplateBinding Background}"
					BorderThickness="{TemplateBinding BorderThickness}" />

                <!-- mouseover-->
                <Border x:Name="MouseOverVisual" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" Margin="2 1 2 0"
					BorderBrush="White"/>

                <!-- select-->
                <Border x:Name="SelectionVisual" Opacity="0" Margin="2 0 2 0"
					Background="White"/>

                <!--Content-->
                <telerik:LayoutTransformControl x:Name="OrientationTransform">
                    <ContentControl x:Name="HeaderElement" IsTabStop="False"
						Content="{TemplateBinding Header}"
						ContentTemplate="{TemplateBinding HeaderTemplate}"
						Foreground="{TemplateBinding Foreground}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
						SnapsToDevicePixels="True"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						Margin="{TemplateBinding Padding}" />
                </telerik:LayoutTransformControl>
            </Grid>
        </ControlTemplate>

        <!--RadTabItem-->
        <Style x:Key="QSFRadTabItemStyle" TargetType="telerik:RadTabItem">
            <Setter Property="MinWidth" Value="5"/>
            <Setter Property="BorderThickness" Value="1 1 1 0" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="6 4" />
            <Setter Property="Template" Value="{StaticResource QSFTabItemTemplate}" />
        </Style>

        <!-- CodeViewer templates -->
        <DataTemplate x:Key="XAMLContentDataTemplate">
            <telerikCodeViewer:RadCodeEditor x:Name="codeViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" FontFamily="Consolas" FontSize="12" AllowScaling="false" >
                <telerikCodeViewer:RadCodeEditor.Resources>
                    <Style TargetType="ScrollBar" BasedOn="{StaticResource QSFScrollBarStyle}">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </telerikCodeViewer:RadCodeEditor.Resources>
            </telerikCodeViewer:RadCodeEditor>
        </DataTemplate>

        <DataTemplate x:Key="CodeContentDataTemplate">
            <telerik:RadTabControl>
                <telerik:RadTabItem Style="{StaticResource QSFRadTabItemStyle}" Header="C#" />
                <telerik:RadTabItem Style="{StaticResource QSFRadTabItemStyle}" Header="VB.NET" />
                <telerik:RadTabControl.ItemTemplate>
                    <DataTemplate>
                        <telerikCodeViewer:RadCodeEditor  x:Name="codeViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" 
														  FontFamily="Consolas" FontSize="12" AllowScaling="false"
														  Foreground="Black">
                            <telerikCodeViewer:RadCodeEditor.Resources>
                                <Style TargetType="ScrollBar" BasedOn="{StaticResource QSFScrollBarStyle}">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"/>

                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </telerikCodeViewer:RadCodeEditor.Resources>
                        </telerikCodeViewer:RadCodeEditor>
                    </DataTemplate>
                </telerik:RadTabControl.ItemTemplate>
            </telerik:RadTabControl>
        </DataTemplate>

        <Style x:Key="CodeViewerStyle" TargetType="local:CodeViewer">
            <Setter Property="CodeContentTemplate" Value="{StaticResource CodeContentDataTemplate}" />
            <Setter Property="XAMLContentTemplate" Value="{StaticResource XAMLContentDataTemplate}" />
        </Style>
    </UserControl.Resources>

    <Grid>
        <ContentControl x:Name="Controls" Margin="0" Style="{StaticResource ShadowContainerStyle}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="240" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel VerticalAlignment="Center" Margin="10 8 0 0">
                    <Button x:Name="Logo" HorizontalAlignment="Right" VerticalAlignment="Center" ContentTemplate="{StaticResource TelerikLogoTemplate}" Style="{StaticResource BlankButtonStyle}" Command="{Binding NavigateCommand}" CommandParameter="Home" />
                    <Button x:Name="ReleaseNotes" Style="{StaticResource RealeaseNotesButtonStyle}" HorizontalAlignment="Right" Margin="0 -5 0 0"  Command="{Binding NavigateCommand}" CommandParameter="http://www.telerik.com/support/whats-new/wpf/release-history" FontSize="10"/>
                </StackPanel>
              
                <StackPanel Orientation="Horizontal" Margin="0 0 270 0"
                            Grid.Column="1" 
                            HorizontalAlignment="Right">
                    <Button Style="{DynamicResource SmallLinkButtonStyle}" Margin="5 14 15 0"
							Command="{Binding NavigateCommand}"
							CommandParameter="http://demos.telerik.com/xaml-sdkbrowser/"
							Height="20">
                        <TextBlock x:Name="content" Text="SDK SAMPLES BROWSER" Style="{DynamicResource HyperlinkTextStyle}" 
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" FontSize="11" />
                    </Button>
                    <Button 
                        Height="45"
						Style="{StaticResource DownloadTrialHomeSmallButtonStyle}" 
						Command="{Binding NavigateCommand}"
						CommandParameter="http://www.telerik.com/account/free-trials/trial-product-versions/single-trial.aspx?pmvid=0&amp;pid=601" />
                </StackPanel>
                
                <Rectangle Grid.ColumnSpan="2" Grid.Row="0" Height="5" VerticalAlignment="Bottom">
                    <Rectangle.Fill>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0" Color="#00FFFFFF" />
                            <GradientStop Offset="1" Color="#33000000" />
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <Rectangle Fill="White" Grid.ColumnSpan="2" Grid.Row="1" />
                <ContentPresenter Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom" ContentTemplate="{StaticResource HeaderSeparatorTemplate}" />

                <StackPanel x:Name="BreadCrumb" Grid.ColumnSpan="2" Grid.Row="1" Margin="0 0 0 4" Orientation="Horizontal" HorizontalAlignment="Left">

                    <Button Content="_Home" Style="{StaticResource HomeButtonStyle}" Command="{Binding NavigateCommand}" CommandParameter="Home" />
                    <ContentPresenter Style="{StaticResource LeftNavigationSeparatorStyle}" />
                    <Button Content="All _Controls" Style="{StaticResource AllControlsButtonStyle}" Command="{Binding NavigateCommand}" CommandParameter="AllControls" />
                    <ContentPresenter Style="{StaticResource LeftNavigationSeparatorStyle}" />

                    <local:LayoutClipBox>
                        <local:DropDownButton Style="{StaticResource ControlExamplesDropDownStyle}" DataContext="{Binding CurrentExample.ExampleGroup.Control}" Content="{Binding}" DropDownContent="{Binding}" Command="{Binding DataContext.NavigateCommand, ElementName=rootSingleExample}" />
                    </local:LayoutClipBox>

                    <ContentPresenter Style="{StaticResource RightNavigationSeparatorStyle}" />
                    <Button Content="_," DataContext="{Binding PreviousExample}" Style="{StaticResource PreviousExampleButtonStyle}" Command="{Binding DataContext.NavigateCommand, ElementName=rootSingleExample}" CommandParameter="{Binding}" />
                    <Button Content="_." DataContext="{Binding NextExample}" Style="{StaticResource NextExampleButtonStyle}" Command="{Binding DataContext.NavigateCommand, ElementName=rootSingleExample}" CommandParameter="{Binding}" />
                </StackPanel>

                <StackPanel x:Name="ViewModeSelection" Grid.ColumnSpan="2" Grid.Row="1" Margin="0 0 0 4" Orientation="Horizontal" HorizontalAlignment="Right">
                    <ContentPresenter Style="{StaticResource RightNavigationSeparatorStyle}" />
                    <CheckBox x:Name="ViewModeExampleButton" Content="Example" IsChecked="{Binding ViewMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Example, Mode=TwoWay}" IsEnabled="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked, Converter={StaticResource BooleanToInvertedBooleanConverter}}" Style="{StaticResource ViewModeCheckBoxButtonStyle}" Width="60" />
                    <ContentPresenter Style="{StaticResource RightNavigationSeparatorStyle}" />
                    <CheckBox x:Name="ViewModeCodeButton" Content="Code" IsChecked="{Binding ViewMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Code, Mode=TwoWay}" IsEnabled="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked, Converter={StaticResource BooleanToInvertedBooleanConverter}}"  Style="{StaticResource ViewModeCheckBoxButtonStyle}" Width="60" />
                    <ContentPresenter Style="{StaticResource RightNavigationSeparatorStyle}" />
                </StackPanel>

                <Grid x:Name="LeftHandMenu" Grid.Row="2" Grid.Column="0" Panel.ZIndex="-1" Visibility="{Binding ExampleProgress, Converter={StaticResource InvertedIntProgressToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ContentPresenter Grid.Row="0" Style="{StaticResource CurrentExampleHeaderStyle}" Content="{Binding CurrentExample}" Visibility="{Binding Content, ElementName=ExampleArea, Converter={StaticResource ContentToVisibilityConverter}}"/>

                    <ScrollViewer Grid.Row="1" CanContentScroll="True" Style="{StaticResource QSFScrollViewerStyle}" BorderThickness="0 0 1 0" HorizontalScrollBarVisibility="Disabled" Visibility="{Binding Content, ElementName=ExampleArea, Converter={StaticResource ContentToVisibilityConverter}}">
                        <local:AnimatedScrollPanel Duration="0:0:0.25">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Expander Grid.Row="0" Style="{StaticResource DescriptionExpanderStyle}">
                                    <Grid>
                                        <telerikDocumentsHTML:HtmlDataProvider RichTextBox="{Binding ElementName=DescriptionRichTextBox}" Html="{Binding CurrentExample.Description, Mode=OneWay, Converter={StaticResource HtmlFontConverter}}" />
                                        <telerik:RadRichTextBox x:Name="DescriptionRichTextBox" Margin="12 10 0 10" Width="200" Style="{StaticResource RadRichTextBoxReadOnlyStyle}" HorizontalScrollBarVisibility="Disabled" IsSelectionEnabled="False" IsEnabled="False" HorizontalAlignment="Left" />
                                    </Grid>
                                </Expander>
                                <TabControl Grid.Row="1" Style="{StaticResource TabControlContentOnlyStyle}">
                                    <TabItem Header="Example" IsSelected="{Binding ViewMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Example, Mode=TwoWay}">
                                        <Grid>
                                            <ContentPresenter ContentTemplate="{StaticResource ConfiguratorHeaderIconTemplate}" />
                                            <ContentControl x:Name="Configurator" Width="205" Margin="10 12 16 12" Content="{Binding ElementName=ExampleArea, Path=(ContentControl.Content).(telerikQuickStart:QuickStart.ConfigurationPanel)}">
                                                <ContentControl.Resources>
                                                    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource QSFScrollViewerStyle}" />
                                                    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource QSFScrollBarStyle}" />
                                                    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource QSFCheckBoxStyle}" />
                                                    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource QSFRadioButtonStyle}" />
                                                    <Style TargetType="{x:Type telerik:RadComboBox}" BasedOn="{StaticResource QSFRadComboBoxStyle}" />
                                                    <Style TargetType="{x:Type telerik:RadComboBoxItem}" BasedOn="{StaticResource QSFRadComboBoxItemStyle}" />
                                                    <Style TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource QSFRadButtonStyle}" />
                                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource QSFButtonStyle}" />
                                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource QSFExampleTextBoxStyle}" />
                                                    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource QSFListBoxStyle}" />
                                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource QSFListBoxItemStyle}" />
                                                    <Style TargetType="{x:Type telerik:RadNumericUpDown}" BasedOn="{StaticResource QSFRadNumericUpDownStyle}" />
                                                    <Style TargetType="{x:Type telerik:RadDateTimePicker}" BasedOn="{StaticResource QSFRadDateTimePickerStyle}" />
                                                    <Style TargetType="{x:Type telerik:RadColorSelector}" BasedOn="{StaticResource QSFRadColorSelectorStyle}" />
                                                    <Style TargetType="{x:Type telerik:RadColorPicker}" BasedOn="{StaticResource QSFRadColorPickerStyle}" />
                                                    <Style TargetType="{x:Type telerik:RadSlider}" BasedOn="{StaticResource QSFRadSliderStyle}" />
                                                </ContentControl.Resources>
                                            </ContentControl>
                                            <ListBox x:Name="ThemesList" Style="{StaticResource ListBoxThemingStyle}" Margin="10 30 10 10" VerticalAlignment="Top" ItemsSource="{Binding Themes}" SelectedItem="{Binding CurrentTheme, Mode=TwoWay}" Visibility="{Binding CurrentExample.Type, Converter={StaticResource ThemingToVisibleConverter}, FallbackValue=Collapsed}" ScrollViewer.PanningMode="None" />
                                        </Grid>
                                    </TabItem>
                                    <TabItem Header="Code" IsSelected="{Binding ViewMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Code, Mode=TwoWay}">
                                        <local:ResourceBox x:Name="ResourcesList" Margin="5" Width="210" ItemsSource="{Binding CurrentExample.Resources}" Style="{StaticResource QSFListBoxStyle}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <ContentPresenter Content="{Binding DisplayName, Converter={StaticResource FriendlyExampleNameConverter}}" Margin="2" />
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </local:ResourceBox>
                                    </TabItem>
                                </TabControl>
                            </Grid>
                        </local:AnimatedScrollPanel>
                    </ScrollViewer>
                </Grid>

                <TabControl x:Name="Example" Grid.Row="2" Grid.Column="1" Panel.ZIndex="-2" Visibility="{Binding ExampleProgress, Converter={StaticResource InvertedIntProgressToVisibilityConverter}}" Style="{StaticResource TabControlContentOnlyStyle}">
                    <TabItem Header="Example" IsSelected="{Binding ViewMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Example, Mode=TwoWay}">
                        <ContentControl x:Name="ExampleArea" 
										Content="{Binding CurrentExampleInstance}"
										ContentTemplate="{StaticResource ExampleTemplate}" />
                    
                    </TabItem>
                    <TabItem Header="Code" IsSelected="{Binding ViewMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Code, Mode=TwoWay}">
                        <local:CodeViewer Source="{Binding SelectedItem.ExampleUri, ElementName=ResourcesList}" Margin="2" 
										  Style="{StaticResource CodeViewerStyle}"/>
                    </TabItem>
                </TabControl>

                <Grid x:Name="ProgressMark" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2" Margin="0 22 0 0" VerticalAlignment="Top" Visibility="{Binding ExampleProgress, Converter={StaticResource IntProgressToVisibilityConverter}}">
                    <local:RelativeAlignmentPanel>
                        <Grid Width="35" Height="15" local:RelativeAlignmentPanel.HorizontalAlignment="{Binding ExampleProgress, Converter={StaticResource IntProgressToNormalizedDouble}, FallbackValue=0}">
                            <Path x:Name="LeftCorner" Margin="0 10 0 0" Data="M0,0 L5,0 L5,5 z" Stretch="None" HorizontalAlignment="Left" Width="5" Height="5" Fill="#FF25001F" />
                            <Border Margin="5 0 0 0" Width="30" Background="{StaticResource Button.Background}">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 2 0">
                                    <TextBlock Text="{Binding ExampleProgress, FallbackValue=0}" Foreground="White" TextAlignment="Right" FontSize="10" />
                                    <TextBlock Text="%" Foreground="White" TextAlignment="Right" FontSize="10" />
                                </StackPanel>
                            </Border>
                        </Grid>
                    </local:RelativeAlignmentPanel>
                </Grid>

                <StackPanel Grid.ColumnSpan="2" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding ExampleProgress, Converter={StaticResource IntProgressToVisibilityConverter}}">
                    <TextBlock Text="{Binding CurrentExample.ExampleGroup.Control.Text}" FontWeight="DemiBold" FontSize="64" TextAlignment="Center" Foreground="#44000000" Style="{StaticResource TitleTextStyle}" />
                    <TextBlock Text="DOWNLOADING EXAMPLES" TextAlignment="Center" FontSize="9" Foreground="#AA000000" Margin="2" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Rectangle VerticalAlignment="Top" RadiusX="2" RadiusY="2" Width="16" Height="16" Margin="2 1" StrokeThickness="1" Stroke="{StaticResource Control.Border}" Fill="White" />
                        <Rectangle VerticalAlignment="Top" RadiusX="2" RadiusY="2" Width="24" Height="24" Margin="3 1" StrokeThickness="1.5" Stroke="{StaticResource Control.Border}" Fill="White" />
                        <Rectangle VerticalAlignment="Top" RadiusX="2" RadiusY="2" Width="32" Height="32" Margin="4 1" StrokeThickness="2" Stroke="{StaticResource Control.Border}" Fill="White" />
                        <Image VerticalAlignment="Top" Stretch="None" Margin="5 0" Width="46" Height="46" Source="{Binding CurrentExample.ExampleGroup.Control, Converter={StaticResource ControlToIconConverter}, ConverterParameter='46x46'}" />
                        <Rectangle VerticalAlignment="Top" RadiusX="2" RadiusY="2" Width="32" Height="32" Margin="4 1" StrokeThickness="2" Stroke="{StaticResource Control.Border}" Fill="White" />
                        <Rectangle VerticalAlignment="Top" RadiusX="2" RadiusY="2" Width="24" Height="24" Margin="3 1" StrokeThickness="1.5" Stroke="{StaticResource Control.Border}" Fill="White" />
                        <Rectangle VerticalAlignment="Top" RadiusX="2" RadiusY="2" Width="16" Height="16" Margin="2 1" StrokeThickness="1" Stroke="{StaticResource Control.Border}" Fill="White" />
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.ColumnSpan="2" HorizontalAlignment="Right" Orientation="Horizontal">
                    <local:QuickNavigation Margin="10 0 0 0" Tag="{Binding DataContext, ElementName=rootSingleExample}" />
                </StackPanel>
            </Grid>
        </ContentControl>
    </Grid>
</local:ViewBase>
