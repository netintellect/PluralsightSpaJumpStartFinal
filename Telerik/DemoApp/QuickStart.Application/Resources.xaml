<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mscorlib="clr-namespace:System;assembly=mscorlib"
	xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
	xmlns:core="clr-namespace:Telerik.Windows.QuickStart;assembly=Core"
	xmlns:application="clr-namespace:Telerik.Windows.QuickStart"
	xmlns:local="clr-namespace:Telerik.Windows.QuickStart"
	xmlns:calendar="clr-namespace:Telerik.Windows.Controls.Calendar;assembly=Telerik.Windows.Controls.Input"
	xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/QuickStart.Common;component/Themes/Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Brushes -->
    <SolidColorBrush x:Key="AccentGreenBrush" Color="#FF00B300" />

    <LinearGradientBrush x:Key="Window.Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF8F8F8" Offset="0.15"/>
        <GradientStop Color="#FFE9E9E9" Offset="0.75"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Control.Border" Color="#FF79256B" />
    <SolidColorBrush x:Key="Control.FocusBrush" Color="#FF550D49" />

    <SolidColorBrush x:Key="ContentControl.Background" Color="WhiteSmoke" />

    <SolidColorBrush x:Key="ContentControl.BackgroundTouch" Color="#FFFCFCFC" />
    <LinearGradientBrush x:Key="Button.BackgroundTouch" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#FF00B300" Offset="0.996"/>
        <GradientStop Color="#FF00B300"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ContentControl.Border" Color="#FFAEB4BA" />
    <SolidColorBrush x:Key="ContentControl.BorderTouch" Color="#FFE6E6E6" />

    <SolidColorBrush x:Key="ContentControl.Highlight" Color="#4C952382" />
    <SolidColorBrush x:Key="ContentControl.StrongHighlight" Color="#FF79256B" />

    <SolidColorBrush x:Key="Text.Title" Color="#FF5B074D" />
    <SolidColorBrush x:Key="Text.Subtitle" Color="#FF3D4350" />
    <SolidColorBrush x:Key="Text.Header" Color="#FF5B1653" />

    <SolidColorBrush x:Key="Text.MouseOver" Color="#FF8A2479" />

    <SolidColorBrush x:Key="TextBox.Foreground" Color="#FF3D4350" />
    <SolidColorBrush x:Key="TextBox.Background" Color="White" />

    <SolidColorBrush x:Key="WatermarkBrush" Color="#FFA6A6A6" />

    <LinearGradientBrush x:Key="Icon.Fill" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FFAD499C" Offset="1"/>
        <GradientStop Color="#FF79256B"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Icon.Picker" Color="White" />

    <LinearGradientBrush x:Key="Button.Border" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFAD499C" Offset="0.996"/>
        <GradientStop Color="#FF79256B"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Button.Background" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFAD499C" Offset="0.996"/>
        <GradientStop Color="#FF79256B"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Button.Foreground" Color="White" />
    <SolidColorBrush x:Key="Button.Background.Checked" Color="#FF913682" />

    <SolidColorBrush x:Key="CalendarButton.OtherView.Foreground" Color="#7F3D4350" />

    <LinearGradientBrush x:Key="HighlightedTile.Background" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#9c338a" Offset="1"/>
        <GradientStop Color="#FF7e0c6c"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Tile.Background" Color="White" />

    <!-- Converters -->
    <local:BooleanToInvertedBooleanConverter x:Key="BooleanToInvertedBooleanConverter" />
    <local:ControlToIconConverter x:Key="ControlToIconConverter" />
    <local:ContentToVisibilityConverter x:Key="ContentToVisibilityConverter" />
    <local:ControlsMajorGroupHeaderConverter x:Key="ControlsMajorGroupHeaderConverter" />

    <local:ControlOverviewOpacityConverter x:Key="ControlOverviewOpacityConverter" />
    <telerik:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <telerik:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverterInstance" />
    <telerik:ColorToBrushConverter x:Key="ColorToBrushConverter" />
    <local:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
    <local:ThemingToVisibleConverter x:Key="ThemingToVisibleConverter" />
    <core:IntProgressToNormalizedDouble x:Key="IntProgressToNormalizedDouble" />
    <core:IntProgressToVisibilityConverter x:Key="IntProgressToVisibilityConverter" />
    <core:InvertedIntProgressToVisibilityConverter x:Key="InvertedIntProgressToVisibilityConverter" />

    <!-- Logo Templates -->
    <DataTemplate x:Key="TelerikLogoTemplate">
        <Grid Width="130" Height="43.64">
            <Image  Source="/Resources/Images/TelerikUIlogo.png"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="SeparatorTemplate">
        <Rectangle StrokeThickness="0" Height="10" VerticalAlignment="Top">
            <Rectangle.OpacityMask>
                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="White" Offset="0.2"/>
                    <GradientStop Offset="0.9"/>
                </LinearGradientBrush>
            </Rectangle.OpacityMask>
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#21000000" Offset="0"/>
                    <GradientStop Offset="0.75"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
    </DataTemplate>

    <DataTemplate x:Key="HeaderSeparatorTemplate">
        <Grid IsHitTestVisible="False">
            <Rectangle x:Name="Shadow" Height="10" Margin="0 0 0 -10" VerticalAlignment="Bottom">
                <Rectangle.OpacityMask>
                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                        <GradientStop Color="White"/>
                        <GradientStop Offset="0.25" Color="#4C000000"/>
                        <GradientStop Color="#4C000000" Offset="0.75"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.OpacityMask>
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#4C000000" Offset="0"/>
                        <GradientStop Offset="0.6"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Path x:Name="LeftCorner" Margin="-5 4 0 -5" Data="M0,0 L5,0 L5,5 z" HorizontalAlignment="Left" Width="5" Height="5" VerticalAlignment="Top" Fill="#FF25001F" />
            <Path x:Name="RightCorner" Margin="0 4 -5 -5" Data="M0,0 L5,0 L0,5 z" HorizontalAlignment="Right" Width="5" Height="5" VerticalAlignment="Top" Fill="#FF25001F" />
            <Rectangle x:Name="Ribbon" Margin="-5 0" Height="4" VerticalAlignment="Top">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF400636" Offset="0"/>
                        <GradientStop Color="#FF79256B" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Grid>
    </DataTemplate>

    <!-- status icon templates 24x24 -->
    <DataTemplate x:Key="Status24x24Template">
        <Image Margin="3 0" Width="24" Height="24" Source="{Binding Name, ConverterParameter=24x24, Converter={StaticResource ControlToIconConverter}}" />
    </DataTemplate>

    <DataTemplate x:Key="StatusNew24x24Template">
        <StackPanel Width="30" Height="39">
            <Image Margin="3 0" Width="24" Height="24" Source="{Binding Name, ConverterParameter=24x24, Converter={StaticResource ControlToIconConverter}}" />
            <Grid HorizontalAlignment="Center" Height="7" VerticalAlignment="Top" Width="20">
                <Rectangle Fill="#FF71C74E" StrokeThickness="0"/>
                <Path Data="M13,4L14,4L14,5L13,5zM11,4L12,4L12,5L11,5zM14,3L15,3L15,4L14,4zM12,3L13,3L13,4L12,4zM10,3L11,3L11,4L10,4zM6,3L7,3L7,4L8,4L9,4L9,5L8,5L7,5L6,5L6,4zM4,3L5,3L5,4L5,5L4,5L4,4zM3,3L4,3L4,4L3,4zM0,3L1,3L1,4L1,5L0,5L0,4zM2,2L3,2L3,3L2,3zM14,1L15,1L15,2L15,3L14,3L14,2zM12,1L13,1L13,2L13,3L12,3L12,2zM10,1L11,1L11,2L11,3L10,3L10,2zM6,1L7,1L7,2L8,2L8,3L7,3L6,3L6,2zM4,1L5,1L5,2L5,3L4,3L4,2zM0,1L1,1L2,1L2,2L1,2L1,3L0,3L0,2zM12,4.47035e-007L13,4.47035e-007L13,1L12,1zM10,4.47035e-007L11,4.47035e-007L11,1L10,1zM6,4.47035e-007L7,4.47035e-007L8,4.47035e-007L9,4.47035e-007L9,1L8,1L7,1L6,1zM4,4.47035e-007L5,4.47035e-007L5,1L4,1zM0,4.47035e-007L1,4.47035e-007L1,1L0,1zM14,0L15,0L15,1L14,1z" Fill="White" Height="5" Width="15" HorizontalAlignment="Center" Stretch="Fill" StrokeThickness="0" UseLayoutRounding="False" VerticalAlignment="Center" Margin="1,0,0,0"/>
            </Grid>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="StatusBeta24x24Template">
        <StackPanel Width="30" Height="39">
            <Image Margin="3 0" Width="24" Height="24" Source="{Binding Name, ConverterParameter=24x24, Converter={StaticResource ControlToIconConverter}}" Opacity="0.8" />
            <Grid HorizontalAlignment="Center" Height="7" VerticalAlignment="Top" Width="20">
                <Rectangle Fill="#FFFF5C26" StrokeThickness="0"/>
                <Path Fill="White" Data="M16,3L17,3L17,4L17,5L16,5L16,4zM13,3L14,3L14,4L14,5L13,5L13,4zM10,3L11,3L11,4L11,5L10,5L10,4zM3,3L4,3L4,4L3,4zM0,3L1,3L1,4L2,4L3,4L3,5L2,5L1,5L0,5L0,4zM15,2L16,2L16,3L15,3L14,3L14,2zM16,1L17,1L17,2L17,3L16,3L16,2zM13,1L14,1L14,2L14,3L13,3L13,2zM10,1L11,1L11,2L11,3L10,3L10,2zM5,1L6,1L6,2L7,2L7,3L6,3L6,4L7,4L8,4L8,5L7,5L6,5L5,5L5,4L5,3L5,2zM3,1L4,1L4,2L3,2zM0,1L1,1L1,2L2,2L3,2L3,3L2,3L1,3L0,3L0,2zM14,0L15,0L16,0L16,1L15,1L14,1zM9,0L10,0L11,0L12,0L12,1L11,1L10,1L9,1zM5,0L6,0L7,0L8,0L8,1L7,1L6,1L5,1zM0,0L1,0L2,0L3,0L3,1L2,1L1,1L0,1z" Height="5" Width="17" HorizontalAlignment="Center" Stretch="Fill" StrokeThickness="0" UseLayoutRounding="False" VerticalAlignment="Center" Margin="-1,0,0,0"/>
            </Grid>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="StatusCtp24x24Template">
        <StackPanel Width="30" Height="39">
            <Image Margin="3 0" Width="24" Height="24" Source="{Binding Name, ConverterParameter=24x24, Converter={StaticResource ControlToIconConverter}}" />
            <Grid HorizontalAlignment="Center" Height="7" VerticalAlignment="Top" Width="20">
                <Rectangle Fill="#FFE06E1E" StrokeThickness="0"/>
                <Path Data="M8,3L9,3L9,4L9,5L8,5L8,4zM5,3L6,3L6,4L6,5L5,5L5,4zM5,2L6,2L6,3L5,3zM0,2L1,2L1,3L1,4L2,4L3,4L3,5L2,5L1,5L0,5L0,4L0,3zM11,1L12,1L12,2L11,2zM8,0L9,0L10,0L11,0L11,1L10,1L9,1L9,2L10,2L11,2L11,3L10,3L9,3L8,3L8,2L8,1zM4,0L5,0L6,0L7,0L7,1L6,1L6,2L5,2L5,1L4,1zM0,0L1,0L2,0L3,0L3,1L2,1L1,1L1,2L0,2L0,1z" Fill="White" Height="5" Width="12" HorizontalAlignment="Center" Stretch="Fill" StrokeThickness="0" UseLayoutRounding="False" VerticalAlignment="Center"/>
            </Grid>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="StatusUpd24x24Template">
        <StackPanel Width="30" Height="39">
            <Image Margin="3 0" Width="24" Height="24" Source="{Binding Name, ConverterParameter=24x24, Converter={StaticResource ControlToIconConverter}}" />
            <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Width="20" Height="7">
                <Rectangle Fill="#FFD9A300" StrokeThickness="0"/>
                <Path Data="M12,4L13,4L13,5L12,5L11,5L11,4zM10,4L11,4L11,5L10,5zM5,4L6,4L6,5L5,5zM1,4L2,4L3,4L3,5L2,5L1,5zM13,2L14,2L14,3L14,4L13,4L13,3zM10,2L11,2L11,3L11,4L10,4L10,3zM7,2L8,2L8,3L7,3zM5,2L6,2L7,2L7,3L6,3L6,4L5,4L5,3zM3,2L4,2L4,3L4,4L3,4L3,3zM0,2L1,2L1,3L1,4L0,4L0,3zM13,1L14,1L14,2L13,2zM8,1L9,1L9,2L8,2zM10,0L11,0L12,0L13,0L13,1L12,1L11,1L11,2L10,2L10,1zM7,0L8,0L8,1L7,1zM5,0L6,0L7,0L7,1L6,1L6,2L5,2L5,1zM3,0L4,0L4,1L4,2L3,2L3,1zM0,0L1,0L1,1L1,2L0,2L0,1z" Fill="White" HorizontalAlignment="Center" Stretch="None" StrokeThickness="0" VerticalAlignment="Center"/>
            </Grid>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="StatusNormal24x24Template">
        <Grid Width="30" Height="39">
            <Image Margin="3 0" Width="24" Height="24"  VerticalAlignment="Top" Source="{Binding Name, ConverterParameter=24x24, Converter={StaticResource ControlToIconConverter}}" />
        </Grid>
    </DataTemplate>

    <!-- touch status badges templates -->

    <DataTemplate x:Key="TileBadgeEmpty">
    </DataTemplate>
    <SolidColorBrush x:Key="Status.New" Color="#FF71C74E"/>

    <DataTemplate x:Key="TileBadgeNew">
        <Grid Margin="-2,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
            <Path Data="M0,0 L31.375,0 27.375,6.5 31.375,13 0,13 z" Fill="{DynamicResource Status.New}" HorizontalAlignment="Left" Height="13" Stretch="Fill" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="31.375">
                <Path.Effect>
                    <DropShadowEffect BlurRadius="2" Direction="300" Opacity="0.2" ShadowDepth="2"/>
                </Path.Effect>
            </Path>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="NEW" VerticalAlignment="Center" Foreground="White" FontSize="10" LineHeight="10" Margin="4,-1,0,0"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TileBadgeNew_Short">
        <Grid VerticalAlignment="Top" HorizontalAlignment="Left">
            <Path Data="M0,0 L17.355687,4.6655531E-14 13.355687,6.5 17.355687,13 0,13 z" Fill="#71C74E" HorizontalAlignment="Left" Height="13" Stretch="Fill" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="17.356">
                <Path.Effect>
                    <DropShadowEffect BlurRadius="3" Direction="300" Opacity="0.2" ShadowDepth="2"/>
                </Path.Effect>
            </Path>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="N" VerticalAlignment="Center" Foreground="White" FontSize="10" LineHeight="10" Margin="4,-1,0,0"/>
        </Grid>
    </DataTemplate>
    <SolidColorBrush x:Key="Status.Ctp" Color="#FFE06E1E"/>

    <DataTemplate x:Key="TileBadgeCtp">
        <Grid Margin="-2,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
            <Path Data="M0,0 L31.375,0 27.375,6.5 31.375,13 0,13 z" Fill="{DynamicResource Status.Ctp}" HorizontalAlignment="Left" Height="13" Stretch="Fill" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="31.375">
                <Path.Effect>
                    <DropShadowEffect BlurRadius="2" Direction="300" Opacity="0.2" ShadowDepth="2"/>
                </Path.Effect>
            </Path>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="CTP" VerticalAlignment="Center" Foreground="White" FontSize="10" LineHeight="10" Margin="4,-1,0,0"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TileBadgeCtp_Short">
        <Grid  VerticalAlignment="Top" HorizontalAlignment="Left">
            <Path Data="M0,0 L17.355687,4.6655531E-14 13.355687,6.5 17.355687,13 0,13 z" Fill="#E06E1E" HorizontalAlignment="Left" Height="13" Stretch="Fill" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="17.356">
                <Path.Effect>
                    <DropShadowEffect BlurRadius="3" Direction="300" Opacity="0.2" ShadowDepth="2"/>
                </Path.Effect>
            </Path>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="C" VerticalAlignment="Center" Foreground="White" FontSize="10" LineHeight="10" Margin="4,-1,0,0"/>
        </Grid>
    </DataTemplate>
    <SolidColorBrush x:Key="Status.Beta" Color="#FFFF5C26"/>

    <DataTemplate x:Key="TileBadgeBeta">
        <Grid Margin="-2,10,0,0"  VerticalAlignment="Top" HorizontalAlignment="Left">
            <Path Data="M0,0 L31.375,0 27.375,6.5 31.375,13 0,13 z" Fill="{DynamicResource Status.Beta}" HorizontalAlignment="Left" Height="13" Stretch="Fill" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="31.375">
                <Path.Effect>
                    <DropShadowEffect BlurRadius="2" Direction="300" Opacity="0.2" ShadowDepth="2"/>
                </Path.Effect>
            </Path>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="BETA" VerticalAlignment="Center" Foreground="White" FontSize="10" LineHeight="10" Margin="4,-1,0,0"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TileBadgeBeta_Short">
        <Grid  VerticalAlignment="Top" HorizontalAlignment="Left">
            <Path Data="M0,0 L17.355687,4.6655531E-14 13.355687,6.5 17.355687,13 0,13 z" Fill="#FF5C26" HorizontalAlignment="Left" Height="13" Stretch="Fill" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="17.356">
                <Path.Effect>
                    <DropShadowEffect BlurRadius="3" Direction="300" Opacity="0.2" ShadowDepth="2"/>
                </Path.Effect>
            </Path>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="B" VerticalAlignment="Center" Foreground="White" FontSize="10" LineHeight="10" Margin="4,-1,0,0"/>
        </Grid>
    </DataTemplate>
    <SolidColorBrush x:Key="Status.Update" Color="#FFD9A300"/>

    <DataTemplate x:Key="TileBadgeUpdate">
        <Grid Margin="-2,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
            <Path Data="M0,0 L31.375,0 27.375,6.5 31.375,13 0,13 z" Fill="{DynamicResource Status.Update}" HorizontalAlignment="Left" Height="13" Stretch="Fill" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="31.375">
                <Path.Effect>
                    <DropShadowEffect BlurRadius="2" Direction="300" Opacity="0.2" ShadowDepth="2"/>
                </Path.Effect>
            </Path>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="UPD" VerticalAlignment="Center" Foreground="White" FontSize="10" LineHeight="10" Margin="4,-1,0,0"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TileBadgeUpdate_Short">
        <Grid VerticalAlignment="Top" HorizontalAlignment="Left">
            <Path Data="M0,0 L17.355687,4.6655531E-14 13.355687,6.5 17.355687,13 0,13 z" Fill="#FFD9A300" HorizontalAlignment="Left" Height="13" Stretch="Fill" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="17.356">
                <Path.Effect>
                    <DropShadowEffect BlurRadius="3" Direction="300" Opacity="0.2" ShadowDepth="2"/>
                </Path.Effect>
            </Path>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="U" VerticalAlignment="Center" Foreground="White" FontSize="10" LineHeight="10" Margin="4,-1,0,0"/>
        </Grid>
    </DataTemplate>

    <!-- status icon templates 16x16 -->
    <DataTemplate x:Key="StatusNew16x16Template">
        <Grid Width="26" Height="16">
            <Image Width="16" Height="16" Source="{Binding Name, ConverterParameter=16x16, Converter={StaticResource ControlToIconConverter}}" HorizontalAlignment="Left" />
            <Grid HorizontalAlignment="Center" Height="9" VerticalAlignment="Top" Width="9" Margin="2 -1 0 0">
                <Rectangle Fill="#FF63BD3C" StrokeThickness="0"/>
                <Path Data="M23,5C23,5 22,5 22,5C22,5 22,6 22,6C22,6 23,6 23,6C23,6 23,7 23,7C23,7 24,7 24,7C24,7 24,0 24,0C24,0 23,0 23,0C23,0 23,5 23,5zM21,5C21,5 22,5 22,5C22,5 22,4 22,4C22,4 21,4 21,4C21,4 21,5 21,5zM20,4C20,4 21,4 21,4C21,4 21,3 21,3C21,3 20,3 20,3C20,3 20,4 20,4zM19,3C19,3 20,3 20,3C20,3 20,2 20,2C20,2 19,2 19,2C19,2 19,3 19,3zM18,2C18,2 19,2 19,2C19,2 19,1 19,1C19,1 18,1 18,1C18,1 18,0 18,0C18,0 17,0 17,0C17,0 17,7 17,7C17,7 18,7 18,7C18,7 18,2 18,2z" 
                      Fill="White" Height="7" Width="7" HorizontalAlignment="Center" Stretch="Fill" StrokeThickness="0" VerticalAlignment="Center"/>
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="StatusBeta16x16Template">
        <Grid Width="26" Height="16">
            <Image Width="16" Height="16" Source="{Binding Name, ConverterParameter=16x16, Converter={StaticResource ControlToIconConverter}}" HorizontalAlignment="Left" />
            <Grid HorizontalAlignment="Center" Height="9" VerticalAlignment="Top" Width="9" Margin="2 -1 0 0">
                <Rectangle Fill="#FFFF5C26" StrokeThickness="0"/>
                <Path Fill="White" Data="M13,4C13,4 13,6 13,6C13,6 14,6 14,6C14,6 14,4 14,4C14,4 13,4 13,4zM13,1C13,1 13,3 13,3C13,3 14,3 14,3C14,3 14,1 14,1C14,1 13,1 13,1zM9,1C9,1 13,1 13,1C13,1 13,0 13,0C13,0 8,0 8,0C8,0 8,7 8,7C8,7 13,7 13,7C13,7 13,6 13,6C13,6 9,6 9,6C9,6 9,4 9,4C9,4 13,4 13,4C13,4 13,3 13,3C13,3 9,3 9,3C9,3 9,1 9,1z" 
                      Height="7" Width="6" HorizontalAlignment="Center" Stretch="Fill" StrokeThickness="0" VerticalAlignment="Center" />
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="StatusCtp16x16Template">
        <Grid Width="26" Height="16">
            <Image Width="16" Height="16" Source="{Binding Name, ConverterParameter=16x16, Converter={StaticResource ControlToIconConverter}}" HorizontalAlignment="Left" />
            <Grid HorizontalAlignment="Center" Height="9" VerticalAlignment="Top" Width="9" Margin="2 -1 0 0">
                <Rectangle Fill="#FFD9A300" StrokeThickness="0"/>
                <Path Data="M0,2 L1,2 1,3 1,4 2,4 3,4 3,5 2,5 1,5 0,5 0,3.9857143 0,3 z M0,2 L0,1 0,0 1,0 2,0 3,0 3,1 2,1 1,1 1,2" Fill="White" Height="7" Width="5" HorizontalAlignment="Center" Stretch="Fill" StrokeThickness="0" VerticalAlignment="Center"/>
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="StatusUpd16x16Template">
        <Grid Width="26" Height="16">
            <Image Width="16" Height="16" Source="{Binding Name, ConverterParameter=16x16, Converter={StaticResource ControlToIconConverter}}" HorizontalAlignment="Left" />
            <Grid HorizontalAlignment="Center" Height="9" VerticalAlignment="Top" Width="9" Margin="2 -1 0 0">
                <Rectangle Fill="#FFD9A300" StrokeThickness="0"/>
                <Path Data="M1,6C1,6 1,7 1,7C1,7 4,7 4,7C4,7 4,6 4,6C4,6 1,6 1,6zM4,0C4,0 4,5.9 4,5.9C4,5.9 5,5.9 5,5.9C5,5.9 5,0 5,0C5,0 4,0 4,0zM0,0C0,0 0,5.9 0,5.9C0,5.9 1,5.9 1,5.9C1,5.9 1,0 1,0C1,0 0,0 0,0z" Fill="White" Height="7" Width="5" HorizontalAlignment="Center" Stretch="Fill" StrokeThickness="0" VerticalAlignment="Center"/>
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="StatusNormal16x16Template">
        <Grid Width="26" Height="26">
            <Image Width="16" Height="16" Source="{Binding Name, ConverterParameter=16x16, Converter={StaticResource ControlToIconConverter}}" HorizontalAlignment="Left" />
        </Grid>
    </DataTemplate>

    <!-- status icon templates 7x7 -->
    <DataTemplate x:Key="StatusNew7x7Template">
        <StackPanel Orientation="Horizontal">
            <Border Width="7" Height="7" CornerRadius="0" Background="#FF80D025" VerticalAlignment="Center" Margin="2 3 6 0">
                <TextBlock Text="N" Margin="0 0 1 1" Foreground="White" FontSize="7" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <TextBlock Text="{Binding Text}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="StatusBeta7x7Template">
        <StackPanel Orientation="Horizontal">
            <Border Width="7" Height="7" CornerRadius="0" Background="#FFFF5C26" VerticalAlignment="Center" Margin="2 3 6 0">
                <TextBlock Text="B" Margin="0 0 1 1" Foreground="White" FontSize="7" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <TextBlock Text="{Binding Text}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="StatusCtp7x7Template">
        <StackPanel Orientation="Horizontal">
            <Border Width="7" Height="7" CornerRadius="0" Background="#FFE0AC1E" VerticalAlignment="Center" Margin="2 3 6 0">
                <TextBlock Text="C" Margin="0 0 1 1" Foreground="White" FontSize="7" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <TextBlock Text="{Binding Text}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="StatusUpd7x7Template">
        <StackPanel Orientation="Horizontal">
            <Border Width="7" Height="7" CornerRadius="0" Background="#FFD9A300" VerticalAlignment="Center" Margin="2 3 6 0">
                <TextBlock Text="U" Margin="0 0 1 1" Foreground="White" FontSize="7" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <TextBlock Text="{Binding Text}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="StatusNormal7x7Template">
        <TextBlock Text="{Binding Text}" />
    </DataTemplate>


    <!-- status icon templates 20x7 -->
    <DataTemplate x:Key="StatusNew20x9Template">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Width="20" Height="9">
            <Rectangle Fill="#FF71C74E" StrokeThickness="0"/>
            <Path Data="M13,4L14,4L14,5L13,5zM11,4L12,4L12,5L11,5zM14,3L15,3L15,4L14,4zM12,3L13,3L13,4L12,4zM10,3L11,3L11,4L10,4zM6,3L7,3L7,4L8,4L9,4L9,5L8,5L7,5L6,5L6,4zM4,3L5,3L5,4L5,5L4,5L4,4zM3,3L4,3L4,4L3,4zM0,3L1,3L1,4L1,5L0,5L0,4zM2,2L3,2L3,3L2,3zM14,1L15,1L15,2L15,3L14,3L14,2zM12,1L13,1L13,2L13,3L12,3L12,2zM10,1L11,1L11,2L11,3L10,3L10,2zM6,1L7,1L7,2L8,2L8,3L7,3L6,3L6,2zM4,1L5,1L5,2L5,3L4,3L4,2zM0,1L1,1L2,1L2,2L1,2L1,3L0,3L0,2zM12,4.47035e-007L13,4.47035e-007L13,1L12,1zM10,4.47035e-007L11,4.47035e-007L11,1L10,1zM6,4.47035e-007L7,4.47035e-007L8,4.47035e-007L9,4.47035e-007L9,1L8,1L7,1L6,1zM4,4.47035e-007L5,4.47035e-007L5,1L4,1zM0,4.47035e-007L1,4.47035e-007L1,1L0,1zM14,0L15,0L15,1L14,1z" Fill="White" 
                      Height="5" Width="15" HorizontalAlignment="Center" Stretch="Fill" StrokeThickness="0" VerticalAlignment="Center" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="StatusBeta20x9Template">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Width="20" Height="9">
            <Rectangle Fill="#FFFF5C26" StrokeThickness="0"/>
            <Path Fill="White" Data="M16,3L17,3L17,4L17,5L16,5L16,4zM13,3L14,3L14,4L14,5L13,5L13,4zM10,3L11,3L11,4L11,5L10,5L10,4zM3,3L4,3L4,4L3,4zM0,3L1,3L1,4L2,4L3,4L3,5L2,5L1,5L0,5L0,4zM15,2L16,2L16,3L15,3L14,3L14,2zM16,1L17,1L17,2L17,3L16,3L16,2zM13,1L14,1L14,2L14,3L13,3L13,2zM10,1L11,1L11,2L11,3L10,3L10,2zM5,1L6,1L6,2L7,2L7,3L6,3L6,4L7,4L8,4L8,5L7,5L6,5L5,5L5,4L5,3L5,2zM3,1L4,1L4,2L3,2zM0,1L1,1L1,2L2,2L3,2L3,3L2,3L1,3L0,3L0,2zM14,0L15,0L16,0L16,1L15,1L14,1zM9,0L10,0L11,0L12,0L12,1L11,1L10,1L9,1zM5,0L6,0L7,0L8,0L8,1L7,1L6,1L5,1zM0,0L1,0L2,0L3,0L3,1L2,1L1,1L0,1z" Height="5" Width="17" HorizontalAlignment="Center" Stretch="Fill" StrokeThickness="0" VerticalAlignment="Center"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="StatusCtp20x9Template">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Width="20" Height="9">
            <Rectangle Fill="#FFE06E1E" StrokeThickness="0"/>
            <Path Data="M8,3L9,3L9,4L9,5L8,5L8,4zM5,3L6,3L6,4L6,5L5,5L5,4zM5,2L6,2L6,3L5,3zM0,2L1,2L1,3L1,4L2,4L3,4L3,5L2,5L1,5L0,5L0,4L0,3zM11,1L12,1L12,2L11,2zM8,0L9,0L10,0L11,0L11,1L10,1L9,1L9,2L10,2L11,2L11,3L10,3L9,3L8,3L8,2L8,1zM4,0L5,0L6,0L7,0L7,1L6,1L6,2L5,2L5,1L4,1zM0,0L1,0L2,0L3,0L3,1L2,1L1,1L1,2L0,2L0,1z" Fill="White" Height="5" Width="12" HorizontalAlignment="Center" Stretch="Fill" StrokeThickness="0" VerticalAlignment="Center"/>
        </Grid>
    </DataTemplate>
    
    <DataTemplate x:Key="StatusUpd20x9Template">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Width="20" Height="9">
            <Rectangle Fill="#FFD9A300" StrokeThickness="0"/>
            <Path Data="M12,4L13,4L13,5L12,5L11,5L11,4zM10,4L11,4L11,5L10,5zM5,4L6,4L6,5L5,5zM1,4L2,4L3,4L3,5L2,5L1,5zM13,2L14,2L14,3L14,4L13,4L13,3zM10,2L11,2L11,3L11,4L10,4L10,3zM7,2L8,2L8,3L7,3zM5,2L6,2L7,2L7,3L6,3L6,4L5,4L5,3zM3,2L4,2L4,3L4,4L3,4L3,3zM0,2L1,2L1,3L1,4L0,4L0,3zM13,1L14,1L14,2L13,2zM8,1L9,1L9,2L8,2zM10,0L11,0L12,0L13,0L13,1L12,1L11,1L11,2L10,2L10,1zM7,0L8,0L8,1L7,1zM5,0L6,0L7,0L7,1L6,1L6,2L5,2L5,1zM3,0L4,0L4,1L4,2L3,2L3,1zM0,0L1,0L1,1L1,2L0,2L0,1z" Fill="White" HorizontalAlignment="Center" Stretch="None" StrokeThickness="0" VerticalAlignment="Center"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="StatusNormal20x9Template" />

    <local:StatusDataTemplateSelector x:Key="Image24x24TemplateSelector" Beta="{StaticResource Status24x24Template}" Ctp="{StaticResource Status24x24Template}" New="{StaticResource Status24x24Template}" Normal="{StaticResource Status24x24Template}" Obsolete="{StaticResource Status24x24Template}" Updated="{StaticResource Status24x24Template}" />
    <local:StatusDataTemplateSelector x:Key="Image16x16TemplateSelector" Beta="{StaticResource StatusBeta16x16Template}" Ctp="{StaticResource StatusCtp16x16Template}" New="{StaticResource StatusNew16x16Template}" Normal="{StaticResource StatusNormal16x16Template}" Obsolete="{StaticResource StatusNormal16x16Template}" Updated="{StaticResource StatusUpd16x16Template}" />
    <local:StatusDataTemplateSelector x:Key="StatusTemplateSelector" Beta="{StaticResource StatusBeta20x9Template}" 
                                      Ctp="{StaticResource StatusCtp20x9Template}" New="{StaticResource StatusNew20x9Template}" 
                                      Normal="{StaticResource StatusNormal20x9Template}" Obsolete="{StaticResource StatusNormal20x9Template}" Updated="{StaticResource StatusUpd20x9Template}" />
    <local:StatusDataTemplateSelector x:Key="TouchControlStatusTemplateSelector"  Beta="{StaticResource TileBadgeBeta}" Ctp="{StaticResource TileBadgeCtp}" New="{StaticResource TileBadgeNew}"  Normal="{StaticResource TileBadgeEmpty}" Updated="{StaticResource TileBadgeUpdate}" />
    <local:StatusDataTemplateSelector x:Key="TouchExampleStatusTemplateSelector"  Beta="{StaticResource TileBadgeBeta_Short}" Ctp="{StaticResource TileBadgeCtp_Short}" New="{StaticResource TileBadgeNew_Short}"  Normal="{StaticResource TileBadgeEmpty}" Updated="{StaticResource TileBadgeUpdate_Short}" />

    <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="1"
						Stroke="Red"
						StrokeDashArray="1 2"
						SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Download Styles -->
    <Style x:Key="DownloadTrialButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="180" />
        <Setter Property="Height" Value="68" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.ColumnSpan="2" Fill="#FF71C74E" />
                        <TextBlock VerticalAlignment="Center" Margin="15 0 0 0" Foreground="White" FontFamily="/Application;component/Resources/Fonts/#Myriad Pro Light" FontSize="22">
							<Run Text="download" /><LineBreak /><Run Text="free trial" />
                        </TextBlock>
                        <Path Margin="15 0" VerticalAlignment="Center" Grid.Column="1" Fill="White" Data="M0,0 L20,20 40,0 40,20 20,40 0,20Z M0,45 L40,45 40,52 0,52Z" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FullScreenConfiguratorDropDownButtonStyle" TargetType="{x:Type telerik:RadDropDownButton}">
        <Setter Property="IsOpen" Value="False"/>
        <Setter Property="BorderBrush" Value="#FF848484"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="White" Offset="0"/>
                    <GradientStop Color="Gainsboro" Offset="0.5"/>
                    <GradientStop Color="#FFADADAD" Offset="0.5"/>
                    <GradientStop Color="#FFD4D4D4" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="CornerRadius" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadDropDownButton}">
                    <Grid SnapsToDevicePixels="True" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundHidden"/>
                                <VisualState x:Name="BackgroundVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IsOpenState">
                                <VisualState x:Name="Closed"/>
                                <VisualState x:Name="Opened"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownButtonPosition">
                                <VisualState x:Name="DropDownButtonAtLeft"/>
                                <VisualState x:Name="DropDownButtonAtTop"/>
                                <VisualState x:Name="DropDownButtonAtRight"/>
                                <VisualState x:Name="DropDownButtonAtBottom"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PopupPlacementState">
                                <VisualState x:Name="PlacementBottom"/>
                                <VisualState x:Name="PlacementTop"/>
                                <VisualState x:Name="PlacementLeft"/>
                                <VisualState x:Name="PlacementRight"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter/>
                        <Popup x:Name="DropDownPopup" AllowsTransparency="True" Focusable="False" StaysOpen="False" VerticalOffset="-40">
                            <Grid>
                                <Border x:Name="DropDownPopupBorder" BorderBrush="#d5d5d5" BorderThickness="0,0,1,1" Background="White" CornerRadius="0" Height="{TemplateBinding DropDownHeight}" MaxWidth="{TemplateBinding DropDownMaxWidth}" MaxHeight="{TemplateBinding DropDownMaxHeight}" MinWidth="3" Width="{TemplateBinding DropDownWidth}">
                                    <ContentControl x:Name="DropDownPopupContent" ContentTemplate="{TemplateBinding DropDownContentTemplate}" Content="{TemplateBinding DropDownContent}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"/>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value=""/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
    </Style>

    <Style x:Key="FullScreenModeButtonStyle" TargetType="telerik:RadButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="content" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundHidden"/>
                                <VisualState x:Name="BackgroundVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused1"/>
                                <VisualState x:Name="Focused1"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates"/>
                        </VisualStateManager.VisualStateGroups>
                        <Border>
                            <ContentPresenter x:Name="content"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
    </Style>

    <Style x:Key="DownloadTrialSmallButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="115" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.ColumnSpan="2" Fill="#FF71C74E" />
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="0 0 10 0" Foreground="White" FontSize="12" FontWeight="DemiBold" FontFamily="/Application;component/Resources/Fonts/#Myriad Pro Light" RenderTransformOrigin="0.5 0.5">
                            <TextBlock.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="0.95" />
                            </TextBlock.RenderTransform><Run Text="DOWNLOAD" /><LineBreak /><Run Text="FREE TRIAL" />
                        </TextBlock>
                        <Path Margin="10 0" VerticalAlignment="Center" Fill="White" Data="M0,2 L12,14 24,2 24,12 12,24 0,12Z M0,26 L24,26 24,29 0,29Z" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DownloadTrialTouchButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="175" />
        <Setter Property="Height" Value="32" />
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Background" Value="#FF71C74E" />
        <Setter Property="BorderBrush" Value="#FF71C74E" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="mouseOver">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates"/>
                            <VisualStateGroup x:Name="ValidationStates"/>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="2" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />

                        <Rectangle x:Name="mouseOver"  Grid.ColumnSpan="2" Fill="White" Opacity="0" />
                        <TextBlock Margin="6 0" Text="DOWNLOAD FREE TRIAL"  VerticalAlignment="Center" RenderTransformOrigin="0.5 0.5" />
                        <Path Grid.Column="1" 
                              Data="M1E-06,29.606 L26,29.606 L26,34.606 L1E-06,34.606 z M0,0 L13.0156,13.1365 L26,0 L26,13.09 L13,26 L0,13.09 z" 
                              Fill="{TemplateBinding Foreground}" 
                              HorizontalAlignment="Right" 
                              Height="20" 
                              Margin="0 6 6 0" 
                              Stretch="Fill"
                              VerticalAlignment="Top" 
                              Width="14"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <local:StatusDataTemplateSelector x:Key="TextAndIcon7x7TemplateSelector" Beta="{StaticResource StatusBeta7x7Template}" Ctp="{StaticResource StatusCtp7x7Template}" New="{StaticResource StatusNew7x7Template}" Normal="{StaticResource StatusNormal7x7Template}" Obsolete="{StaticResource StatusNormal7x7Template}" Updated="{StaticResource StatusUpd7x7Template}" />

    <!-- Global Styles -->
    <Style x:Key="BlankButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CategoryStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Text.Title}" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Margin" Value="5 15 5 3" />
        <!-- TODO: embed the font -->
        <!--<Setter Property="FontFamily" Value="/QSF_V3;component/Fonts/Fonts.zip#Myriad Pro Light" />-->
    </Style>
    <Style x:Key="SubCategoryStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Text.Header}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="5 10 5 3" />
    </Style>
    <Style x:Key="LinkButtonStyle" TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="5 -2" />
        <Setter Property="Padding" Value="5 2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Text.MouseOver}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Global Styles -->
    <Style x:Key="ShadowContainerStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{StaticResource ContentControl.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContentControl.Border}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid>
                        <Rectangle RadiusX="2" RadiusY="2" Fill="WhiteSmoke" Margin="{TemplateBinding BorderThickness}">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="11" ShadowDepth="0" Color="#FF5D7183" Opacity="0.5"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftBookmarkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="controls_browser" HorizontalAlignment="Right" Height="30" VerticalAlignment="Bottom" Width="151" Margin="5">
                        <Path Data="M0.5,0.5 L143.5,0.5 L134.5,10.916667 L143.5,21.5 L0.5,21.5 z" Stretch="Fill" Stroke="#FF00B300" Fill="#FF00B300">
                            <Path.Effect>
                                <DropShadowEffect ShadowDepth="3" BlurRadius="4" Opacity="0.3"/>
                            </Path.Effect>
                        </Path>
                        <Path Data="M0.5,0.5 L140.5,0.5 L132.1875,9.9375 L140.5,19.5 L0.5,19.5 z" Margin="1,1,2,1" Stretch="Fill" Stroke="#19FFFFFF" Fill="#FF00B300" />

                        <ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RightBookmarkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="152" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="integration_demos" HorizontalAlignment="Right" Height="30" VerticalAlignment="Bottom" Margin="5">
                        <Path Data="M0.5,0.5 L143.5,0.5 L143.5,21.5 L0.5,21.5 L10.5,11 z" Stretch="Fill" Stroke="#FF00B300" Fill="#FF00B300">
                            <Path.Effect>
                                <DropShadowEffect ShadowDepth="3" BlurRadius="4" Opacity="0.3"/>
                            </Path.Effect>
                        </Path>
                        <Path Data="M1.5,0.5 L141.5,0.5 L141.5,19.5 L1.5,19.5 L10.5,10.012461 z" Margin="2,1,1,1" Stretch="Fill" Stroke="#19FFFFFF" Fill="#FF00B300"  />

                        <ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TileListGroupHeaderTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#777777" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontFamily" Value="/Application;component/Resources/Fonts/#Myriad Pro"/>
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="GroupHeaderTouchTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#777777" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontFamily" Value="/Application;component/Resources/Fonts/#Myriad Pro"/>
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="270" Color="White" ShadowDepth="1" Opacity="1" BlurRadius="0"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DescriptionTouchTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#999999" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontFamily" Value="/Application;component/Resources/Fonts/#Myriad Pro"/>
        <Setter Property="LineHeight" Value="25"/>
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="270" Color="White" ShadowDepth="1" Opacity="1" BlurRadius="0"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ControlTitleTouchTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Text.Title}" />
        <Setter Property="FontSize" Value="40" />
        <Setter Property="FontFamily" Value="/Application;component/Resources/Fonts/#Myriad Pro Light"/>
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="270" Color="White" ShadowDepth="1" Opacity="1" BlurRadius="0"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HighlightedTileTitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10 5" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="/Application;component/Resources/Fonts/#Myriad Pro"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="TileTitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10 5" />
        <Setter Property="Foreground" Value="{StaticResource Text.Title}" />
        <Setter Property="FontFamily" Value="/Application;component/Resources/Fonts/#Myriad Pro"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="TitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Text.Title}" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="FontFamily" Value="/Application;component/Resources/Fonts/#Myriad Pro Light" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="SubtitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Text.Subtitle}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="/Application;component/Resources/Fonts/#Myriad Pro Light" />
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="LineHeight" Value="14.66" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="HeaderTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10 5" />
        <Setter Property="Foreground" Value="{StaticResource Text.Header}" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="LabelLarge" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="13.333" />
    </Style>

    <Style x:Key="TextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10 5" />
        <Setter Property="Foreground" Value="#FF3D4350" />
        <Setter Property="FontSize" Value="11.333" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="HyperlinkTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Foreground" Value="#999999" />
        <Setter Property="FontSize" Value="9" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="AllProductsTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="/Application;component/Resources/Fonts/#Myriad Pro Light"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource Text.Title}" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <DataTemplate x:Key="CloseButtonContentTemplate">
        <Grid Width="32" Height="32">
            <Path Fill="{StaticResource Text.MouseOver}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Data="M10.5,0.5 L14.5,0.5 14.5,10.5 24.5,10.5 24.5,14.5 14.5,14.5 14.5,24.5 10.5,24.5 10.5,14.5 0.5,14.5 0.5,10.5 10.5,10.5 z" Height="16" RenderTransformOrigin="0.5,0.5" Stretch="Fill" StrokeThickness="0">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-45"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
    </DataTemplate>

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="0,10,10,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="ContentTemplate" Value="{DynamicResource CloseButtonContentTemplate}"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <!-- QSF Theme -->
    <Style x:Key="QSFScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Style.Resources>
            <Style x:Key="PageScrollButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VerticalThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="Transparent">
                                <Rectangle x:Name="Slider" Fill="{StaticResource Control.Border}" Width="4" HorizontalAlignment="Right" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="12" DecelerationRatio="1" Storyboard.TargetName="Slider" Storyboard.TargetProperty="Width" Duration="0:0:0.10" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="12" DecelerationRatio="1" Storyboard.TargetName="Slider" Storyboard.TargetProperty="Width" Duration="0:0:0.10" />
                                                <DoubleAnimation To="4" AccelerationRatio="1" Storyboard.TargetName="Slider" Storyboard.TargetProperty="Width" BeginTime="0:0:0.15" Duration="0:0:0.25" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HorizontalThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="Transparent">
                                <Rectangle x:Name="Slider" Fill="{StaticResource Control.Border}" Height="4" VerticalAlignment="Bottom" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="12" DecelerationRatio="1" Storyboard.TargetName="Slider" Storyboard.TargetProperty="Height" Duration="0:0:0.1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="4" DecelerationRatio="1" Storyboard.TargetName="Slider" Storyboard.TargetProperty="Height" Duration="0:0:0.25" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource PageScrollButton}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource PageScrollButton}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{StaticResource VerticalThumbStyle}" />
                        </Track.Thumb>
                    </Track>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource PageScrollButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource PageScrollButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource HorizontalThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="QSFScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource Control.Border}" />
        <Setter Property="PanningMode" Value="Both"/>
        <Setter Property="PanningRatio" Value="1"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border x:Name="Grid" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
                            <ScrollBar x:Name="PART_VerticalScrollBar" Style="{StaticResource QSFScrollBarStyle}" HorizontalAlignment="Right" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource QSFScrollBarStyle}" VerticalAlignment="Bottom" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QSFTouchScrollViewerStyle" TargetType="{x:Type local:QSFTouchScrollViewer}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource Control.Border}" />
        <Setter Property="PanningMode" Value="Both"/>
        <Setter Property="PanningRatio" Value="1"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border x:Name="PART_ScrollContentPresenterContainer">
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
                        </Border>

                        <ScrollBar x:Name="PART_VerticalScrollBar" Style="{StaticResource QSFScrollBarStyle}" HorizontalAlignment="Right" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource QSFScrollBarStyle}" VerticalAlignment="Bottom" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QSFCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="root" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="CheckBox" Margin="2" VerticalAlignment="Top" Grid.Column="0" Width="12" Height="12" BorderBrush="{StaticResource Icon.Fill}" Background="{StaticResource TextBox.Background}" BorderThickness="1" CornerRadius="1">
                            <Grid>
                                <Path x:Name="CheckIcon" Visibility="Collapsed" Width="8" Height="8" Stroke="{StaticResource Icon.Fill}" StrokeThickness="2" Data="M1,1 L7,7 M7,1 L1,7" />
                                <Path x:Name="IndeterminateIcon" Visibility="Collapsed" Width="8" Height="8" Stroke="{StaticResource Icon.Fill}" StrokeThickness="2" Data="M1,4 L7,4" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="Content" Grid.Column="1" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckIcon" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="IndeterminateIcon" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Text.MouseOver}" />
                            <Setter TargetName="CheckBox" Property="BorderBrush" Value="{StaticResource Control.FocusBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="root" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QSFCheckBoxTouchStyle" TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="5,2,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="root" Background="Transparent" SnapsToDevicePixels="True" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bgr" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="root" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="checked" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="checkMark" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="checked" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="indeterminateMark" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focused">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="bgr" Grid.ColumnSpan="2" BorderThickness="0" BorderBrush="Transparent" Background="{telerik:Windows8TouchResource ResourceKey=LowBrush}" Opacity="0" />

                        <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,0,0,0">
                            <Rectangle x:Name="normal" Width="24" Height="24" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" Fill="{TemplateBinding Background}" 
								SnapsToDevicePixels="True" />
                            <Rectangle x:Name="hover" Width="24" Height="24" Stroke="{telerik:Windows8TouchResource ResourceKey=AccentBrush}" StrokeThickness="2" Fill="Transparent" Opacity="0" 
								SnapsToDevicePixels="True" />
                            <Rectangle x:Name="pressed" Width="24" Height="24" Stroke="Transparent" StrokeThickness="2" Fill="{telerik:Windows8TouchResource ResourceKey=AccentBrush}" Opacity="0" 
								SnapsToDevicePixels="True" />
                            <Rectangle x:Name="checked" Width="24" Height="24" Stroke="Transparent" StrokeThickness="2" Fill="{telerik:Windows8TouchResource ResourceKey=AccentBrush}" Opacity="0"
								SnapsToDevicePixels="True"/>
                            <Rectangle x:Name="focused" Width="24" Height="24" Stroke="{telerik:Windows8TouchResource ResourceKey=AccentBrush}" StrokeThickness="2" Fill="Transparent" Visibility="Collapsed"
								SnapsToDevicePixels="True" />
                            <Path x:Name="checkMark" FlowDirection="LeftToRight" HorizontalAlignment="Center" VerticalAlignment="Center"
								Data="M0,5.16667L2.16667,3L6,6.68637L11.8333,0L14,2L6,11z"
								Fill="{telerik:Windows8TouchResource ResourceKey=InvertedForegroundBrush}" Stretch="None" Opacity="0" SnapsToDevicePixels="True" />
                            <Rectangle x:Name="indeterminateMark" FlowDirection="LeftToRight"
								Fill="{telerik:Windows8TouchResource ResourceKey=InvertedForegroundBrush}" Width="12" Height="3" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"
								SnapsToDevicePixels="True" />
                        </Grid>

                        <ContentPresenter x:Name="Content" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QSFRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="CheckBox" Margin="2" VerticalAlignment="Top" Grid.Column="0" Width="12" Height="12" BorderBrush="{StaticResource Icon.Fill}" Background="{StaticResource TextBox.Background}" BorderThickness="1" CornerRadius="6">
                            <Grid>
                                <Ellipse x:Name="CheckIcon" Visibility="Collapsed" Width="6" Height="6" Fill="{StaticResource Icon.Fill}" />
                                <Ellipse x:Name="IndeterminateIcon" Visibility="Collapsed" Width="3" Height="3" Fill="{StaticResource Icon.Fill}" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="Content" Grid.Column="1" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckIcon" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="IndeterminateIcon" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Text.MouseOver}" />
                            <Setter TargetName="CheckBox" Property="BorderBrush" Value="{StaticResource Control.FocusBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource Button.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}" />
        <Setter Property="Foreground" Value="{StaticResource Button.Foreground}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter MinHeight="18" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource Button.Background.Checked}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RadToggleButtonStyle" TargetType="{x:Type telerik:RadToggleButton}">
        <Setter Property="Background" Value="{StaticResource Button.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}" />
        <Setter Property="Foreground" Value="{StaticResource Button.Foreground}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                    <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter MinHeight="18" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource Button.Background.Checked}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="QSFButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Button.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}" />
        <Setter Property="Foreground" Value="{StaticResource Button.Foreground}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter MinHeight="18" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QSFRadButtonStyle" TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource QSFButtonStyle}" />

    <Style x:Key="QSFExampleTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource TextBox.Foreground}"/>
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0 2"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" BorderBrush="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="RadComboBoxEditableTemplate" TargetType="{x:Type telerik:RadComboBox}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
            <Border Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="2" Background="{StaticResource TextBox.Background}">
                <Grid>
                    <TextBox x:Name="PART_EditableTextBox" Padding="-4 2" Margin="0" IsReadOnly="{TemplateBinding IsReadOnly}" BorderThickness="0" HorizontalAlignment="Stretch" BorderBrush="{x:Null}" Background="Transparent" />
                    <TextBlock x:Name="Watermark" Text="{TemplateBinding EmptyText}" Opacity=".5" IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5 0 0 0" Visibility="Collapsed" />
                </Grid>
            </Border>
            <ToggleButton x:Name="PART_DropDownButton" Grid.Column="1" Width="15">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </ToggleButton.Template>
                <Path Grid.Column="1" Margin="0 1 1 0" Width="8" Height="5" Data="M1,1 L4,4 7,1" Stroke="{StaticResource Icon.Picker}" StrokeThickness="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" />
            </ToggleButton>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" VerticalOffset="2" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Grid Margin="2 2 5 5">
                    <Rectangle Stroke="{StaticResource Button.Border}" Fill="{StaticResource TextBox.Background}" RadiusX="3" RadiusY="3">
                        <Rectangle.Effect>
                            <DropShadowEffect BlurRadius="6" Opacity="0.4" ShadowDepth="2"/>
                        </Rectangle.Effect>
                    </Rectangle>
                    <Border BorderThickness="1" BorderBrush="{StaticResource Button.Border}" MinWidth="{TemplateBinding MinDropDownWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Background="{StaticResource TextBox.Background}" CornerRadius="3">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Button x:Name="PART_ClearButton" Grid.Row="0" Visibility="{TemplateBinding ClearSelectionButtonVisibility}" Content="{TemplateBinding ClearSelectionButtonContent}" Style="{StaticResource QSFButtonStyle}"/>
                            <ScrollViewer x:Name="PART_ScrollViewer" Grid.Row="1" VerticalScrollBarVisibility="Auto" CanContentScroll="True" Style="{StaticResource QSFScrollViewerStyle}">
                                <ItemsPresenter Margin="1" />
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="RadComboBoxNonEditableTemplate" TargetType="{x:Type telerik:RadComboBox}">
        <Border Background="{TemplateBinding Background}" CornerRadius="3">
            <ToggleButton x:Name="PART_DropDownButton">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </ToggleButton.Template>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ContentPresenter x:Name="Content" TextBlock.Foreground="{StaticResource Button.Foreground}" Margin="{TemplateBinding Padding}" IsHitTestVisible="False" ContentSource="SelectionBoxItem" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    <Path Grid.Column="1" Margin="4" Width="8" Height="5" Data="M1,1 L4,4 7,1" Stroke="{StaticResource Icon.Picker}" StrokeThickness="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" />

                    <Popup x:Name="PART_Popup" AllowsTransparency="True" VerticalOffset="2" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <Grid Margin="2 2 5 5">
                            <Rectangle Stroke="{StaticResource Button.Border}" Fill="{StaticResource TextBox.Background}" RadiusX="3" RadiusY="3">
                                <Rectangle.Effect>
                                    <DropShadowEffect BlurRadius="6" Opacity="0.4" ShadowDepth="2"/>
                                </Rectangle.Effect>
                            </Rectangle>
                            <Border BorderThickness="1" BorderBrush="{StaticResource Button.Border}" MinWidth="{TemplateBinding MinDropDownWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Background="{StaticResource TextBox.Background}" CornerRadius="3">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Button x:Name="PART_ClearButton" Grid.Row="0" Visibility="{TemplateBinding ClearSelectionButtonVisibility}" Content="{TemplateBinding ClearSelectionButtonContent}" Style="{StaticResource QSFButtonStyle}" />
                                    <ScrollViewer x:Name="PART_ScrollViewer" Grid.Row="1" VerticalScrollBarVisibility="Auto" CanContentScroll="True" Style="{StaticResource QSFScrollViewerStyle}">
                                        <ItemsPresenter Margin="1" />
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Grid>
                    </Popup>
                </Grid>
            </ToggleButton>
        </Border>
    </ControlTemplate>
    <Style x:Key="QSFRadComboBoxItemStyle" TargetType="{x:Type telerik:RadComboBoxItem}">
        <Setter Property="Foreground" Value="{StaticResource TextBox.Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="3 0 3 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadComboBoxItem}">
                    <Border x:Name="Root" Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{StaticResource ContentControl.Highlight}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="QSFRadComboBoxStyle" TargetType="{x:Type telerik:RadComboBox}">
        <Setter Property="Foreground" Value="{StaticResource TextBox.Foreground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}" />
        <Setter Property="Background" Value="{StaticResource Button.Background}" />
        <Setter Property="Template" Value="{StaticResource RadComboBoxNonEditableTemplate}" />
        <Setter Property="Margin" Value="1 0" />
        <Setter Property="NonEditableTemplate" Value="{StaticResource RadComboBoxNonEditableTemplate}" />
        <Setter Property="EditableTemplate" Value="{StaticResource RadComboBoxEditableTemplate}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource QSFRadComboBoxItemStyle}" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Padding" Value="5 0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="QSFListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Foreground" Value="{StaticResource TextBox.Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="3 0 3 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Root" Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource ContentControl.Highlight}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="QSFListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource TextBox.Background}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource QSFListBoxItemStyle}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="2">
                        <ScrollViewer x:Name="ScrollViewer"
                                      Margin="0"
                                      Padding="{TemplateBinding Padding}"
                                      ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                                      ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      Background="Transparent" BorderThickness="0">
                            <ItemsPresenter Margin="1" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NumericIncreaseRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent">
                        <Path Grid.Column="1" Margin="4 0" Width="8" Height="5" Data="M1,4 L4,1 7,4" Stroke="{StaticResource Icon.Picker}" StrokeThickness="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NumericDecreaseRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent">
                        <Path Grid.Column="1" Margin="4 0" Width="8" Height="5" Data="M1,1 L4,4 7,1" Stroke="{StaticResource Icon.Picker}" StrokeThickness="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QSFRadNumericUpDownStyle" TargetType="{x:Type telerik:RadNumericUpDown}">
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}" />
        <Setter Property="Background" Value="{StaticResource Button.Background}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4 2" />
        <Setter Property="Foreground" Value="{StaticResource TextBox.Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadNumericUpDown}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.RowSpan="2" Grid.ColumnSpan="2" Fill="{StaticResource Button.Background}" RadiusX="2" RadiusY="2" />
                        <Rectangle Grid.RowSpan="2" Fill="{StaticResource TextBox.Background}" RadiusX="2" RadiusY="2" Margin="{TemplateBinding BorderThickness}" />
                        <TextBox x:Name="textbox" Foreground="{TemplateBinding Foreground}" Grid.RowSpan="2" BorderBrush="{x:Null}" BorderThickness="0" Background="Transparent" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <RepeatButton x:Name="increase" Margin="-1 0 0 0" Grid.Row="0" Grid.Column="1" Style="{StaticResource NumericIncreaseRepeatButtonStyle}" />
                        <RepeatButton x:Name="decrease" Margin="-1 0 0 0" Grid.Row="1" Grid.Column="1" Style="{StaticResource NumericDecreaseRepeatButtonStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CalendarButtonStyle" TargetType="{x:Type calendar:CalendarButton}">
        <Setter Property="Foreground" Value="{StaticResource TextBox.Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type calendar:CalendarButton}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="Content" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource ContentControl.Highlight}" />
                        </Trigger>
                        <Trigger Property="IsFromCurrentView" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource CalendarButton.OtherView.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="TodayDate">
                            <Setter Property="TextBlock.FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="WeekNumber" />
                        <Trigger Property="ButtonType" Value="WeekName" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadCalendarMonthViewStyle" TargetType="{x:Type calendar:CalendarView}">
        <Setter Property="Padding" Value="0 2 0 4" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type calendar:CalendarView}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Visibility="{TemplateBinding HeaderVisibility}">
                            <ContentPresenter Content="{TemplateBinding Header}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding HeaderTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Rectangle VerticalAlignment="Bottom" Height="1" Fill="{StaticResource Control.Border}" />
                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="6*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="7*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle VerticalAlignment="Bottom" Grid.ColumnSpan="2" Height="1" Fill="{StaticResource Control.Border}" Visibility="{Binding HideRow, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}" />
                            <Rectangle HorizontalAlignment="Right" Grid.RowSpan="2" Width="1" Fill="{StaticResource Control.Border}" Visibility="{Binding HideColumn, Converter={StaticResource InvertedBooleanToVisibilityConverterInstance}}"/>
                        </Grid>
                        <ItemsPresenter Grid.Row="1" Margin="1" />
                        <Rectangle Grid.Row="1" MinWidth="220" MinHeight="142" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadCalendarViewStyle" TargetType="{x:Type calendar:CalendarView}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type calendar:CalendarView}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Visibility="{TemplateBinding HeaderVisibility}">
                            <ContentPresenter Content="{TemplateBinding Header}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding HeaderTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Rectangle VerticalAlignment="Bottom" Height="1" Fill="{StaticResource Control.Border}" />
                        </Grid>
                        <ItemsPresenter Grid.Row="1" Margin="{StaticResource CalendarItemsMargin}" />
                        <Rectangle Grid.Row="1" MinWidth="220" MinHeight="142" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CalendarMoveLeftRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent">
                        <Path Grid.Column="1" Margin="4 0" Width="5" Height="8" Data="M4,1 L1,4 4,7" Stroke="{StaticResource Icon.Picker}" StrokeThickness="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CalendarMoveRightRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent">
                        <Path Grid.Column="1" Margin="4 0" Width="5" Height="8" Data="M1,1 L4,4 1,7" Stroke="{StaticResource Icon.Picker}" StrokeThickness="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CalendarViewModeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Button.Foreground}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QSFRadCalendarStyle" TargetType="{x:Type telerik:RadCalendar}">
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}" />
        <Setter Property="Background" Value="{StaticResource TextBox.Background}" />
        <Setter Property="BorderThickness" Value="1" />

        <Setter Property="MonthViewStyle" Value="{StaticResource RadCalendarMonthViewStyle}" />
        <Setter Property="YearViewStyle" Value="{StaticResource RadCalendarViewStyle}" />
        <Setter Property="DecadeViewStyle" Value="{StaticResource RadCalendarViewStyle}" />
        <Setter Property="CenturyViewStyle" Value="{StaticResource RadCalendarViewStyle}" />

        <Setter Property="DayButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="MonthButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="YearButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="DecadeButtonStyle" Value="{StaticResource CalendarButtonStyle}" />

        <Setter Property="ViewsHeaderVisibility" Value="Collapsed" />
        <Setter Property="AreWeekNumbersVisible" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadCalendar}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Visibility="{TemplateBinding HeaderVisibility}" Height="22">
                                <Rectangle Margin="0" Fill="{StaticResource Button.Background}" RadiusX="1" RadiusY="1" />
                                <RepeatButton x:Name="MoveLeft" Margin="2 2 0 2" HorizontalAlignment="Left" Grid.Column="0" Content="◄" Width="20" Style="{StaticResource CalendarMoveLeftRepeatButtonStyle}" />
                                <Button x:Name="Header" Grid.Column="1" Margin="0 2" HorizontalAlignment="Center" MinWidth="100" Style="{StaticResource CalendarViewModeButtonStyle}" />
                                <RepeatButton x:Name="MoveRight" Margin="0 2 2 2" HorizontalAlignment="Right" Grid.Column="2" Content="►" Width="20" Style="{StaticResource CalendarMoveRightRepeatButtonStyle}" />
                            </Grid>
                            <calendar:TransitionPanel x:Name="TransitionPanel" Grid.Row="1" ClipToBounds="True">
                                <telerikPrimitives:RadUniformGrid x:Name="MonthViews" Columns="{TemplateBinding Columns}" Rows="{TemplateBinding Rows}" />
                                <telerikPrimitives:RadUniformGrid x:Name="YearViews" Visibility="Collapsed" Columns="{TemplateBinding Columns}" Rows="{TemplateBinding Rows}" />
                                <telerikPrimitives:RadUniformGrid x:Name="DecadeViews" Visibility="Collapsed" Columns="{TemplateBinding Columns}" Rows="{TemplateBinding Rows}" />
                                <telerikPrimitives:RadUniformGrid x:Name="CenturyViews" Visibility="Collapsed" Columns="{TemplateBinding Columns}" Rows="{TemplateBinding Rows}" />
                            </calendar:TransitionPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadClockItemStyle" TargetType="{x:Type telerik:RadClockItem}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource TextBox.Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadClockItem}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="Content" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource ContentControl.Highlight}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadClockStyle" TargetType="{x:Type telerik:RadClock}">
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}" />
        <Setter Property="Background" Value="{StaticResource TextBox.Background}" />
        <Setter Property="BorderThickness" Value="1" />

        <Setter Property="telerik:LocalizationManager.ResourceKey" Value="Clock" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource RadClockItemStyle}" />

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerikPrimitives:RadUniformGrid x:Name="uniformGrid" Columns="4" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadClock}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Height="22">
                                <Rectangle Margin="0" Fill="{StaticResource Button.Background}" RadiusX="1" RadiusY="1" />
                                <ContentPresenter TextBlock.Foreground="{StaticResource Button.Foreground}" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                            <ItemsPresenter Grid.Row="1" Margin="1" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QSFRadDateTimePickerStyle" TargetType="{x:Type telerik:RadDateTimePicker}">
        <Setter Property="Foreground" Value="{StaticResource TextBox.Foreground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}" />
        <Setter Property="Background" Value="{StaticResource Button.Background}" />
        <Setter Property="Padding" Value="1 0" />
        <Setter Property="ClockStyle" Value="{StaticResource RadClockStyle}" />
        <Setter Property="CalendarStyle" Value="{StaticResource QSFRadCalendarStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadDateTimePicker}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="2" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                        <Border Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="2" Background="{StaticResource TextBox.Background}">
                            <telerik:RadWatermarkTextBox x:Name="PART_DateTimeInput" Padding="0" Margin="0" IsReadOnly="{TemplateBinding IsReadOnly}" VerticalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" BorderThickness="0" MinHeight="0" TextAlignment="{TemplateBinding TextAlignment}" TabIndex="0" Text="{Binding DateTimeText, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Background="{x:Null}" BorderBrush="{x:Null}" CurrentText="{Binding CurrentDateTimeText, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectionOnFocus="SelectAll" WatermarkTemplate="{TemplateBinding DateTimeWatermarkTemplate}" WatermarkContent="{TemplateBinding DateTimeWatermarkContent}" />
                        </Border>

                        <telerik:RadDropDownButton x:Name="PART_DropDownButton" Grid.Column="1" TabIndex="1" Width="15" Padding="0" IsTabStop="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Focusable="False" CloseOnEnter="True" DropDownIndicatorVisibility="Collapsed" telerik:DateTimePickerExtensions.FocusContentOnOpen="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" PopupPlacementTarget="{Binding ElementName=PART_DateTimeInput}">
                            <telerik:RadDropDownButton.Template>
                                <ControlTemplate TargetType="{x:Type telerik:RadDropDownButton}">
                                    <Grid Background="Transparent">
                                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        <Popup x:Name="DropDownPopup" AllowsTransparency="True" StaysOpen="False" Focusable="False" Placement="Bottom" IsOpen="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}" HorizontalOffset="-2" VerticalOffset="3">
                                            <Grid Margin="10">
                                                <Rectangle Stroke="{StaticResource Button.Border}" Fill="{StaticResource TextBox.Background}" RadiusX="3" RadiusY="3">
                                                    <Rectangle.Effect>
                                                        <DropShadowEffect BlurRadius="6" Opacity="0.4" ShadowDepth="2"/>
                                                    </Rectangle.Effect>
                                                </Rectangle>
                                                <ContentPresenter x:Name="DropDownPopupContent" Content="{TemplateBinding DropDownContent}" ContentTemplate="{TemplateBinding DropDownContentTemplate}" DataContext="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                </ControlTemplate>
                            </telerik:RadDropDownButton.Template>
                            <telerik:RadDropDownButton.DropDownContent>
                                <Border BorderBrush="{StaticResource Control.Border}" BorderThickness="1" Background="{StaticResource TextBox.Background}" CornerRadius="2" Padding="1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <telerik:RadCalendar x:Name="PART_Calendar" Culture="{TemplateBinding Culture}" Grid.Column="0" DisplayDateEnd="{Binding DisplayDateEnd, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DateSelectionMode="{TemplateBinding DateSelectionMode}" DisplayDateStart="{Binding DisplayDateStart, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DisplayDate="{Binding DisplayDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="1" Grid.Row="0" Style="{TemplateBinding CalendarStyle}" SelectableDateEnd="{Binding SelectableDateEnd, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectionMode="Single" SelectedDate="{Binding SelectedDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectableDateStart="{Binding SelectableDateStart, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <telerik:DateTimePickerClock x:Name="PART_Clock" Culture="{TemplateBinding Culture}" Grid.Column="1" EndTime="{TemplateBinding EndTime}" IsReadOnly="{TemplateBinding IsReadOnly}" ItemsSource="{TemplateBinding ClockItemsSource}" Margin="1" Grid.Row="0" Style="{TemplateBinding ClockStyle}" SelectedTime="{Binding SelectedTime, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" StartTime="{TemplateBinding StartTime}" TimeInterval="{Binding TimeInterval, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <telerik:RadToggleButton x:Name="PART_Close" Grid.ColumnSpan="2" Content="Close" HorizontalAlignment="Right" IsThreeState="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Padding="8 0" Grid.Row="1" Style="{StaticResource ToggleButtonStyle}"/>
                                    </Grid>
                                </Border>
                            </telerik:RadDropDownButton.DropDownContent>
                            <Path Grid.Column="1" Width="8" Height="5" Margin="0 1 1 0" Data="M1,1 L4,4 7,1" Stroke="{StaticResource Icon.Picker}" StrokeThickness="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" />
                        </telerik:RadDropDownButton>

                        <Popup x:Name="PART_InputPopup" StaysOpen="False" AllowsTransparency="True" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" telerik:PopupExtensions.IsOpen="{Binding IsTooltipOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" telerik:PopupExtensions.Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}" telerik:PopupExtensions.Placement="Top" telerik:PopupExtensions.PlacementTarget="{Binding ElementName=PART_DateTimeInput}">
                            <ContentPresenter Content="{TemplateBinding TooltipContent}" ContentTemplate="{TemplateBinding TooltipTemplate}" />
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="InputMode" Value="DatePicker">
                            <Setter TargetName="PART_Clock" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Close" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="InputMode" Value="TimePicker">
                            <Setter TargetName="PART_Calendar" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Close" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadColorPaletteViewItemStyle" TargetType="{x:Type telerik:RadColorPaletteViewItem}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadColorPaletteViewItem}">
                    <Grid x:Name="RootElement" Background="Transparent" ToolTipService.ToolTip="{Binding}">
                        <ContentPresenter Margin="3 1" MinHeight="11" MinWidth="11" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Border x:Name="SelectionVisual" Visibility="Hidden" BorderThickness="2" Margin="0 -2" BorderBrush="{StaticResource ContentControl.StrongHighlight}" CornerRadius="1.5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="SelectionVisual" Property="Visibility" Value="Visible" />
                            <Setter Property="Panel.ZIndex" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadColorPaletteViewStyle" TargetType="{x:Type telerik:RadColorPaletteView}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource RadColorPaletteViewItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadColorPaletteView}">
                    <Border BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" BorderThickness="{TemplateBinding Border.BorderThickness}">
                        <ItemsPresenter x:Name="ItemsPresenter" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerikPrimitives:RadUniformGrid ChildrenFlow="Vertical" Columns="10" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0" />
    </Style>
    <Style x:Key="RadColorSelectorAutomaticButtonStyle" TargetType="{x:Type telerik:RadButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                    <Grid>
                        <Border BorderThickness="2" Margin="2" Padding="2" BorderBrush="{StaticResource ContentControl.StrongHighlight}" HorizontalAlignment="Left" CornerRadius="2">
                            <Rectangle Fill="{TemplateBinding Tag}" Width="12" Height="12" />
                        </Border>
                        <Border Margin="24 2 2 2" CornerRadius="1" Background="{StaticResource ContentControl.Highlight}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QSFRadColorSelectorStyle" TargetType="{x:Type telerik:RadColorSelector}">

        <Setter Property="MainPaletteColumnsCount" Value="10" />
        <Setter Property="MainPaletteOrientation" Value="Vertical" />
        <Setter Property="MainPalette" Value="Office" />
        <Setter Property="HeaderPaletteVisibility" Value="Visible" />
        <Setter Property="StandardPaletteVisibility" Value="Visible" />
        <Setter Property="NoColorVisibility" Value="Visible" />
        <Setter Property="SelectedColor" Value="Black" />
        <Setter Property="StandardPalette" Value="Standard" />
        <Setter Property="HeaderPalette" Value="Office" />
        <Setter Property="AutomaticColor" Value="Black" />

        <Setter Property="MainPaletteItemsStyle" Value="{StaticResource RadColorPaletteViewItemStyle}" />

        <Setter Property="Foreground" Value="{StaticResource TextBox.Foreground}"/>
        <Setter Property="AutomaticColor" Value="Black" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadColorSelector}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="4.5*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <Border BorderThickness="0 0 0 1" BorderBrush="{StaticResource Control.Border}" Visibility="{TemplateBinding NoColorVisibility}">
                                <telerik:RadButton x:Name="PaletteHeader" Style="{StaticResource RadColorSelectorAutomaticButtonStyle}" Tag="{Binding AutomaticColor, Converter={StaticResource ColorToBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}" Content="{TemplateBinding NoColorText}"/>
                            </Border>
                            <Border Grid.Row="1" Margin="6 0" Padding="0 2" BorderThickness="0 0 0 1" BorderBrush="{StaticResource Control.Border}">
                                <TextBlock x:Name="mainPaletteHeader" telerik:LocalizationManager.ResourceKey="ColorSelectorMainPaletteHeaderText" />
                            </Border>
                            <telerik:RadColorPaletteView x:Name="HeaderPalette" Grid.Row="2" Margin="4 6 4 4" Style="{StaticResource RadColorPaletteViewStyle}">
                                <telerik:RadColorPaletteView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <telerikPrimitives:RadUniformGrid Background="#00FFFFFF" Columns="10" />
                                    </ItemsPanelTemplate>
                                </telerik:RadColorPaletteView.ItemsPanel>
                            </telerik:RadColorPaletteView>
                            <telerik:RadColorPaletteView x:Name="MainPalette" Margin="4" Grid.Row="3" ItemContainerStyle="{TemplateBinding MainPaletteItemsStyle}" Style="{StaticResource RadColorPaletteViewStyle}" />
                            <Border x:Name="StandardPaletteBorder" Grid.Row="4" Margin="6 0" Padding="0 2" BorderThickness="0 0 0 1" BorderBrush="{StaticResource Control.Border}">
                                <TextBlock x:Name="standardPaletteHeader" telerik:LocalizationManager.ResourceKey="ColorSelectorStandardPaletteHeaderText"/>
                            </Border>
                            <telerik:RadColorPaletteView x:Name="StandartPalette" Margin="4 6 4 8" Grid.Row="5" Style="{StaticResource RadColorPaletteViewStyle}">
                                <telerik:RadColorPaletteView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <telerikPrimitives:RadUniformGrid Columns="10" />
                                    </ItemsPanelTemplate>
                                </telerik:RadColorPaletteView.ItemsPanel>
                            </telerik:RadColorPaletteView>

                            <Border x:Name="RecentColorsPaletteBorder" Visibility="Collapsed" />
                            <telerik:RadColorPaletteView x:Name="RecentColorsPalette" Visibility="Collapsed" />
                            <Border x:Name="AdditionalContentBorder" Visibility="Collapsed" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadColorPickerColorButtonStyle" TargetType="{x:Type telerik:RadButton}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                    <Grid>
                        <ContentPresenter Grid.Column="1" x:Name="contentPresenter" 
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							VerticalAlignment="Center" HorizontalAlignment="Left" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadColorPickerDropDownButtonStyle" TargetType="{x:Type telerik:RadToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                    <Border Background="Transparent">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Width="15">
                        <Path Grid.Column="1" Margin="0 1 1 0" Width="8" Height="5" Data="M1,1 L4,4 7,1" Stroke="{StaticResource Icon.Picker}" StrokeThickness="2" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadColorPickerSplitButtonStyle" TargetType="{x:Type telerik:RadSplitButton}">
        <Setter Property="TogglePartStyle" Value="{StaticResource RadColorPickerDropDownButtonStyle}" />
        <Setter Property="ButtonPartStyle" Value="{StaticResource RadColorPickerColorButtonStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadSplitButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="2" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                        <telerik:RadButton x:Name="ButtonPart"  Style="{TemplateBinding ButtonPartStyle}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <telerik:RadToggleButton x:Name="DropDownPart" Grid.Column="1"  IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
							Style="{TemplateBinding TogglePartStyle}"/>

                        <Popup x:Name="DropDownPopup" >
                            <Grid Margin="2 2 5 5">
                                <Rectangle Stroke="{StaticResource Button.Border}" Fill="Transparent" RadiusX="3" RadiusY="3">
                                    <Rectangle.Effect>
                                        <DropShadowEffect BlurRadius="6" Opacity="0.4" ShadowDepth="2"/>
                                    </Rectangle.Effect>
                                </Rectangle>
                                <ContentPresenter x:Name="DropDownPopupContent"
									Content="{TemplateBinding DropDownContent}"
									ContentTemplate="{TemplateBinding DropDownContentTemplate}"
									HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
									DataContext="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QSFRadColorPickerStyle" TargetType="{x:Type telerik:RadColorPicker}">
        <Setter Property="MainPaletteColumnsCount" Value="10" />
        <Setter Property="MainPaletteOrientation" Value="Vertical" />
        <Setter Property="MainPalette" Value="Office" />
        <Setter Property="HeaderPaletteVisibility" Value="Visible" />
        <Setter Property="StandardPaletteVisibility" Value="Visible" />
        <Setter Property="NoColorVisibility" Value="Visible" />
        <Setter Property="SelectedColor" Value="Black" />
        <Setter Property="StandardPalette" Value="Standard" />
        <Setter Property="HeaderPalette" Value="Office" />
        <Setter Property="MainPaletteItemsStyle" Value="{StaticResource RadColorPaletteViewItemStyle}" />
        <Setter Property="SplitButtonStyle" Value="{StaticResource RadColorPickerSplitButtonStyle}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="{StaticResource Button.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource TextBox.Foreground}" />
        <Setter Property="AutomaticColor" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadColorPicker}">
                    <Grid x:Name="Root" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <telerik:RadSplitButton x:Name="SplitButton" 
							Style="{TemplateBinding SplitButtonStyle}" Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}" DropDownPlacement="{TemplateBinding DropDownPlacement}" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsOpen, RelativeSource={RelativeSource Self}}">
                            <telerik:RadSplitButton.DropDownContent>
                                <Grid>
                                    <telerik:RadColorSelector x:Name="ColorSelector" AutomaticColor="{TemplateBinding AutomaticColor}" BorderBrush="{TemplateBinding BorderBrush}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" HeaderPaletteVisibility="{TemplateBinding HeaderPaletteVisibility}" HeaderPalette="{TemplateBinding HeaderPalette}" MainPaletteItemsStyle="{TemplateBinding MainPaletteItemsStyle}" MainPaletteHeaderText="{TemplateBinding MainPaletteHeaderText}" MainPaletteOrientation="{TemplateBinding MainPaletteOrientation}" MainPaletteColumnsCount="{TemplateBinding MainPaletteColumnsCount}" MainPalette="{TemplateBinding MainPalette}" NoColorVisibility="{TemplateBinding NoColorVisibility}" NoColorText="{TemplateBinding NoColorText}" StandardPaletteVisibility="{TemplateBinding StandardPaletteVisibility}" SelectedColor="{Binding SelectedColor, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" StandardPaletteHeaderText="{TemplateBinding StandardPaletteHeaderText}" StandardPalette="{TemplateBinding StandardPalette}"/>
                                </Grid>
                            </telerik:RadSplitButton.DropDownContent>
                        </telerik:RadSplitButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate" >
            <Setter.Value>
                <DataTemplate>
                    <Rectangle MinHeight="16" Margin="4" MinWidth="16" Stroke="White" RadiusX="2" RadiusY="2" MaxWidth="50" MaxHeight="50" Width="16" Height="16" HorizontalAlignment="Left">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse StrokeThickness="2" Width="12" Height="12" Stroke="{StaticResource Control.Border}" Fill="{StaticResource ContentControl.Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadSliderDecreaseRepeatButtonStyle1" TargetType="{x:Type RepeatButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent">
                        <Path x:Name="Path" Width="7" Height="10" Data="M6,1 L2,5 6,9" StrokeDashCap="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeThickness="2" Stroke="{StaticResource Control.Border}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadSliderIncreaseRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Background="Transparent" x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Path Width="7" Height="10" Data="M1,1 L5,5 1,9" StrokeDashCap="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeThickness="2" Stroke="{StaticResource Control.Border}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF848484"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="White"/>
                    <GradientStop Color="#FFD4D4D4" Offset="1"/>
                    <GradientStop Color="Gainsboro" Offset="0.42"/>
                    <GradientStop Color="#FFADADAD" Offset="0.43"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadSliderDecreaseRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Background="Transparent" x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Path Width="7" Height="10" Data="M6,1 L2,5 6,9" StrokeDashCap="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeThickness="2" Stroke="{StaticResource Control.Border}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF848484"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="White"/>
                    <GradientStop Color="#FFD4D4D4" Offset="1"/>
                    <GradientStop Color="Gainsboro" Offset="0.42"/>
                    <GradientStop Color="#FFADADAD" Offset="0.43"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadSliderIncreaseRepeatButtonStyle1" TargetType="{x:Type RepeatButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border >
                        <Path x:Name="Path"  Width="7" Height="10" Data="M1,1 L5,5 1,9" StrokeDashCap="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeThickness="2" Stroke="{StaticResource Control.Border}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LargeHandleStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadSliderTrackStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Rectangle RadiusX="1" RadiusY="1" Height="2" Fill="{StaticResource Control.Border}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SelectionMiddleThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="Transparent">
                        <Border Margin="-1.5 0" BorderThickness="0 2" Height="6" BorderBrush="{StaticResource Button.Border}" />
                        <Border Margin="-2.5 0" Height="2" Background="{StaticResource ContentControl.Background}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TickBarStyle" TargetType="{x:Type telerik:RadTickBar}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid Background="#00FFFFFF" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="TickTemplate">
        <Rectangle Width="2" Height="4" RadiusX="1" RadiusY="1" Fill="{StaticResource Button.Background}" />
    </DataTemplate>
    <Style x:Key="QSFRadSliderStyle" BasedOn="{StaticResource RadSliderStyle}"  TargetType="{x:Type telerik:RadSlider}">
        <Setter Property="HandlesVisibility" Value="Visible"/>
        <Setter Property="ThumbStyle" Value="{StaticResource RadSliderThumbStyle}" />
        <Setter Property="IncreaseHandleStyle" Value="{StaticResource RadSliderIncreaseRepeatButtonStyle}" />
        <Setter Property="DecreaseHandleStyle" Value="{StaticResource RadSliderDecreaseRepeatButtonStyle}" />
        <Setter Property="TrackStyle" Value="{StaticResource RadSliderTrackStyle}" />
        <Setter Property="TickTemplate" Value="{StaticResource TickTemplate}" />
        <Setter Property="TickBarStyle" Value="{StaticResource TickBarStyle}" />
        <Setter Property="SelectionMiddleThumbStyle" Value="{StaticResource SelectionMiddleThumbStyle}" />
        <Setter Property="HandlesVisibility" Value="Visible" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadSlider}">
                    <telerikPrimitives:LayoutTransformControl x:Name="layoutControl" RenderTransformOrigin=".5 0">
                        <telerikPrimitives:LayoutTransformControl.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </telerikPrimitives:LayoutTransformControl.LayoutTransform>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <telerik:RadTickBar x:Name="TopTickBar" ItemsSource="{TemplateBinding ResultTicks}" Grid.Column="1" Grid.ColumnSpan="3" ItemTemplate="{TemplateBinding TickTemplate}" ItemTemplateSelector="{TemplateBinding TickTemplateSelector}" Style="{TemplateBinding TickBarStyle}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" />
                            <ContentControl x:Name="Track" Style="{TemplateBinding TrackStyle}" Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1" VerticalAlignment="Center" Background="{TemplateBinding Background}" />
                            <RepeatButton x:Name="DecreaseButton" Grid.Row="1" Delay="{TemplateBinding Delay}" Interval="{TemplateBinding RepeatInterval}" Visibility="{TemplateBinding HandlesVisibility}" Style="{TemplateBinding DecreaseHandleStyle}" />
                            <RepeatButton x:Name="LargeDecreaseButton" Grid.Column="1" Grid.Row="1" Style="{StaticResource LargeHandleStyle}" Delay="{TemplateBinding Delay}" Interval="{TemplateBinding RepeatInterval}" />
                            <Grid Grid.Row="1" Grid.Column="2" Visibility="{TemplateBinding ThumbVisibility}">
                                <Thumb x:Name="SingleThumbHost" Style="{TemplateBinding ThumbStyle}" />
                                <StackPanel x:Name="RangeThumbsPanel" Orientation="Horizontal" Visibility="Collapsed">
                                    <Thumb x:Name="RangeStartThumb" Style="{TemplateBinding ThumbStyle}" />
                                    <Thumb x:Name="RangeMiddleThumb" Panel.ZIndex="1" Style="{TemplateBinding SelectionMiddleThumbStyle}" />
                                    <Thumb x:Name="RangeEndThumb" Style="{TemplateBinding ThumbStyle}" />
                                </StackPanel>
                            </Grid>
                            <RepeatButton x:Name="LargeIncreaseButton" Grid.Column="3" Grid.Row="1" Style="{StaticResource LargeHandleStyle}" Delay="{TemplateBinding Delay}" Interval="{TemplateBinding RepeatInterval}" />
                            <RepeatButton x:Name="IncreaseButton" Grid.Row="1" Grid.Column="4" Delay="{TemplateBinding Delay}" Interval="{TemplateBinding RepeatInterval}" Visibility="{TemplateBinding HandlesVisibility}" RenderTransformOrigin="0.5,0.5" Style="{TemplateBinding IncreaseHandleStyle}" />
                            <telerik:RadTickBar x:Name="BottomTickBar" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" ItemsSource="{TemplateBinding ResultTicks}" ItemTemplate="{TemplateBinding TickTemplate}" ItemTemplateSelector="{TemplateBinding TickTemplateSelector}" Style="{TemplateBinding TickBarStyle}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" />
                        </Grid>
                    </telerikPrimitives:LayoutTransformControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="layoutControl" Duration="0" To="-90" Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="layoutControl" Duration="0" To="0" Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsDirectionReversed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="layoutControl" Duration="0" To="-1" Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="layoutControl" Duration="0" To="0" Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="True">
                            <Setter TargetName="SingleThumbHost" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RangeThumbsPanel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="None">
                            <Setter TargetName="TopTickBar" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="BottomTickBar" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter TargetName="TopTickBar" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomTickBar" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter TargetName="TopTickBar" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="BottomTickBar" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter TargetName="TopTickBar" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomTickBar" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- QSF CustomControls -->

    <Style x:Key="AllControlsButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Foreground" Value="#FF3D4350" />
        <Setter Property="FontSize" Value="9.333" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <!--<Path Grid.Column="0" Margin="7" Stroke="{StaticResource Icon.Fill}" Data="M1,1 L4,4 7,1" Width="8" Height="5" VerticalAlignment="Center" StrokeThickness="1.8" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" />-->
                        <ContentPresenter Grid.Column="1" RecognizesAccessKey="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FF5B074D" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RealeaseNotesButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Foreground" Value="#FF5B074D" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Content" Value="{Binding Data.ReleaseVersion}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <ContentPresenter x:Name="Content" RecognizesAccessKey="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" ToolTip="Release History"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#bf1bb4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="AllControlsDataTemplate">
        <StackPanel Orientation="Horizontal">
            <StackPanel Margin="15 0 15 15">
                <TextBlock Text="DevTools" Style="{StaticResource CategoryStyle}" />

                <TextBlock Text="WEB" Style="{StaticResource SubCategoryStyle}" />
                <Button Content="UI for ASP.NET AJAX" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/aspnet-ajax.aspx" />
                <Button Content="UI for ASP.NET MVC" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/aspnet-mvc.aspx" />
                <Button Content="UI for PHP" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/silverlight.aspx" />
                <Button Content="UI for JSP" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/silverlight.aspx" />
                <Button Content="UI for Silverlight" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/silverlight.aspx" />

                <TextBlock Text="DESKTOP" Style="{StaticResource SubCategoryStyle}" />
                <Button Content="UI for WPF" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/wpf.aspx" />
                <Button Content="UI for Windows Forms" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/winforms.aspx" />

                <TextBlock Text="Mobile UI Controls and Combonents" Style="{StaticResource SubCategoryStyle}" />
                <Button Content="Windows Phone" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/windows-phone.aspx" />

                <TextBlock Text="Report Designer and Viewer" Style="{StaticResource SubCategoryStyle}" />
                <Button Content="Telerik Reporting" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/reporting.aspx" />

                <TextBlock Text="Data Access" Style="{StaticResource SubCategoryStyle}" />
                <Button Content="OpenAccess ORM" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/orm.aspx" />

                <TextBlock Text="Visual Studio Productivity Plugins" Style="{StaticResource SubCategoryStyle}" />
                <Button Content="JustCode" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/justcode.aspx" />
                <Button Content="JustMock" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/mocking.aspx" />
                <Button Content="JustTrace" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/memory-performance-profiler.aspx" />
                <Button Content="JustDecompile" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/decompiler.aspx" />
            </StackPanel>
            <Border Margin="0 0 0 0">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                        <GradientStop Offset="0" Color="#22000000" />
                        <GradientStop Offset="0.2" Color="#00FFFFFF" />
                    </LinearGradientBrush>
                </Border.Background>
                <StackPanel Margin="25 0 15 15">
                    <TextBlock Text="HTML5 / JavaScript Widgets" Style="{StaticResource CategoryStyle}" />
                    <Button Content="KendoUI Web" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.kendoui.com/kendo-ui.aspx" />
                    <Button Content="KendoUI Mobile" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.kendoui.com/kendo-ui-mobile.aspx" />
                    <Button Content="KendoUI DataViz" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.kendoui.com/dataviz.aspx" />

                    <TextBlock Text="Agile Project Management" Style="{StaticResource CategoryStyle}" />
                    <Button Content="TeamPulse" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/team-productivity-tools.aspx" />

                    <TextBlock Text="Software Testing Tools" Style="{StaticResource CategoryStyle}" />
                    <Button Content="Test Studio (Web &amp; Desktop Testing)" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/automated-testing-tools.aspx" />
                    <Button Content="Test Studio (Visual Studio plugin)" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/automated-testing-tools/visual-studio-plug-in-benefits.aspx" />
                    <Button Content="Test Studio for iOS" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/automated-testing-tools/ios-testing/ios-application-testing.aspx" />

                    <TextBlock Text="Web Content Management" Style="{StaticResource CategoryStyle}" />
                    <Button Content="Sitefinity ASP.NET CMS" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.sitefinity.com/" />
                    <Button Content="Add-ons Marketplace" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.sitefinity.com/marketplace.aspx" />

                    <TextBlock Text="SharePoint" Style="{StaticResource CategoryStyle}" />
                    <Button Content="SharePoint Acceleration Kit" Style="{StaticResource LinkButtonStyle}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="http://www.telerik.com/products/sharepoint.aspx" />
                </StackPanel>
            </Border>
        </StackPanel>
    </DataTemplate>

    <Style TargetType="{x:Type local:DropDownButton}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DropDownButton}">
                    <Border ClipToBounds="False"  Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>

                            <Grid x:Name="AllControlsPopupRoot" Opacity="0"  Visibility="Collapsed" Margin="-700,-15,-15,-7000"  HorizontalAlignment="Right" VerticalAlignment="Top">
                                <Grid x:Name="ShadowBackground">
                                    <Grid.Effect>
                                        <DropShadowEffect BlurRadius="7" ShadowDepth="1" Opacity="0.5" />
                                    </Grid.Effect>
                                    <Border Margin="10 40 10 10" BorderThickness="0 0 1 1" CornerRadius="3 0 3 3" BorderBrush="{StaticResource ContentControl.Border}" Background="{StaticResource ContentControl.Background}" />
                                    <Border Margin="10 40 159 10" BorderThickness="1 1 0 0" CornerRadius="3 0 0 3" BorderBrush="{StaticResource ContentControl.Border}" />
                                    <Border Margin="10" Width="150" Height="30" BorderThickness="1 1 1 0" CornerRadius="3 3 0 0" BorderBrush="{StaticResource ContentControl.Border}" Background="{StaticResource ContentControl.Background}" HorizontalAlignment="Right" VerticalAlignment="Top" />
                                </Grid>
                                <ContentPresenter Margin="10,40,10,10"  ContentTemplate="{StaticResource AllControlsDataTemplate}"/>
                            </Grid>
                            <Button x:Name="PART_OpenButton" Width="140" Height="20"   HorizontalAlignment="Left" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Style="{StaticResource AllControlsButtonStyle}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AllControlsPopupRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AllControlsPopupRoot">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AllControlsPopupRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AllControlsPopupRoot">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropDownButtonHome" TargetType="{x:Type local:DropDownButton}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DropDownButton}">
                    <Border Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid x:Name="AllControlsPopupRoot" Visibility="Collapsed" Opacity="0"  Margin="-15,-15,-700,-7000"  HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Grid x:Name="ShadowBackground">
                                    <Grid.Effect>
                                        <DropShadowEffect BlurRadius="7" ShadowDepth="1" Opacity="0.5" />
                                    </Grid.Effect>
                                    <Border Margin="10 40 10 10" BorderThickness="1 0 0 1" CornerRadius="0 3 3 3" BorderBrush="{StaticResource ContentControl.Border}" Background="{StaticResource ContentControl.Background}" />
                                    <Border Margin="159 40 10 10" BorderThickness="0 1 1 0" CornerRadius="0 3 3 0" BorderBrush="{StaticResource ContentControl.Border}" />
                                    <Border Margin="10" Width="150" Height="30" BorderThickness="1 1 1 0" CornerRadius="3 3 0 0" BorderBrush="{StaticResource ContentControl.Border}" Background="{StaticResource ContentControl.Background}" HorizontalAlignment="Left" VerticalAlignment="Top" />
                                </Grid>
                                <ContentPresenter ContentTemplate="{StaticResource AllControlsDataTemplate}"  Margin="10 40 10 10" />
                            </Grid>
                            <Button x:Name="PART_OpenButton" Width="140" Height="20" HorizontalAlignment="Left" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Style="{StaticResource AllControlsButtonStyle}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AllControlsPopupRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AllControlsPopupRoot">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AllControlsPopupRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AllControlsPopupRoot">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SearchBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ResultListBoxStyle">
            <Setter.Value>
                <Style TargetType="{x:Type local:ResultBox}">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                    <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
                    <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
                    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                    <Setter Property="MaxHeight" Value="250" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type local:ResultBox}">
                                <ScrollViewer Style="{StaticResource QSFScrollViewerStyle}">
                                    <!-- NOTE: if this animating panel is enabled it will result in nice scroll animation but will disable virtualization... consider implementing animated scrolling panel that will handle virtualization well -->
                                    <local:AnimatedScrollPanel Duration="0:0:0.25">
                                        <!--<application:AnimatedScrollPanel.Easing>
										<CubicEase EasingMode="EaseOut" />
										</application:AnimatedScrollPanel.Easing>-->
                                        <ItemsPresenter />
                                    </local:AnimatedScrollPanel>
                                </ScrollViewer>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SearchBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="FocusVisual" Opacity="0" Grid.ColumnSpan="2" CornerRadius="10" BorderThickness="1" BorderBrush="{StaticResource Control.FocusBrush}" Background="{TemplateBinding Background}">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="6" Opacity="0.5" />
                            </Border.Effect>
                        </Border>
                        <Border Grid.ColumnSpan="2" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="1" />

                        <TextBox x:Name="PART_SearchBox" VerticalAlignment="Center" Text="{Binding SearchText, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Background="Transparent" BorderThickness="0" />
                        <Label x:Name="SearchLabel" IsHitTestVisible="False" Margin="8 1 0 0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="_Search" Target="{Binding ElementName=PART_SearchBox}" Padding="0" Foreground="{StaticResource WatermarkBrush}" FontSize="11" FontFamily="Arial" />
                        <Path x:Name="SearchIcon" IsHitTestVisible="False" Grid.Column="1" Fill="{StaticResource WatermarkBrush}" StrokeThickness="1" Width="13" Height="13" Stretch="Fill" HorizontalAlignment="Left" VerticalAlignment="Center" 
                              Data="M 23.4,20.5 C23.4,20.5 17.6,14.8 17.6,14.8 17.6,14.7 17.5,14.7 17.4,14.6 18.4,13.1 18.9,11.4 18.9,9.4 18.9,4.2 14.7,-0.0 9.5,-0.0 4.2,-0.0 0,4.2 0,9.4 0,14.7 4.2,18.9 9.5,18.9 11.4,18.9 13.1,18.4 14.6,17.4 14.7,17.5 14.7,17.6 14.8,17.6 14.8,17.6 20.5,23.4 20.5,23.4 20.9,23.8 21.4,24 21.9,24 22.5,24 23.0,23.8 23.4,23.4 24.1,22.6 24.1,21.3 23.4,20.5 zM 9.5,15.9 C5.9,15.9 3,13.0 3,9.4 3,5.9 5.9,2.9 9.5,2.9 13.0,2.9 16,5.9 16,9.4 16,13.0 13.0,15.9 9.5,15.9 z">

                        </Path>

                        <Grid Margin="0,20,0,-2000" VerticalAlignment="Top" Opacity="0" Visibility="Collapsed"  HorizontalAlignment="Stretch"  x:Name="ResultsPopupRoot">
                            <Grid x:Name="ShadowBackground">
                                <Grid.Effect>
                                    <DropShadowEffect BlurRadius="7" ShadowDepth="1" Opacity="0.5" />
                                </Grid.Effect>
                                <Path Margin="50 0 0 0" Width="20" Height="10" HorizontalAlignment="Left" VerticalAlignment="Top" Data="M0,10 L10,0 20,10Z" Stroke="{StaticResource ContentControl.Border}" Fill="{StaticResource ContentControl.Background}" Stretch="None" />
                                <Border BorderThickness="1 0 1 1" CornerRadius="3" Margin="10 9 10 10" BorderBrush="{StaticResource ContentControl.Border}" Background="{StaticResource ContentControl.Background}" />
                                <Border BorderThickness="0 1 0 0" CornerRadius="3 0 0 0" Margin="10 9 0 0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="41" Height="10" BorderBrush="{StaticResource ContentControl.Border}" />
                                <Border BorderThickness="0 1 0 0" CornerRadius="0 3 0 0" Margin="69 9 10 0" VerticalAlignment="Top" Height="10" BorderBrush="{StaticResource ContentControl.Border}" />
                            </Grid>
                            <Grid Margin="13">
                                <ContentPresenter x:Name="ResultEmptyContent" Opacity="0"  Visibility="Collapsed" ContentSource="ResultEmptyContent" />
                                <local:ResultBox x:Name="PART_SearchList"
									ItemsSource="{TemplateBinding View}"
									ItemTemplate="{TemplateBinding ResultItemTemplate}"
									ItemContainerStyle="{TemplateBinding ResultItemContainerStyle}"
									ItemContainerStyleSelector="{TemplateBinding ResultItemContainerStyleSelector}"
									Style="{TemplateBinding ResultListBoxStyle}"/>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseCaptureWithin" Value="True">
                            <Setter TargetName="SearchLabel" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <DataTrigger Binding="{Binding View.Count, FallbackValue=0, RelativeSource={RelativeSource Mode=Self}}" Value="0">
                            <Setter TargetName="ResultEmptyContent" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="IsOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ResultsPopupRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ResultsPopupRoot">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation From="0" To="1" BeginTime="0:0:0.0" Duration="0:0:0.3" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ResultsPopupRoot">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ResultsPopupRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation To="0" Duration="0:0:0.2" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GroupItem}" x:Key="SearchGroupItemTouchStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Grid >
                        <Grid Margin="6,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Image VerticalAlignment="Top" Margin="0,0,2,0"  HorizontalAlignment="Left" Width="16" Height="16" Source="{Binding Name, ConverterParameter=16x16, Converter={StaticResource ControlToIconConverter}}" />
                            <TextBlock Grid.Column="1" HorizontalAlignment="Stretch"  VerticalAlignment="Top" Text="{Binding Name.Text}" Foreground="{StaticResource Text.Title}" FontWeight="Bold" />
                        </Grid>

                        <ItemsPresenter HorizontalAlignment="Stretch"  Margin="0 32 0 0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchBoxItemTouchStyle" TargetType="{x:Type local:ResultBoxItem}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ResultBoxItem}">
                    <Grid Height="40" x:Name="Root" Margin="0" Background="{TemplateBinding Background}">
                        <TextBlock x:Name="Content" VerticalAlignment="Center" HorizontalAlignment="Stretch" Width="180"  TextTrimming="WordEllipsis" 
                                   Text="{Binding Text}" Margin="10 0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{StaticResource ContentControl.Highlight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchBoxTouchStyle"  TargetType="{x:Type local:SearchBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource ContentControl.Background}" />
        <Setter Property="ResultItemContainerStyle" Value="{StaticResource SearchBoxItemTouchStyle}"/>
        <Setter Property="BorderBrush" Value="#FF00B300" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ResultListBoxStyle">
            <Setter.Value>
                <Style TargetType="{x:Type local:ResultBox}">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                    <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
                    <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
                    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                    <Setter Property="MaxHeight" Value="320" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type local:ResultBox}">
                                <ScrollViewer Style="{StaticResource QSFScrollViewerStyle}" PanningMode="VerticalOnly">
                                    <!-- NOTE: if this animating panel is enabled it will result in nice scroll animation but will disable virtualization... consider implementing animated scrolling panel that will handle virtualization well -->
                                    <local:AnimatedScrollPanel Duration="0:0:0.25">
                                        <!--<application:AnimatedScrollPanel.Easing>
										<CubicEase EasingMode="EaseOut" />
										</application:AnimatedScrollPanel.Easing>-->
                                        <ItemsPresenter />
                                    </local:AnimatedScrollPanel>
                                </ScrollViewer>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SearchBox}">
                    <Grid x:Name="grid" Width="32" ClipToBounds="False">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates"/>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="shadow"  Grid.ColumnSpan="2" CornerRadius="0" Background="White"  Height="32" >
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.3"  BlurRadius="5" Direction="285" ShadowDepth="2" />
                            </Border.Effect>
                        </Border>
                        <Border Grid.ColumnSpan="2" CornerRadius="0" BorderThickness="1" 
                                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"  Height="32" />
                        <Path x:Name="SearchIcon" IsHitTestVisible="False" Grid.Column="1" 
					          HorizontalAlignment="Center"
					          VerticalAlignment="Center"
					          Height="14"
					          Width="14"
					          Stretch="Fill"
                              Margin="6 0"
					          Data="M 23.4,20.5 C23.4,20.5 17.6,14.8 17.6,14.8 17.6,14.7 17.5,14.7 17.4,14.6 18.4,13.1 18.9,11.4 18.9,9.4 18.9,4.2 14.7,-0.0 9.5,-0.0 4.2,-0.0 0,4.2 0,9.4 0,14.7 4.2,18.9 9.5,18.9 11.4,18.9 13.1,18.4 14.6,17.4 14.7,17.5 14.7,17.6 14.8,17.6 14.8,17.6 20.5,23.4 20.5,23.4 20.9,23.8 21.4,24 21.9,24 22.5,24 23.0,23.8 23.4,23.4 24.1,22.6 24.1,21.3 23.4,20.5 zM 9.5,15.9 C5.9,15.9 3,13.0 3,9.4 3,5.9 5.9,2.9 9.5,2.9 13.0,2.9 16,5.9 16,9.4 16,13.0 13.0,15.9 9.5,15.9 z"
					          Fill="{StaticResource WatermarkBrush}"  />

                        <Border x:Name="border" Grid.ColumnSpan="2" CornerRadius="0" Background="{DynamicResource Button.BackgroundTouch}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Height="32" Width="32" HorizontalAlignment="Right" >
                            <Grid>
                                <Rectangle x:Name="rectangle" Stroke="#4CFFFFFF" Fill="#00000000"/>
                                <Path x:Name="SearchIcon1" IsHitTestVisible="False" Grid.Column="0" 
					                  HorizontalAlignment="Center"
					                  VerticalAlignment="Center"
					                  Height="14"
					                  Width="14"
					                  Stretch="Fill"
					                  Data="M 23.4,20.5 C23.4,20.5 17.6,14.8 17.6,14.8 17.6,14.7 17.5,14.7 17.4,14.6 18.4,13.1 18.9,11.4 18.9,9.4 18.9,4.2 14.7,-0.0 9.5,-0.0 4.2,-0.0 0,4.2 0,9.4 0,14.7 4.2,18.9 9.5,18.9 11.4,18.9 13.1,18.4 14.6,17.4 14.7,17.5 14.7,17.6 14.8,17.6 14.8,17.6 20.5,23.4 20.5,23.4 20.9,23.8 21.4,24 21.9,24 22.5,24 23.0,23.8 23.4,23.4 24.1,22.6 24.1,21.3 23.4,20.5 zM 9.5,15.9 C5.9,15.9 3,13.0 3,9.4 3,5.9 5.9,2.9 9.5,2.9 13.0,2.9 16,5.9 16,9.4 16,13.0 13.0,15.9 9.5,15.9 z"
					                  Fill="{DynamicResource Button.Foreground}" />
                            </Grid>
                        </Border>

                        <TextBox x:Name="PART_SearchBox" VerticalAlignment="Stretch" Margin="0" Text="{Binding SearchText, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Background="Transparent" BorderThickness="0" Cursor="Arrow" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Grid.ColumnSpan="2" />

                        <Grid Margin="0,40,0,-2000" VerticalAlignment="Top" Grid.ColumnSpan="2"  Opacity="0" Visibility="Collapsed"  HorizontalAlignment="Stretch"  x:Name="ResultsPopupRoot">
                            <Grid x:Name="ShadowBackground" Margin="-8">
                                <Grid.Effect>
                                    <DropShadowEffect BlurRadius="7" ShadowDepth="1" Opacity="0.5" />
                                </Grid.Effect>
                                <Path Margin="50 0 0 0" Width="20" Height="10" HorizontalAlignment="Left" VerticalAlignment="Top" Data="M0,10 L10,0 20,10Z" Stroke="{StaticResource ContentControl.Border}" Fill="{StaticResource ContentControl.Background}" Stretch="None" />
                                <Border BorderThickness="1 0 1 1" CornerRadius="3" Margin="10 9 10 10" BorderBrush="{StaticResource ContentControl.Border}" Background="{StaticResource ContentControl.Background}" />
                                <Border BorderThickness="0 1 0 0" CornerRadius="3 0 0 0" Margin="10 9 0 0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="41" Height="10" BorderBrush="{StaticResource ContentControl.Border}" />
                                <Border BorderThickness="0 1 0 0" CornerRadius="0 3 0 0" Margin="69 9 10 0" VerticalAlignment="Top" Height="10" BorderBrush="{StaticResource ContentControl.Border}" />
                            </Grid>
                            <Grid Margin="3">
                                <ContentPresenter x:Name="ResultEmptyContent" Opacity="0"  Visibility="Collapsed" ContentSource="ResultEmptyContent" />
                                <local:ResultBox x:Name="PART_SearchList"
									ItemsSource="{TemplateBinding View}" 
									ItemTemplate="{TemplateBinding ResultItemTemplate}"
									ItemContainerStyle="{TemplateBinding ResultItemContainerStyle}"
									ItemContainerStyleSelector="{TemplateBinding ResultItemContainerStyleSelector}"
									Style="{TemplateBinding ResultListBoxStyle}"/>
                            </Grid>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding View.Count, FallbackValue=0, RelativeSource={RelativeSource Mode=Self}}" Value="0">
                            <Setter TargetName="ResultEmptyContent" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Fill" TargetName="rectangle" Value="#19FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ResultsPopupRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ResultsPopupRoot">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.1" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="32"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="220">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuarticEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="shadow">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Cursor)" Storyboard.TargetName="PART_SearchBox">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>IBeam</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.HorizontalContentAlignment)" Storyboard.TargetName="PART_SearchBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Left}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.VerticalContentAlignment)" Storyboard.TargetName="PART_SearchBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Center}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Padding)" Storyboard.TargetName="PART_SearchBox">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="8,0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="PART_SearchBox">
                                            <EasingInt32KeyFrame KeyTime="0" Value="1"/>
                                        </Int32AnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ResultsPopupRoot">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ResultsPopupRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="shadow">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="220"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="32">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="PART_SearchBox">
                                            <EasingInt32KeyFrame KeyTime="0" Value="2"/>
                                        </Int32AnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.HorizontalContentAlignment)" Storyboard.TargetName="PART_SearchBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Stretch}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.VerticalContentAlignment)" Storyboard.TargetName="PART_SearchBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Stretch}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Padding)" Storyboard.TargetName="PART_SearchBox">
                                            <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Cursor)" Storyboard.TargetName="PART_SearchBox">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>Arrow</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Tag" Value="Closed"/>
    </Style>

    <Style x:Key="RadRichTextBoxReadOnlyStyle" TargetType="{x:Type telerik:RadRichTextBox}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="IsSpellCheckingEnabled" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="SelectionFill" Value="#604BB1FF" />
        <Setter Property="SelectionStroke" Value="#601B81E7" />
        <Setter Property="IsSelectionMiniToolBarEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadRichTextBox}">
                    <Grid x:Name="LayoutRoot">
                        <Canvas x:Name="MeasuringPanel" Height="0" Width="0"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ContentControl x:Name="ViewPresenter" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" IsTabStop="False" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch"/>
                            <Border Background="WhiteSmoke" Grid.Column="1" Grid.Row="1"/>
                            <ScrollBar x:Name="HorizontalScrollBar" Grid.Row="1" Grid.Column="0" IsTabStop="False" Minimum="0" Orientation="Horizontal" Height="16" Style="{StaticResource QSFScrollBarStyle}" />
                            <ScrollBar x:Name="VerticalScrollBar" Grid.Row="0" Grid.Column="1" IsTabStop="False" Minimum="0" Orientation="Vertical" Width="16" Style="{StaticResource QSFScrollBarStyle}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadRichTextBoxReadOnlyTouchStyle" TargetType="{x:Type telerik:RadRichTextBox}" BasedOn="{StaticResource RadRichTextBoxReadOnlyStyle}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="270" Color="White" ShadowDepth="1" Opacity="1" BlurRadius="0"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShowcasesHyperlinkStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Grid x:Name="grid" Opacity="0" HorizontalAlignment="Center" Width="96" Height="96" VerticalAlignment="Center">
                            <Path Data="M127.5,64 C127.5,65.569473 127.44306,67.125641 127.33114,68.666565 C96,115 126,72 91.478271,121.26305 C83.163109,125.26043 73.843094,127.5 64,127.5 C28.929918,127.5 0.5,99.070084 0.5,64 C0.5,28.929918 28.929918,0.5 64,0.5 C99.070084,0.5 127.5,28.929918 127.5,64 z" Stretch="Fill" UseLayoutRounding="False" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="White" >
                                <Path.Effect>
                                    <DropShadowEffect Opacity="0.2" ShadowDepth="2" BlurRadius="7"/>
                                </Path.Effect>
                            </Path>
                            <Ellipse Margin="0" Width="80" Height="80" HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="2" Fill="#FF5B074D" />

                            <TextBlock Margin="0,58,0,23" TextWrapping="Wrap" Text="DEMO" FontFamily="/Telerik.Windows.QuickStartUITheme;component/Fonts/MyriadPro-Light.otf#Myriad Pro Light" FontSize="14" Foreground="White" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" FontWeight="Bold" />
                            <TextBlock Margin="0,40,0,0" TextWrapping="Wrap" Text="LAUNCH" FontFamily="/Telerik.Windows.QuickStartUITheme;component/Fonts/MyriadPro-Light.otf#Myriad Pro Light" FontSize="14" Foreground="White" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" Height="24" VerticalAlignment="Top" FontWeight="Bold" />
                            <Path Data="M0.35940552,53.049812 L0.35865784,53.05088 L0.3586731,53.050156 z M0.41230011,53.025063 L0.41066742,53.025879 L0.35940552,53.049812 L0.41064453,53.025879 z M36.49131,0.041290283 L36.491119,0.044273376 L35.764961,1.1183853 C5.6236572,45.713142 0.35941315,53.049805 0.35941315,53.049805 L0.3586731,53.050148 L0.38298035,51.895927 C1.0805664,28.482483 14.135742,9.4506226 34.470375,0.85218048 z M36.496368,0 L36.493813,0.040290833 L36.491127,0.044258118 L36.491318,0.041290283 L36.493805,0.040290833 z M36.493935,0 L36.491318,0.041290283 z" HorizontalAlignment="Right" Height="37.942" Margin="0,0,0.333,6.725" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Bottom" Width="25.845">
                                <Path.Effect>
                                    <DropShadowEffect Direction="140" ShadowDepth="2" BlurRadius="4" Opacity="0.2"/>
                                </Path.Effect>
                                <Path.Fill>
                                    <LinearGradientBrush EndPoint="0.24,0.413" StartPoint="0.487,0.532">
                                        <GradientStop Color="#FFD6D6D6" Offset="1"/>
                                        <GradientStop Color="White"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path Data="M5,5.9999695 L6,5.9999695 L6,6.9999695 L5,6.9999695 z M6,4.9999695 L7,4.9999695 L7,5.9999695 L6,5.9999695 z M6,2.9999695 L9,2.9999695 L9,3.9999697 L9,4.9999695 L9,5.9999695 L8,5.9999695 L8,4.9999695 L7,4.9999695 L7,3.9999697 L6,3.9999697 z M0,3.9999998 L4,3.9999998 L4,5 L1,5 L1,9 L7,9 L7,7.9999943 L8,7.9999943 L8,10 L7,10 L0,10 L0,9 L0,5 z" Fill="White" Margin="40,20,38,0" Stretch="Fill" UseLayoutRounding="False" Height="14" VerticalAlignment="Top"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ViewBaseRegularStyle" TargetType="{x:Type local:ViewBase}">
        <Setter Property="Background" Value="{StaticResource Window.Background}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ViewBase}">
                    <Grid Margin="-30,-20"  Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="900" />
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="640" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="2*" />
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" Grid.ColumnSpan="3" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <TextBlock Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" Grid.ColumnSpan="3" IsHitTestVisible="False" Text="WPF" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="168" FontFamily="Myriad Pro" Foreground="#07000000" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ViewBaseTouchStyle" TargetType="{x:Type local:ViewBase}">
        <Setter Property="Background" Value="{StaticResource Window.Background}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ViewBase}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">

                        <TextBlock IsHitTestVisible="False" Text="WPF" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="200" Margin="0,-40,-20,0"  FontFamily="Myriad Pro" Foreground="#07000000" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="RadTileListTemplate" TargetType="{x:Type telerik:RadTileList}">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <StackPanel Orientation="Horizontal">
                <ContentControl x:Name="PART_PanoramaBackground"  ClipToBounds="True"
					HorizontalAlignment="Left" VerticalAlignment="Top" Content="{TemplateBinding PanoramaBackground}" />
            </StackPanel>
            <ScrollViewer x:Name="PART_ScrollViewer"  Margin="0" 
				CanContentScroll="True"
				Padding="{TemplateBinding Padding}"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
				VerticalScrollBarVisibility="Hidden">

                <ScrollViewer.InputBindings>
                    <KeyBinding Command="telerikPrimitives:ListControl.SelectAllCommand" Key="A" Modifiers="Control" />
                </ScrollViewer.InputBindings>

                <ItemsPresenter VerticalAlignment="Stretch"/>

            </ScrollViewer>
            <ContentPresenter x:Name="dragVisualPlaceholder" Visibility="Collapsed" HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch" />
        </Grid>
    </ControlTemplate>
    <ItemsPanelTemplate x:Key="RadTileListItemsPanelTemplate">
        <telerik:TileListPanel/>
    </ItemsPanelTemplate>
    <Style x:Key="RadTileListStyle" TargetType="{x:Type telerik:RadTileList}">
        <Setter Property="Template" Value="{StaticResource RadTileListTemplate}"/>
        <Setter Property="ItemsPanel" Value="{StaticResource RadTileListItemsPanelTemplate}"/>
        <Setter Property="Padding" Value="120,140,60,120"/>
        <Setter Property="Background" Value="Blue"/>
        <Setter Property="ClipToBounds" Value="False"/>
    </Style>

    <ControlTemplate x:Key="TileTemplate" TargetType="telerik:Tile">
        <Border Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}">

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Duration="0"  Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Opacity" From="0" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual"
								Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates"/>
            </VisualStateManager.VisualStateGroups>

            <Grid>

                <Border x:Name="MouseOverVisual" BorderBrush="{StaticResource Control.Border}"
					BorderThickness="3" Margin="-3" Opacity="0.3"  Visibility="Collapsed" />
                <ContentPresenter x:Name="contentPresenter"
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					Margin="{TemplateBinding Padding}" />

                <Border x:Name="SelectedVisual" BorderThickness="3"
					BorderBrush="Yellow" Opacity="0">
                    <Grid>
                        <Path Data="M0,0 L36,0 L36,36 z" Fill="Yellow"
							VerticalAlignment="Top" HorizontalAlignment="Right" Height="36" Width="36" />
                        <Path
							Data="M13.473633,3.4513931 C13.546549,3.4513931 13.610352,3.4741802 13.665039,3.5197525 L15.039063,4.5793228 C15.066406,4.6021099 15.09261,4.63515 15.117676,4.6784439 C15.14274,4.7217388 15.155272,4.7616148 15.155273,4.7980728 C15.155272,4.8755474 15.132486,4.9484634 15.086914,5.0168228 L7.4169922,14.867409 L2.5087891,9.5832291 L2.0712891,9.1115494 C2.0211587,9.0477476 1.9960938,8.9793882 1.9960938,8.9064713 C1.9960938,8.8198833 2.0302734,8.7424088 2.0986328,8.6740494 L3.3564453,7.4914322 C3.4156899,7.4413023 3.4863279,7.4162374 3.5683594,7.4162369 C3.6093748,7.4162374 3.6503904,7.4242125 3.6914063,7.4401627 C3.7324216,7.4561133 3.7666013,7.4800391 3.7939453,7.51194 L7.2597656,11.251198 L13.227539,3.5676041 C13.295897,3.4901304 13.377929,3.4513931 13.473633,3.4513931 z"
							Fill="Yellow" Margin="0,1,3,0"
							VerticalAlignment="Top" HorizontalAlignment="Right" />
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </ControlTemplate>

    <DataTemplate x:Key="SwitchToTouchIcon">
        <Viewbox Height="40">
            <Canvas Width="44.125" Height="49.2253">
                <Rectangle/>
                <Rectangle/>
                <Rectangle Width="9" RadiusX="9" RadiusY="9" Height="9" StrokeThickness="1"  Canvas.Left="5" Canvas.Top="5" Stretch="Fill" Stroke="#FFFFFFFF"/>
                <Rectangle Width="17" RadiusX="17" RadiusY="17" Height="17" StrokeThickness="1"  Canvas.Left="1" Canvas.Top="1" Opacity="0.7"  Stretch="Fill" Stroke="#FFFFFFFF"/>
                <Path Width="35.7832" Height="41.2326" Canvas.Left="8.26682" Canvas.Top="7.98514" Stretch="Fill" Data="F1 M 43.6237,38.5235C 43.2969,38.2096 42.7513,37.6881 42.194,36.8477C 41.6615,36.0424 41.4779,35.3256 41.2018,34.2422C 41.0508,33.6439 40.8789,32.9655 40.6068,32.1237C 39.8451,29.7527 36.6458,23.4571 36.5104,23.1908L 36.4844,23.1465C 36.2747,22.8268 36.155,22.6172 36.0573,22.448C 35.6758,21.7807 35.5495,21.6237 33.0261,19.1211C 31.681,17.7865 30.3802,17.1439 29.1654,17.2122C 28.4154,17.2538 27.875,17.5625 27.5508,17.8138C 25.78,16.3015 24.3073,15.6543 23.168,15.8939C 22.6341,16.0065 22.2669,16.3008 22.0417,16.582C 21.2787,15.8256 20.4701,15.446 19.625,15.4485C 18.582,15.4532 17.7591,16.0534 17.2839,16.513C 14.4115,12.3216 12.0703,8.97464 11.4935,8.40039C 10.9297,7.8392 9.91147,7.90558 9.237,8.25198C 8.52216,8.62503 8.17188,9.26038 8.28906,9.96158C 8.50653,11.2533 11.7956,17.3112 15.0404,23.1777C 14.28,22.7663 13.4115,22.5072 12.5,22.5221C 11.5091,22.5359 10.862,22.7696 10.5208,23.2357C 10.237,23.6257 10.1927,24.1217 10.3867,24.7565C 10.5547,25.3047 11.2031,25.9277 12.25,26.8984C 12.9974,27.5924 13.8425,28.3769 14.2201,28.9889C 14.5313,29.4941 15.1341,30.5788 15.8307,31.8366C 17.0365,34.0072 18.5326,36.7071 19.6979,38.5436C 21.6211,41.5742 27.8438,45.4759 30.457,46.5072C 32.7917,47.4277 34.4401,49.0657 34.4557,49.082C 34.5482,49.1752 34.6784,49.2253 34.8112,49.2168C 34.9284,49.2116 35.957,49.1113 38.5781,47.6075C 38.8438,47.4544 39.1276,47.2877 39.4232,47.1068C 42.7734,45.0638 44.125,39.4746 44.0469,39.0866C 44.0065,38.8886 43.8789,38.7649 43.6237,38.5235 Z ">
                    <Path.Fill>
                        <LinearGradientBrush StartPoint="0.182198,1.22673" EndPoint="0.908358,1.22673">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <SkewTransform CenterX="0.182198" CenterY="1.22673" AngleX="8.09379" AngleY="0"/>
                                    <RotateTransform CenterX="0.182198" CenterY="1.22673" Angle="-41.2204"/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#FFE8E8E8" Offset="0"/>
                                <GradientStop Color="#FFF3F3F3" Offset="0.210192"/>
                                <GradientStop Color="#FFFFFFFF" Offset="0.363636"/>
                                <GradientStop Color="#FFFFFFFF" Offset="1"/>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Path.Fill>
                </Path>
                <Path Width="35.7832" Height="41.2326" Canvas.Left="8.26682" Canvas.Top="7.98514" Stretch="Fill" Fill="#FF3D4350" Data="F1 M 40.6068,32.1237C 39.8451,29.7527 36.6458,23.4571 36.5104,23.1908L 36.4844,23.1465C 36.2747,22.8268 36.155,22.6172 36.0573,22.448C 35.6758,21.7807 35.5495,21.6237 33.0261,19.1211C 31.681,17.7865 30.3802,17.1439 29.1654,17.2122C 28.4154,17.2538 27.875,17.5625 27.5508,17.8138C 25.78,16.3015 24.3073,15.6543 23.168,15.8939C 22.6341,16.0065 22.2669,16.3008 22.0417,16.582C 21.2787,15.8256 20.4701,15.446 19.625,15.4485C 18.582,15.4532 17.7591,16.0534 17.2839,16.513C 14.4115,12.3216 12.0703,8.97464 11.4935,8.40039C 10.9297,7.8392 9.91147,7.90558 9.237,8.25198C 8.52216,8.62503 8.17188,9.26038 8.28906,9.96158C 8.50653,11.2533 11.7956,17.3112 15.0404,23.1777C 14.28,22.7663 13.4115,22.5072 12.5,22.5221C 11.5091,22.5359 10.862,22.7696 10.5208,23.2357C 10.237,23.6257 10.1927,24.1217 10.3867,24.7565C 10.5547,25.3047 11.2031,25.9277 12.25,26.8984C 12.9974,27.5924 13.8425,28.3769 14.2201,28.9889C 14.5313,29.4941 15.1341,30.5788 15.8307,31.8366C 17.0365,34.0072 18.5326,36.7071 19.6979,38.5436C 21.6211,41.5742 27.8438,45.4759 30.457,46.5072C 32.7917,47.4277 34.4401,49.0657 34.4557,49.082C 34.5482,49.1752 34.6784,49.2253 34.8112,49.2168C 34.9284,49.2116 35.957,49.1113 38.5781,47.6075C 38.8438,47.4544 39.1276,47.2877 39.4232,47.1068C 42.7734,45.0638 44.125,39.4746 44.0469,39.0866C 44.0065,38.8886 43.8789,38.7649 43.6237,38.5235C 43.2969,38.2096 42.7513,37.6881 42.194,36.8477C 41.6615,36.0424 41.4779,35.3256 41.2018,34.2422C 41.0508,33.6439 40.8789,32.9655 40.6068,32.1237 Z M 40.2995,34.472C 40.5781,35.5632 40.7982,36.4252 41.4193,37.3607C 42.0326,38.2884 42.6497,38.8769 42.9818,39.1953L 43.1029,39.3132C 42.9115,40.2748 41.6589,44.653 38.9388,46.3119C 36.5729,47.7552 35.3568,48.149 34.9323,48.2527C 34.4245,47.7818 32.8867,46.4648 30.7982,45.642C 28.2227,44.6263 22.2396,40.8105 20.4831,38.0456C 19.3347,36.2331 17.8425,33.5443 16.6445,31.3841C 15.9115,30.065 15.3333,29.0228 15.0117,28.5013C 14.5677,27.7818 13.7109,26.9857 12.8841,26.2188C 12.2136,25.5951 11.3789,24.8222 11.2761,24.4844C 11.1758,24.1549 11.1745,23.9193 11.2722,23.7852C 11.3594,23.666 11.6393,23.4643 12.5104,23.4505C 14.2695,23.427 15.8854,24.6705 16.513,25.8523L 16.5352,25.8848C 16.6445,26.0833 16.7409,26.2617 16.8229,26.4128C 18.3359,29.1999 20.2292,33.2735 20.25,33.315C 20.3568,33.5481 20.6328,33.6484 20.8659,33.5397L 20.9023,33.5215C 21.1094,33.4036 21.1953,33.1432 21.0925,32.9225C 21.0729,32.8821 19.168,28.7818 17.6406,25.9688C 17.3685,25.4643 16.931,24.6757 16.3984,23.7122C 14.1341,19.6269 9.42969,11.1276 9.20703,9.80798C 9.14325,9.43292 9.41669,9.20572 9.66406,9.07877C 10.1146,8.84705 10.655,8.87692 10.8372,9.05865C 11.4023,9.62439 14.2682,13.7545 16.7487,17.3769L 16.9349,17.6693L 16.9583,17.6836C 17.9544,19.138 18.8737,20.4889 19.5404,21.4695C 20.4844,22.8568 20.9414,23.5273 21.0313,23.6465C 21.1862,23.8529 21.4779,23.8932 21.6823,23.7383C 21.8867,23.5847 21.9284,23.2924 21.7761,23.0872C 21.6953,22.9812 21.0847,22.0826 20.3086,20.9453C 19.4609,19.7005 18.6211,18.4695 17.8177,17.2924C 18.1537,16.9427 18.8203,16.3809 19.6341,16.3776C 20.4336,16.3763 21.2344,16.916 22.0156,17.9792C 24.7682,21.7305 25.4362,22.4375 25.4648,22.4655C 25.6146,22.623 25.8477,22.6497 26.0287,22.5456L 26.1211,22.4792C 26.3047,22.3028 26.3099,22.0065 26.1354,21.8203C 26.1081,21.7929 25.4479,21.0853 22.7643,17.4277L 22.6693,17.3092C 22.7031,17.2376 22.8972,16.8945 23.3789,16.8015C 23.9662,16.6868 25.3477,16.8841 27.9974,19.4864C 28.0625,19.5469 29.5872,20.959 30.1771,21.4381C 30.3307,21.5632 30.5378,21.5716 30.7018,21.4799L 30.8294,21.3692C 30.9922,21.17 30.9609,20.8763 30.763,20.7161C 30.1953,20.2552 28.6472,18.8184 28.6406,18.8132C 28.5117,18.6868 28.3867,18.567 28.2578,18.4473C 28.4779,18.3092 28.7982,18.1641 29.2175,18.1413C 30.1445,18.0892 31.2357,18.6569 32.3711,19.7813C 34.8919,22.28 34.9388,22.3633 35.25,22.9101C 35.3516,23.0847 35.474,23.3028 35.6927,23.6341C 35.905,24.054 39.0026,30.1739 39.7227,32.4089C 39.9844,33.222 40.1523,33.8868 40.2995,34.472 Z "/>
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <Style x:Key="SwitchToMouseModeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Button.BackgroundTouch}"/>
        <Setter Property="BorderBrush" Value="#FF71C74E"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                            <EasingColorKeyFrame KeyTime="0" Value="#19FFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates"/>
                            <VisualStateGroup x:Name="ValidationStates"/>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" Grid.ColumnSpan="2" CornerRadius="0" Background="{DynamicResource Button.BackgroundTouch}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" >
                            <Rectangle x:Name="rectangle" Stroke="#4CFFFFFF" Fill="#00000000"/>
                        </Border>
                        <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Width="12" Height="12">
                            <Grid Height="17" Width="17">
                                <Rectangle Width="9" RadiusX="9" RadiusY="9" Height="9" StrokeThickness="1" Stretch="Fill" Stroke="#FFFFFFFF" Margin="4"/>
                                <Rectangle Width="17" RadiusX="17" RadiusY="17" Height="17" StrokeThickness="1" Opacity="0.7"  Stretch="Fill" Stroke="#FFFFFFFF"/>
                            </Grid>
                        </Viewbox>
                        <Viewbox Height="31" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,-9,-9" Width="30">
                            <Canvas Width="35.8466" Height="41.4612">
                                <Path Width="24.9944" Height="25.0192" Canvas.Left="2.99824" Canvas.Top="2.87098" Stretch="Fill" StrokeThickness="0.933333" StrokeMiterLimit="2.75" Stroke="#FF3D4350" Data="F1 M 26.7521,10.9702C 29.0932,17.4024 25.9435,24.4532 19.7182,26.7183C 13.493,28.9846 6.54895,25.6082 4.20651,19.1759C 1.86667,12.7443 5.27161,6.39853 11.4969,4.13226C 17.7234,1.86667 24.4109,4.53787 26.7521,10.9702 Z ">
                                    <Path.Fill>
                                        <LinearGradientBrush StartPoint="0.965443,0.342705" EndPoint="1.96252,0.342705">
                                            <LinearGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <SkewTransform CenterX="0.965443" CenterY="0.342705" AngleX="0.0378026" AngleY="0"/>
                                                    <RotateTransform CenterX="0.965443" CenterY="0.342705" Angle="160.02"/>
                                                </TransformGroup>
                                            </LinearGradientBrush.RelativeTransform>
                                            <GradientStop Color="#FFE8E8E8" Offset="0"/>
                                            <GradientStop Color="#FFF3F3F3" Offset="0.332778"/>
                                            <GradientStop Color="#FFFFFFFF" Offset="0.575758"/>
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                </Path>
                                <Path Width="29.0258" Height="28.5038" Canvas.Left="3.73985" Canvas.Top="10.5035" Stretch="Fill" StrokeThickness="0.933333" StrokeMiterLimit="2.75" Stroke="#FF3D4350" Data="F1 M 4.20651,19.1759L 9.09451,32.6049C 11.4357,39.0359 17.3536,39.5945 23.5802,37.3289C 29.8055,35.0634 33.9799,30.8303 31.6401,24.3992L 26.7521,10.9702L 4.20651,19.1759 Z ">
                                    <Path.Fill>
                                        <LinearGradientBrush StartPoint="0.940097,0.413384" EndPoint="1.79609,0.413384">
                                            <LinearGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <SkewTransform CenterX="0.940097" CenterY="0.413384" AngleX="-0.690885" AngleY="0"/>
                                                    <RotateTransform CenterX="0.940097" CenterY="0.413384" Angle="159.653"/>
                                                </TransformGroup>
                                            </LinearGradientBrush.RelativeTransform>
                                            <GradientStop Color="#FFE8E8E8" Offset="0"/>
                                            <GradientStop Color="#FFF3F3F3" Offset="0.332778"/>
                                            <GradientStop Color="#FFFFFFFF" Offset="0.575758"/>
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                </Path>
                                <Path Width="4.91511" Height="11.8742" Canvas.Left="11.0302" Canvas.Top="3.6656" Stretch="Fill" StrokeThickness="0.933333" StrokeMiterLimit="2.75" Stroke="#FF3D4350" Data="F1 M 11.4969,4.13226L 15.4786,15.0731"/>
                            </Canvas>
                        </Viewbox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
    </Style>

    <Style x:Key="TouchModeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Button.BackgroundTouch}"/>
        <Setter Property="BorderBrush" Value="#FF00B300"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                            <EasingColorKeyFrame KeyTime="0" Value="#19FFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates"/>
                            <VisualStateGroup x:Name="ValidationStates"/>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="shadow"  Grid.ColumnSpan="2" CornerRadius="0" Background="White"  Height="32" >
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.3"  BlurRadius="5" Direction="285" ShadowDepth="2" />
                            </Border.Effect>
                        </Border>
                        <Border x:Name="border" Grid.ColumnSpan="2" CornerRadius="0" Background="{DynamicResource Button.BackgroundTouch}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" >
                            <Rectangle x:Name="rectangle" Stroke="#4CFFFFFF" Fill="#00000000"/>
                        </Border>
                        <ContentPresenter HorizontalAlignment="Center" Height="Auto" VerticalAlignment="Center"/>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
    </Style>

    <DataTemplate x:Key="HighlightedExampleItemTemplate" >

        <ContentControl>
            <ContentControl.Template>
                <ControlTemplate TargetType="ContentControl">
                    <Grid Width="210" Height="45">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="Background"  Grid.ColumnSpan="2"  Fill="{StaticResource HighlightedTile.Background}"/>
                        <Image Source="Resources/Images/ExampleTileShadow.png" IsHitTestVisible="False"  Margin="-3,-3,-7,-7" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        <Rectangle Fill="{x:Null}" Stroke="White" Grid.ColumnSpan="2"  StrokeThickness="1" Margin="1"  Opacity="0.2"/>
                        <Border IsHitTestVisible="False"  x:Name="MouseOverVisual" Grid.ColumnSpan="2"  BorderBrush="{StaticResource Control.Border}"
							BorderThickness="3" Margin="-3" Opacity="0.3"  Visibility="Collapsed" />

                        <TextBlock Grid.Column="1" IsHitTestVisible="False" Margin="6,0,15,0"  Text="{Binding Text}" 
							Style="{StaticResource HighlightedTileTitleTextStyle}" Foreground="White"  VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                        <ContentPresenter Content="{Binding }" MinWidth="8" Margin="-2,16,0,0" IsHitTestVisible="False" ContentTemplateSelector="{StaticResource TouchExampleStatusTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Background"  Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ContentControl.Template>
        </ContentControl>
        <!--<Button Content="{Binding Text}" ContentTemplateSelector="{StaticResource TextAndIcon7x7TemplateSelector}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="{Binding}" />-->

    </DataTemplate>

    <DataTemplate x:Key="HighlightedExampleHeaderItemTemplate" >

        <ContentControl>
            <ContentControl.Template>
                <ControlTemplate TargetType="ContentControl">
                    <Grid Width="210" Height="45"  Margin="0,55,0,0">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="Background"  Grid.ColumnSpan="2"  Fill="{StaticResource HighlightedTile.Background}"/>
                        <Image Source="Resources/Images/ExampleTileShadow.png" IsHitTestVisible="False"  Margin="-3,-3,-7,-7" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        <Rectangle Fill="{x:Null}" Stroke="White" Grid.ColumnSpan="2"  StrokeThickness="1" Margin="1"  Opacity="0.2"/>
                        <Border IsHitTestVisible="False"  x:Name="MouseOverVisual" Grid.ColumnSpan="2"  BorderBrush="{StaticResource Control.Border}"
							BorderThickness="3" Margin="-3" Opacity="0.3"  Visibility="Collapsed" />
                        <TextBlock Text="{Binding ExampleGroup.Name}" IsHitTestVisible="False" Grid.ColumnSpan="2"  Style="{StaticResource TileListGroupHeaderTextStyle}" 
							VerticalAlignment="Top" Margin="0,-40,0,0" Foreground="White" />
                        <TextBlock Text="{Binding ExampleGroup.Name}" IsHitTestVisible="False" Grid.ColumnSpan="2"  Style="{StaticResource TileListGroupHeaderTextStyle}" 
							VerticalAlignment="Top" Margin="0,-41,0,0" />
                        <TextBlock Grid.Column="1" Foreground="White" IsHitTestVisible="False" Margin="6,2,15,0"  Text="{Binding Text}" 
							Style="{StaticResource HighlightedTileTitleTextStyle}"  VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                        <ContentPresenter Content="{Binding }" Margin="-2,16,0,0"  MinWidth="8" IsHitTestVisible="False" ContentTemplateSelector="{StaticResource TouchExampleStatusTemplateSelector}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Background"  Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ContentControl.Template>
        </ContentControl>
        <!--<Button Content="{Binding Text}" ContentTemplateSelector="{StaticResource TextAndIcon7x7TemplateSelector}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="{Binding}" />-->

    </DataTemplate>

    <DataTemplate x:Key="ExampleItemTemplate" >

        <ContentControl>
            <ContentControl.Template>
                <ControlTemplate TargetType="ContentControl">
                    <Grid Width="210"   Height="45" >

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="Background"  Grid.ColumnSpan="2"  Fill="{StaticResource Tile.Background}"/>
                        <Image Source="Resources/Images/ExampleTileShadow.png" IsHitTestVisible="False"  Margin="-3,-3,-7,-7" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        <Border IsHitTestVisible="False"  x:Name="MouseOverVisual" Grid.ColumnSpan="2"  BorderBrush="{StaticResource Control.Border}"
							BorderThickness="3" Margin="-3" Opacity="0.3"  Visibility="Collapsed" />

                        <TextBlock Grid.Column="1" IsHitTestVisible="False" Margin="6,2,15,0"  Text="{Binding Text}" 
							Style="{StaticResource TileTitleTextStyle}"  VerticalAlignment="Center" HorizontalAlignment="Stretch" />

                        <ContentPresenter Content="{Binding }" Margin="-2,16,0,0" MinWidth="8" IsHitTestVisible="False" ContentTemplateSelector="{StaticResource TouchExampleStatusTemplateSelector}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Background"  Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ContentControl.Template>
        </ContentControl>
        <!--<Button Content="{Binding Text}" ContentTemplateSelector="{StaticResource TextAndIcon7x7TemplateSelector}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="{Binding}" />-->

    </DataTemplate>

    <DataTemplate x:Key="ExampleHeaderItemTemplate" >

        <ContentControl>
            <ContentControl.Template>
                <ControlTemplate TargetType="ContentControl">
                    <Grid Width="210" Height="45" Margin="0,55,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Source="Resources/Images/ExampleTileShadow.png" Margin="-3,-3,-7,-7" IsHitTestVisible="False"  Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        <Rectangle x:Name="Background"  Grid.ColumnSpan="2"  Fill="{StaticResource Tile.Background}"/>
                        <Border IsHitTestVisible="False"  x:Name="MouseOverVisual" Grid.ColumnSpan="2"  BorderBrush="{StaticResource Control.Border}"
							BorderThickness="3" Margin="-3" Opacity="0.3"  Visibility="Collapsed" />
                        <TextBlock Text="{Binding ExampleGroup.Name}" Foreground="White"  IsHitTestVisible="False" Grid.ColumnSpan="2"  Style="{StaticResource TileListGroupHeaderTextStyle}" 
							VerticalAlignment="Top" Margin="0,-40,0,0" />
                        <TextBlock Text="{Binding ExampleGroup.Name}" IsHitTestVisible="False" Grid.ColumnSpan="2"  Style="{StaticResource TileListGroupHeaderTextStyle}" 
							VerticalAlignment="Top" Margin="0,-41,0,0" />

                        <TextBlock Grid.Column="1" IsHitTestVisible="False" Margin="6,2,15,0"  Text="{Binding Text}" 
							Style="{StaticResource TileTitleTextStyle}"  VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                        <ContentPresenter Content="{Binding }" MinWidth="8" Margin="-2,16,0,0" IsHitTestVisible="False" ContentTemplateSelector="{StaticResource TouchExampleStatusTemplateSelector}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Background"  Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ContentControl.Template>
        </ContentControl>
        <!--<Button Content="{Binding Text}" ContentTemplateSelector="{StaticResource TextAndIcon7x7TemplateSelector}" Command="{x:Static local:DropDownButtonCommands.DropDownItemClick}" CommandParameter="{Binding}" />-->

    </DataTemplate>

    <Style x:Key="ExamplesListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="3,3,27,7"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid>
                        <ContentPresenter x:Name="contentPresenter"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ControlsListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="3 3 17 17"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid>
                        <Border IsHitTestVisible="False"  x:Name="MouseOverVisual" Grid.ColumnSpan="2"  BorderBrush="{StaticResource Control.Border}"
							BorderThickness="3" Margin="-3" Opacity="0.3"  Visibility="Collapsed" />
                        <ContentPresenter x:Name="contentPresenter"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="{TemplateBinding Padding}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExamplesListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Grid>
                        <StackPanel Margin="60,140,0,60" Opacity="{Binding HorizontalOffset, ElementName=scroll, ConverterParameter='opacity', Converter={StaticResource ControlOverviewOpacityConverter}}"  Width="200" HorizontalAlignment="Left"  Grid.Row="1" RenderTransformOrigin="0.5,0.5">
                            <TextBlock Style="{StaticResource GroupHeaderTouchTextStyle}" VerticalAlignment="Bottom"  Margin="0,24,0,20" Text="Control Description"/>
                            <TextBlock TextWrapping="Wrap" Style="{StaticResource DescriptionTouchTextStyle}"  HorizontalAlignment="Stretch"  Text="{Binding ControlInfo.Description, FallbackValue='TODO: Add control description in Examples.xml'}" />
                        </StackPanel>
                        <ScrollViewer x:Name="scroll" Style="{StaticResource QSFScrollViewerStyle}"  Padding="{TemplateBinding Padding}" >
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ControlsListViewStyle" TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ControlsListViewItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Grid>
                        <local:QSFTouchScrollViewer x:Name="scroll" Style="{StaticResource QSFTouchScrollViewerStyle}" Padding="{TemplateBinding Padding}" FadeThickness="20" FadeOpacity="0" FadeSpeed="4">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </local:QSFTouchScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CodeRadTabControlTouchStyle" TargetType="{x:Type telerik:RadTabControl}">
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="BorderBrush" Value="#FF848484"/>
        <Setter Property="BorderThickness" Value="1,0,1,1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="HeaderBackground" Value="#FFBFBFBF"/>

        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadTabControl}">
                    <Border>
                        <Grid Margin="20" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="46" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Border Grid.RowSpan="2" CornerRadius="5" BorderBrush="#FFAAB9C0" BorderThickness="1" Background="White">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="7" ShadowDepth="2" Opacity="0.5" />
                                </Border.Effect>
                            </Border>
                            <Border x:Name="Header" CornerRadius="5 5 0 0" Background="#FF79256B" BorderThickness="0 0 0 1" BorderBrush="#FFAAB9C0">
                                <Grid>
                                    <Path Width="223" Height="29" HorizontalAlignment="Right" VerticalAlignment="Top" Data="M0.5,12.1 L222.4,12.1 L222.5,37.6 C176.7,29.8 107.9,19.0 0.5,19.0 z" Stretch="Fill" StrokeThickness="0" >
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0.5,0.0" EndPoint="0.5,0.8">
                                                <GradientStop Offset="1" Color="#FF8E347D"/>
                                                <GradientStop Offset="0.1" Color="#0079256B"/>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>

                                </Grid>
                            </Border>
                            <Grid Grid.RowSpan="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="46"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border  Grid.Row="1"  x:Name="ContentBorder">

                                    <ContentPresenter x:Name="ContentElement" ContentTemplate="{TemplateBinding SelectedContentTemplate}"/>

                                </Border>
                                <ItemsPresenter  HorizontalAlignment="Left" VerticalAlignment="Stretch"/>
                            </Grid>

                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" Margin="10,0,0,0"  IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CodeRadTabItemStyle" TargetType="{x:Type telerik:RadTabItem}">
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource ContentControl.BackgroundTouch}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadTabItem}">
                    <Grid x:Name="wrapper" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStateGroup">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="HeaderElement_Copy">
                                            <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HeaderElement_Copy">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedMouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HeaderElement_Copy">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground)" Storyboard.TargetName="HeaderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Text.MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" To="0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PlacementStates">
                                <VisualState x:Name="HorizontalTop"/>
                                <VisualState x:Name="HorizontalLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="OrientationTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="180"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HorizontalRight"/>
                                <VisualState x:Name="HorizontalBottom">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="OrientationTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="180"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="VerticalTop">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="OrientationTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="-90"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="VerticalLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="OrientationTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="90"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="VerticalRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="OrientationTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="-90"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="VerticalBottom">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="LayoutTransform" Storyboard.TargetName="OrientationTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="-90"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates"/>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" Background="{TemplateBinding Background}" Visibility="Collapsed">
                            <TextBlock x:Name="HeaderElement"  Text="{TemplateBinding Header}" SnapsToDevicePixels="True" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" Style="{DynamicResource TextStyle}"/>

                        </Border>
                        <TextBlock x:Name="HeaderElement_Copy"  Text="{TemplateBinding Header}" SnapsToDevicePixels="True" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource TextStyle}" Foreground="#FFC9C9C9" Margin="{TemplateBinding Padding}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ContentControl" x:Key="ToolBarTouchContentControlStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid Width="222">
                        <Button x:Name="downloadTrialButton" Style="{StaticResource DownloadTrialTouchButtonStyle}" 
							Command="{Binding NavigateCommand}" HorizontalAlignment="Left"  CommandParameter="http://www.telerik.com/account/free-trials/trial-product-versions/single-trial.aspx?pmvid=0&amp;pid=601"/>

                        <local:SearchBox x:Name="ExampleSearch" Style="{StaticResource SearchBoxTouchStyle}"  HorizontalAlignment="Right" local:SearchBoxBehaviors.UseDefaultQuickStartSearchBehavior="True"
							VerticalAlignment="Center" 
							Source="{Binding Data.Examples}">
                            <local:SearchBox.GroupDescriptions>
                                <PropertyGroupDescription PropertyName="ExampleGroup.Control" />
                            </local:SearchBox.GroupDescriptions>
                            <local:SearchBox.ResultEmptyContentTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="20 15" Text="No Examples Found" Style="{StaticResource SubtitleTextStyle}" />
                                </DataTemplate>
                            </local:SearchBox.ResultEmptyContentTemplate>
                            <local:SearchBox.ResultGroupStyle>
                                <GroupStyle>
                                    <GroupStyle.ContainerStyle>
                                        <Style TargetType="{x:Type GroupItem}" BasedOn="{StaticResource SearchGroupItemTouchStyle}"/>
                                    </GroupStyle.ContainerStyle>
                                    <GroupStyle.Panel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </GroupStyle.Panel>
                                </GroupStyle>
                            </local:SearchBox.ResultGroupStyle>
                        </local:SearchBox>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ExampleSearch" Property="IsOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="downloadTrialButton">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>

                                        </DoubleAnimationUsingKeyFrames>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="downloadTrialButton">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DialogStyle" TargetType="local:DialogOverlay">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid x:Name="dialogOverlay" Background="#00000000" Visibility="Collapsed">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="IsOpenState">
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="dialogOverlay">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_DialogBackground">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="200">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="dialogOverlay">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_DialogBackground">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.4">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-200"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="PART_DialogBackground" Fill="Black" Stroke="Black" StrokeThickness="0" Margin="-5000" Opacity="0.4"/>
                        <Grid x:Name="grid" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{DynamicResource ContentControl.Background}" Margin="0,0,0,300" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <ContentPresenter/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- New Styles -->

    <Style x:Key="DownloadTrialHomeSmallButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background" Value="#FF71C74E" />
        <Setter Property="Margin" Value="0 0 25 0" />
        <Setter Property="Width" Value="134" />
        <Setter Property="Height" Value="52" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock VerticalAlignment="Center" Text="DOWNLOAD FREE TRIAL" TextWrapping="Wrap" Margin="5 0"/>
                        <Path Grid.Column="1" Margin="0 0 14 0" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M1e-006,29.6L26,29.6L26,34.6L1e-006,34.6zM0,0L13.0,13.1L26,0L26,13.0L13,26L0,13.0z" Height="32" Width="24" Stretch="Fill" SnapsToDevicePixels="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmallLinkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="/Application;component/Resources/Fonts/#Myriad Pro" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#CC000000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FF00B300" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ViewBaseRegularHomeStyle" TargetType="{x:Type local:ViewBase}">
        <Setter Property="Background" Value="{StaticResource Window.Background}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ViewBase}">
                    <Grid Margin="-30 -20" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="900" />
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="640" />
                            <RowDefinition Height="1*" />
                            <RowDefinition Height="2*" />
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" Grid.ColumnSpan="3" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <TextBlock Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" Grid.ColumnSpan="3" IsHitTestVisible="False" Text="WPF" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="168" FontFamily="Myriad Pro" Foreground="#07000000" Margin="0 -15 0 0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AllControlsHomeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource AllControlsButtonStyle}">
        <Setter Property="FontFamily" Value="/Application;component/Resources/Fonts/#Myriad Pro"/>
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <DataTemplate x:Key="HomeSeparatorTemplate">
        <Rectangle StrokeThickness="0" Height="12" VerticalAlignment="Top">
            <Rectangle.OpacityMask>
                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="White" Offset="0.8"/>
                    <GradientStop Offset="0.1"/>
                </LinearGradientBrush>
            </Rectangle.OpacityMask>
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#21000000" Offset="0"/>
                    <GradientStop Offset="0.75"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
    </DataTemplate>

</ResourceDictionary>
